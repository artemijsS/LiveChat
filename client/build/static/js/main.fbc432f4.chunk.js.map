{"version":3,"sources":["Components/BackGround.jsx","Components/Search.jsx","redux/actions/loading.js","redux/actions/dialog.js","Components/images/logo.jpg","Components/Dialogs.jsx","Components/Chat.jsx","Components/FindNewDialog.jsx","redux/reducers/user.js","redux/reducers/loading.js","redux/reducers/dialog.js","redux/reducers/message.js","redux/reducers/index.js","redux/store.js","socket.js","redux/actions/message.js","Pages/MainPage.jsx","redux/actions/user.js","Pages/AuthPage.jsx","Pages/RegisterPage.jsx","App.js","routes.jsx","Components/alertTemlate.js","index.js"],"names":["BackGround","className","Search","useState","setActiveSearch","xmlns","viewBox","width","height","fill","d","onChange","e","target","value","type","placeholder","setUserLoading","bool","payload","dialogsFetch","token","dispatch","axios","get","headers","Authorization","then","res","dialogsSet","data","answer","dialogsOrderSet","order","arr","activeDialogSet","id","obj","Dialogs","useDispatch","useSelector","dialog","dialogs","activeDialog","dialogsOrder","userData","user","map","key","onClick","src","logo","alt","name","last_message_time","split","last_message_owner","userId","last_message","last_message_status","length","Chat","newMessages","message","messages","setMessages","useEffect","err","console","log","i","owner","text","time","status","data-name","transform","_id","FindNewDialog","setDialogs","createNewDialog","post","createDialog","search","telephone","initialState","loading","state","action","userLoading","dialogId","orderArr","splice","indexOf","unshift","rootReducer","combineReducers","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","socket","io","on","getState","dialogLastMessageSet","MainPage","alert","useAlert","activeFindNewDialog","setActiveFindNewDialog","messageText","setMessageText","sendMessage","preventDefault","document","querySelector","recipient","emit","show","Helmet","onSubmit","userDataFetch","path","fetch","method","Accept","body","JSON","stringify","resp","json","localStorage","setItem","email","loginUser","AuthPage","setLoading","password","form","setForm","changeHandler","event","required","htmlFor","minLength","to","RegisterPage","App","routes","exact","useRoutes","removeItem","BaseIcon","_ref","color","_ref$pushRight","pushRight","undefined","children","React","createElement","stroke","strokeWidth","strokeLinecap","strokeLinejoin","style","marginRight","minWidth","InfoIcon","cx","cy","r","x1","y1","x2","y2","SuccessIcon","points","ErrorIcon","CloseIcon","_extends","Object","assign","arguments","source","prototype","hasOwnProperty","call","alertStyle","backgroundColor","padding","textTransform","borderRadius","display","justifyContent","alignItems","boxShadow","fontFamily","boxSizing","buttonStyle","marginLeft","border","cursor","alertTemplate","options","close","flex","position","positions","TOP_CENTER","timeout","offset","background","transition","transitions","SCALE","ReactDOM","render","StrictMode","template","AlertTemplate","getElementById"],"mappings":"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","file":"static/js/main.fbc432f4.chunk.js","sourcesContent":["import React from \"react\"\r\n\r\nconst BackGround = () => {\r\n\r\n    return (\r\n        <div className=\"header bg-overlay\"/>\r\n    )\r\n}\r\n\r\nexport default BackGround;","import React, {useState} from 'react';\r\n\r\nconst Search = () => {\r\n    const [activeSearch, setActiveSearch] = useState('');\r\n\r\n\r\n    return (\r\n        <div className=\"search\">\r\n            <div className=\"box\">\r\n                <div className=\"input-box\">\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\"><path fill=\"currentColor\" d=\"M15.009 13.805h-.636l-.22-.219a5.184 5.184 0 0 0 1.256-3.386 5.207 5.207 0 1 0-5.207 5.208 5.183 5.183 0 0 0 3.385-1.255l.221.22v.635l4.004 3.999 1.194-1.195-3.997-4.007zm-4.808 0a3.605 3.605 0 1 1 0-7.21 3.605 3.605 0 0 1 0 7.21z\"/></svg>\r\n                    <input onChange={e => setActiveSearch(e.target.value)} type=\"text\" placeholder=\"Поиск или новый чат\"/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search;","export const setUserLoading = bool => ({\r\n    type: 'LOADING_USER',\r\n    payload: bool\r\n})","import axios from \"axios\";\r\nimport {setUserLoading} from \"./loading\";\r\n\r\nexport const dialogsFetch = (token) => {\r\n    return dispatch => {\r\n        return axios.get(\"/api/dialog/find\", { headers: { Authorization:`Bearer ${token}`}}).then(res => {\r\n            dispatch(dialogsSet(res.data.answer))\r\n            dispatch(dialogsOrderSet(res.data.order))\r\n            dispatch(setUserLoading(false))\r\n        })\r\n    }\r\n}\r\n\r\nexport const createDialog = (token, userId) => {\r\n    return dispatch => {\r\n        return axios.post(\"/api/dialog/new\", {userId},{ headers: { Authorization:`Bearer ${token}`}}).then(res => {\r\n            dispatch(dialogsFetch(token)).then(() => {dispatch(activeDialogSet(res.data))})\r\n        })\r\n    }\r\n}\r\n\r\nexport const dialogsOrderSet = (arr) => {\r\n    return {\r\n        type: 'DIALOG_ORDER_SET',\r\n        payload: arr\r\n    }\r\n}\r\n\r\nexport const activeDialogSet = (id) => {\r\n    return {\r\n        type: 'DIALOG_ACTIVE_SET',\r\n        payload: id\r\n    }\r\n}\r\n\r\nexport const dialogsSet = (obj) => {\r\n    return {\r\n        type: 'DIALOGS_SET',\r\n        payload: obj\r\n    }\r\n}\r\n\r\nexport const dialogUserOnlineStatusSet = (id, status) => {\r\n    return {\r\n        type: 'DIALOG_USER_ONLINE_SET',\r\n        payload: status,\r\n        dialogId: id\r\n    }\r\n}\r\n\r\nexport const dialogLastMessageSet = (id, message) => {\r\n    return {\r\n        type: 'DIALOG_LAST_MESSAGE_SET',\r\n        payload: message,\r\n        dialogId: id\r\n    }\r\n}\r\n\r\nexport const dialogOrderChange = (id) => {\r\n    return {\r\n        type: 'DIALOG_ORDER_CHANGE',\r\n        payload: id\r\n    }\r\n}","export default __webpack_public_path__ + \"static/media/logo.c88f8f34.jpg\";","import React from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {activeDialogSet} from \"../redux/actions/dialog\";\r\n\r\nimport logo from \"./images/logo.jpg\";\r\n\r\nconst Dialogs = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const {dialogs, activeDialog, dialogsOrder} = useSelector(({dialog}) => dialog)\r\n    const {userData} = useSelector(({user}) => user)\r\n\r\n    const setActiveDialog = (id) => {\r\n        dispatch(activeDialogSet(id))\r\n    }\r\n\r\n    return (\r\n        <div className=\"dialogs\">\r\n            {dialogs !== {} &&\r\n                dialogsOrder.map(key => {\r\n\r\n                    const obj = dialogs[key]\r\n\r\n                    return (\r\n                        <div onClick={() => {setActiveDialog(key)}} className={activeDialog === key ? \"dialog active\" : \"dialog\"} key={key}>\r\n                            <img src={logo} alt=\"error\"/>\r\n                            <div className=\"details\">\r\n                                <div className=\"dialog-info1\">\r\n                                    <div className=\"dialog-name big-text\">\r\n                                        {obj.name}\r\n                                    </div>\r\n                                    <div className=\"mssg-time\">\r\n                                        {obj.dialog.last_message_time ? obj.dialog.last_message_time.split(' ')[1] : \"\"}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"last-message_notification\">\r\n                                    <div className={`last-message big-text ${obj.dialog.last_message_owner !== userData.userId ? \"noPadding\" : \"\"}`}>\r\n                                        {obj.dialog.last_message &&\r\n                                        <span className={obj.dialog.last_message_owner === userData.userId ? `${obj.dialog.last_message_status ? \"opened\" : \"\"}` : \"none\"}>\r\n                                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 18 18\" width=\"18\" height=\"18\"><path fill=\"currentColor\" d=\"M17.394 5.035l-.57-.444a.434.434 0 0 0-.609.076l-6.39 8.198a.38.38 0 0 1-.577.039l-.427-.388a.381.381 0 0 0-.578.038l-.451.576a.497.497 0 0 0 .043.645l1.575 1.51a.38.38 0 0 0 .577-.039l7.483-9.602a.436.436 0 0 0-.076-.609zm-4.892 0l-.57-.444a.434.434 0 0 0-.609.076l-6.39 8.198a.38.38 0 0 1-.577.039l-2.614-2.556a.435.435 0 0 0-.614.007l-.505.516a.435.435 0 0 0 .007.614l3.887 3.8a.38.38 0 0 0 .577-.039l7.483-9.602a.435.435 0 0 0-.075-.609z\"/></svg>\r\n                                        </span>\r\n                                        }\r\n                                        {obj.dialog.last_message}\r\n                                    </div>\r\n                                    <div className=\"notification\">\r\n                                        {/*<span>2</span>*/}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n            {dialogsOrder.length === 0 &&\r\n                <div>NO-CHATS</div>\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;","import React, {useEffect, useState} from 'react';\r\nimport {useSelector} from \"react-redux\";\r\nimport axios from \"axios\";\r\n\r\nconst Chat = () => {\r\n\r\n    const {activeDialog} = useSelector(({dialog}) => dialog)\r\n    const {token, userId} = useSelector(({user}) => user.userData)\r\n    const {newMessages} = useSelector(({message}) => message)\r\n\r\n    const [messages, setMessages] = useState([])\r\n\r\n    useEffect(() => {\r\n        axios.get(`/api/message/find/${activeDialog}`, { headers: { Authorization: `Bearer ${token}` } }).then(res => {\r\n            setMessages(res.data)\r\n        }, err => {\r\n            console.log(err)\r\n        })\r\n    }, [activeDialog, token])\r\n\r\n    return (\r\n        <div className=\"chat\">\r\n            {\r\n                newMessages && newMessages.map((obj, i) => {\r\n                    return (\r\n                        <div className={`message-block ${userId === obj.owner ? \"message-out\" : \"message-in\"}`} key={i+obj._id}>\r\n                            <div className=\"message\">\r\n                                <div className=\"text-block\">\r\n                                    <div className=\"text\">{obj.text}</div>\r\n                                    <div className=\"time-status\">\r\n                                        {obj.time.split(' ')[1]}\r\n                                        <svg className={obj.status ? \"opened\" : \"\"} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 15\" width=\"16\" height=\"15\"><path fill=\"currentColor\" d=\"M15.01 3.316l-.478-.372a.365.365 0 0 0-.51.063L8.666 9.879a.32.32 0 0 1-.484.033l-.358-.325a.319.319 0 0 0-.484.032l-.378.483a.418.418 0 0 0 .036.541l1.32 1.266c.143.14.361.125.484-.033l6.272-8.048a.366.366 0 0 0-.064-.512zm-4.1 0l-.478-.372a.365.365 0 0 0-.51.063L4.566 9.879a.32.32 0 0 1-.484.033L1.891 7.769a.366.366 0 0 0-.515.006l-.423.433a.364.364 0 0 0 .006.514l3.258 3.185c.143.14.361.125.484-.033l6.272-8.048a.365.365 0 0 0-.063-.51z\"/></svg>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <svg className=\"triangle\" id=\"82734756-3615-4ec8-a382-6c6e9d1975af\" data-name=\"Layer 1\"\r\n                                 xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 67.96699 58.57164\">\r\n                                <path className=\"0082bf7a-a2e0-46d1-be00-84645c2dcbc6\"\r\n                                      d=\"M280.49486,515.96866l-44.88734,15.11513a.69234.69234,0,0,1-.221.03621H214.69244A.69245.69245,0,0,1,214,530.42756V515.31243a.69244.69244,0,0,1,.69244-.69243h65.58144A.69243.69243,0,0,1,280.49486,515.96866Z\"\r\n                                      transform=\"translate(-213.5 -514.12)\"/>\r\n                            </svg>\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n            {\r\n                messages.map((obj, i) => {\r\n                    return (\r\n                        <div className={`message-block ${userId === obj.owner ? \"message-out\" : \"message-in\"}`} key={i+obj._id}>\r\n                            <div className=\"message\">\r\n                                <div className=\"text-block\">\r\n                                    <div className=\"text\">{obj.text}</div>\r\n                                    <div className=\"time-status\">\r\n                                        {obj.time.split(' ')[1]}\r\n                                        <svg className={obj.status ? \"opened\" : \"\"} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 15\" width=\"16\" height=\"15\"><path fill=\"currentColor\" d=\"M15.01 3.316l-.478-.372a.365.365 0 0 0-.51.063L8.666 9.879a.32.32 0 0 1-.484.033l-.358-.325a.319.319 0 0 0-.484.032l-.378.483a.418.418 0 0 0 .036.541l1.32 1.266c.143.14.361.125.484-.033l6.272-8.048a.366.366 0 0 0-.064-.512zm-4.1 0l-.478-.372a.365.365 0 0 0-.51.063L4.566 9.879a.32.32 0 0 1-.484.033L1.891 7.769a.366.366 0 0 0-.515.006l-.423.433a.364.364 0 0 0 .006.514l3.258 3.185c.143.14.361.125.484-.033l6.272-8.048a.365.365 0 0 0-.063-.51z\"/></svg>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <svg className=\"triangle\" id=\"82734756-3615-4ec8-a382-6c6e9d1975af\" data-name=\"Layer 1\"\r\n                                 xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 67.96699 58.57164\">\r\n                                <path className=\"0082bf7a-a2e0-46d1-be00-84645c2dcbc6\"\r\n                                      d=\"M280.49486,515.96866l-44.88734,15.11513a.69234.69234,0,0,1-.221.03621H214.69244A.69245.69245,0,0,1,214,530.42756V515.31243a.69244.69244,0,0,1,.69244-.69243h65.58144A.69243.69243,0,0,1,280.49486,515.96866Z\"\r\n                                      transform=\"translate(-213.5 -514.12)\"/>\r\n                            </svg>\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chat;","import React, {useState} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport logo from \"./images/logo.jpg\"\r\nimport axios from \"axios\";\r\nimport {createDialog} from \"../redux/actions/dialog\";\r\n\r\n\r\nconst FindNewDialog = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const {token} = useSelector(({user}) => user.userData)\r\n\r\n    const [dialogs, setDialogs] = useState([]);\r\n\r\n    const newDialogs = (search) => {\r\n        if (search.length > 1)\r\n            axios.post(\"/api/user/find\", {telephone: search},{ headers: { Authorization: `Bearer ${token}` }}).then(res => {\r\n                setDialogs(res.data)\r\n            })\r\n    }\r\n\r\n    const createNewDialog = (userId) => {\r\n        dispatch(createDialog(token, userId))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"search\">\r\n                <div className=\"box\">\r\n                    <div className=\"input-box\">\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\"><path fill=\"currentColor\" d=\"M15.009 13.805h-.636l-.22-.219a5.184 5.184 0 0 0 1.256-3.386 5.207 5.207 0 1 0-5.207 5.208 5.183 5.183 0 0 0 3.385-1.255l.221.22v.635l4.004 3.999 1.194-1.195-3.997-4.007zm-4.808 0a3.605 3.605 0 1 1 0-7.21 3.605 3.605 0 0 1 0 7.21z\"/></svg>\r\n                        <input onChange={(e) => {newDialogs(e.target.value)}} type=\"text\" placeholder=\"Start new dialog - enter telephone\"/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"dialogs\">\r\n                {\r\n                    dialogs.map((user, i) => {\r\n                        return (\r\n                            <div onClick={() => createNewDialog(user._id)} className=\"dialog\" key={user._id+i}>\r\n                                <img src={logo} alt=\"error\"/>\r\n                                <div className=\"details\">\r\n                                    <div className=\"dialog-info1\">\r\n                                        <div className=\"dialog-name big-text\">\r\n                                            {user.name} {user.telephone}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default FindNewDialog;","const initialState = {\r\n    userData: {},\r\n    loading: false\r\n}\r\n\r\nconst user = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'USER_LOGIN':\r\n            return {\r\n                ...state,\r\n                userData: action.payload\r\n            }\r\n        case 'USER_LOGOUT':\r\n            return {...state,\r\n                userData: {}\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default user;","const initialState = {\r\n    userLoading: true\r\n}\r\n\r\nconst loading = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'LOADING_USER':\r\n            return {\r\n                ...state,\r\n                userLoading: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default loading;","const initialState = {\r\n    dialogs: {},\r\n    dialogsOrder: [],\r\n    activeDialog: ''\r\n}\r\n\r\nconst dialog = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'DIALOGS_SET':\r\n            return {\r\n                ...state,\r\n                dialogs: action.payload\r\n            }\r\n        case 'DIALOG_ACTIVE_SET':\r\n            return {\r\n                ...state,\r\n                activeDialog: action.payload\r\n            }\r\n        case 'DIALOG_ORDER_SET':\r\n            return {\r\n                ...state,\r\n                dialogsOrder: action.payload\r\n            }\r\n        case 'DIALOG_USER_ONLINE_SET':\r\n            return {\r\n                ...state,\r\n                dialogs: {\r\n                    ...state.dialogs,\r\n                    [action.dialogId]: {\r\n                        ...state.dialogs[action.dialogId],\r\n                        status: action.payload\r\n                    }\r\n                }\r\n            }\r\n        case 'DIALOG_LAST_MESSAGE_SET':\r\n            return {\r\n                ...state,\r\n                dialogs: {\r\n                    ...state.dialogs,\r\n                    [action.dialogId]: {\r\n                        ...state.dialogs[action.dialogId],\r\n                        dialog: {\r\n                            ...state.dialogs[action.dialogId].dialog,\r\n                            last_message: action.payload.text,\r\n                            last_message_time: action.payload.time,\r\n                            last_message_owner: action.payload.owner,\r\n                            last_message_status: action.payload.status\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        case 'DIALOG_ORDER_CHANGE':\r\n\r\n            let orderArr = state.dialogsOrder\r\n            const dialogId = action.payload\r\n            orderArr.splice(orderArr.indexOf(dialogId), 1)\r\n            orderArr.unshift(dialogId)\r\n\r\n            return {\r\n                ...state,\r\n                dialogsOrder: orderArr\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default dialog;","const initialState = {\r\n    newMessages: []\r\n}\r\n\r\nconst message = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'MESSAGES_NEW_SET':\r\n            let messages;\r\n            if (state.newMessages) {\r\n                messages = state.newMessages\r\n                messages.unshift(action.payload)\r\n            } else {\r\n                messages = [action.payload]\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                newMessages: messages\r\n            }\r\n        case 'MESSAGES_NEW_DELETE':\r\n            return {\r\n                ...state,\r\n                newMessages: []\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default message;","import { combineReducers } from \"redux\";\r\nimport user from \"./user\"\r\nimport loading from \"./loading\"\r\nimport dialog from \"./dialog\"\r\nimport message from \"./message\";\r\n\r\nconst rootReducer = combineReducers({\r\n    user,\r\n    loading,\r\n    dialog,\r\n    message\r\n});\r\n\r\nexport default rootReducer;","import { createStore, compose, applyMiddleware } from 'redux';\r\nimport rootReducer from \"./reducers\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(rootReducer, composeEnhancer(applyMiddleware(thunk)));\r\n\r\nexport default store;\r\n\r\n","import { io } from \"socket.io-client\"\r\nimport store from \"./redux/store\"\r\nimport {dialogLastMessageSet, dialogOrderChange, dialogUserOnlineStatusSet} from \"./redux/actions/dialog\"\r\nimport { messagesNewSet } from \"./redux/actions/message\";\r\n\r\nconst socket = io()\r\n\r\nsocket.on('userOnline', (data) => {\r\n    store.dispatch(dialogUserOnlineStatusSet(data.dialogId, data.status))\r\n})\r\n\r\nsocket.on('newMessage', (message) => {\r\n    if (store.getState().dialog.activeDialog === message.dialogId)\r\n        store.dispatch(messagesNewSet(message))\r\n    store.dispatch(dialogLastMessageSet(message.dialogId, message))\r\n    store.dispatch(dialogOrderChange(message.dialogId))\r\n})\r\n\r\nexport default socket;","export const messagesNewSet = (msg) => {\r\n    return {\r\n        type: 'MESSAGES_NEW_SET',\r\n        payload: msg\r\n    }\r\n}\r\n\r\nexport const messageNewDelete = () => {\r\n    return {\r\n        type: 'MESSAGES_NEW_DELETE'\r\n    }\r\n}","import React, {useState, useEffect} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport { Helmet } from 'react-helmet';\r\nimport {BackGround, Chat, Dialogs, FindNewDialog, Search} from \"../Components\";\r\nimport axios from \"axios\";\r\nimport {useAlert} from \"react-alert\";\r\nimport socket from \"../socket\";\r\nimport logo from \"../Components/images/logo.jpg\";\r\nimport {messageNewDelete} from \"../redux/actions/message\";\r\n\r\n\r\nfunction MainPage () {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const {dialogs, activeDialog} = useSelector(({dialog}) => dialog)\r\n    const {token} = useSelector(({user}) => user.userData)\r\n\r\n    const alert = useAlert()\r\n\r\n    const [activeFindNewDialog, setActiveFindNewDialog] = useState(false)\r\n    const [messageText, setMessageText] = useState('')\r\n\r\n\r\n    useEffect(() => {\r\n        setActiveFindNewDialog(false);\r\n        dispatch(messageNewDelete())\r\n    }, [activeDialog])\r\n\r\n    const sendMessage = (e) => {\r\n        e.preventDefault();\r\n        const input = document.querySelector('#sendMessageInput');\r\n        input.value = \"\"\r\n\r\n        const message = {\r\n            recipient: dialogs[activeDialog].id,\r\n            text: messageText,\r\n            dialogId: activeDialog\r\n        }\r\n\r\n        axios.post(\"/api/message/new\", message, { headers: { Authorization: `Bearer ${token}` }}).then(message => {\r\n            socket.emit('newMessage', message.data)\r\n        }, err => {\r\n            alert.show('Error with sending message');\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Helmet>\r\n                <title>Live Chat</title>\r\n            </Helmet>\r\n            <BackGround/>\r\n            <div className=\"all-screen\">\r\n                <div className=\"main-box\">\r\n                    <div className=\"whats-app\">\r\n                        <div className=\"side-bar\">\r\n                            { activeFindNewDialog\r\n                                ?\r\n                                    <>\r\n                                        <div className=\"find-header\">\r\n                                            <div className=\"box\">\r\n                                                <div className=\"back\">\r\n                                                    <svg onClick={() => {setActiveFindNewDialog(false)}} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\"><path fill=\"currentColor\" d=\"M12 4l1.4 1.4L7.8 11H20v2H7.8l5.6 5.6L12 20l-8-8 8-8z\"/></svg>\r\n                                                </div>\r\n                                                <div className=\"big-text\">\r\n                                                    New Chat\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <FindNewDialog/>\r\n                                    </>\r\n                                :\r\n                                <div>\r\n                                    <div className=\"box-header\">\r\n                                        <img src={logo} alt=\"error\"/>\r\n                                        <div className=\"settings\">\r\n                                            <svg id=\"ee51d023-7db6-4950-baf7-c34874b80976\"\r\n                                                 xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\"\r\n                                                 height=\"24\">\r\n                                                <path fill=\"currentColor\"\r\n                                                      d=\"M12 20.664a9.163 9.163 0 0 1-6.521-2.702.977.977 0 0 1 1.381-1.381 7.269 7.269 0 0 0 10.024.244.977.977 0 0 1 1.313 1.445A9.192 9.192 0 0 1 12 20.664zm7.965-6.112a.977.977 0 0 1-.944-1.229 7.26 7.26 0 0 0-4.8-8.804.977.977 0 0 1 .594-1.86 9.212 9.212 0 0 1 6.092 11.169.976.976 0 0 1-.942.724zm-16.025-.39a.977.977 0 0 1-.953-.769 9.21 9.21 0 0 1 6.626-10.86.975.975 0 1 1 .52 1.882l-.015.004a7.259 7.259 0 0 0-5.223 8.558.978.978 0 0 1-.955 1.185z\"/>\r\n                                            </svg>\r\n                                            <svg onClick={() => {setActiveFindNewDialog(true)}} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\"\r\n                                                 height=\"24\">\r\n                                                <path fill=\"currentColor\"\r\n                                                      d=\"M19.005 3.175H4.674C3.642 3.175 3 3.789 3 4.821V21.02l3.544-3.514h12.461c1.033 0 2.064-1.06 2.064-2.093V4.821c-.001-1.032-1.032-1.646-2.064-1.646zm-4.989 9.869H7.041V11.1h6.975v1.944zm3-4H7.041V7.1h9.975v1.944z\"/>\r\n                                            </svg>\r\n                                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\"\r\n                                                 height=\"24\">\r\n                                                <path fill=\"currentColor\"\r\n                                                      d=\"M12 7a2 2 0 1 0-.001-4.001A2 2 0 0 0 12 7zm0 2a2 2 0 1 0-.001 3.999A2 2 0 0 0 12 9zm0 6a2 2 0 1 0-.001 3.999A2 2 0 0 0 12 15z\"/>\r\n                                            </svg>\r\n                                        </div>\r\n                                    </div>\r\n                                    <Search/>\r\n                                    <Dialogs/>\r\n                                </div>\r\n                                }\r\n                        </div>\r\n                        { activeDialog\r\n                            ?\r\n                                <div className=\"chat-bar\">\r\n                                    <div className=\"box-header\">\r\n                                        <img src={logo} alt=\"error\"/>\r\n                                        <div className=\"dialog-info\">\r\n                                            <div className=\"dialog-name\">\r\n                                                {dialogs[activeDialog].name}\r\n                                            </div>\r\n                                            <div className=\"last-time-seen\">\r\n                                                {dialogs[activeDialog].status ? \"online\" : \"offline\"}\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"settings\">\r\n                                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\"><path fill=\"currentColor\" d=\"M15.9 14.3H15l-.3-.3c1-1.1 1.6-2.7 1.6-4.3 0-3.7-3-6.7-6.7-6.7S3 6 3 9.7s3 6.7 6.7 6.7c1.6 0 3.2-.6 4.3-1.6l.3.3v.8l5.1 5.1 1.5-1.5-5-5.2zm-6.2 0c-2.6 0-4.6-2.1-4.6-4.6s2.1-4.6 4.6-4.6 4.6 2.1 4.6 4.6-2 4.6-4.6 4.6z\"/></svg>\r\n                                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\"><path fill=\"currentColor\" d=\"M12 7a2 2 0 1 0-.001-4.001A2 2 0 0 0 12 7zm0 2a2 2 0 1 0-.001 3.999A2 2 0 0 0 12 9zm0 6a2 2 0 1 0-.001 3.999A2 2 0 0 0 12 15z\"/></svg>\r\n                                        </div>\r\n                                    </div>\r\n                                    <Chat/>\r\n                                    <div className=\"footer\">\r\n                                        <div className=\"box\">\r\n                                            <form onSubmit={sendMessage} className=\"input-box\">\r\n                                                <input onChange={e => setMessageText(e.target.value)} id=\"sendMessageInput\" type=\"text\" placeholder=\"Введите сообщение\"/>\r\n                                                <svg onClick={sendMessage} type=\"submit\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\"><path fill=\"currentColor\" d=\"M1.101 21.757L23.8 12.028 1.101 2.3l.011 7.912 13.623 1.816-13.623 1.817-.011 7.912z\"/></svg>\r\n                                            </form>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            :\r\n                                <div className=\"chat-bar\"/>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MainPage;","import {setUserLoading} from './loading';\r\nimport {dialogsFetch} from './dialog';\r\nimport socket from \"../../socket\";\r\n\r\nexport const userDataFetch = (obj, path) => {\r\n    return dispatch => {\r\n        return fetch(`/api/auth/${path}`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Accept: 'application/json',\r\n            },\r\n            body: JSON.stringify(obj)\r\n        })\r\n            .then(resp => resp.json())\r\n            .then(data => {\r\n                if (data.message) {\r\n                    return data.message\r\n                } else {\r\n                    localStorage.setItem(\"token\", data.token)\r\n                    const user = {\r\n                        name: data.name,\r\n                        email: data.email,\r\n                        telephone: data.telephone,\r\n                        userId: data.userId,\r\n                        token: data.token\r\n                    }\r\n                    dispatch(loginUser(user))\r\n                    dispatch(setUserLoading(true))\r\n                    socket.emit('userOnline', user.userId)\r\n                    dispatch(dialogsFetch(user.token))\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport const getProfileFetch = () => {\r\n    return dispatch => {\r\n        const token = localStorage.token;\r\n        dispatch(setUserLoading(true));\r\n        if (token) {\r\n            return fetch(\"/api/auth/check\", {\r\n                method: \"GET\",\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    Accept: 'application/json',\r\n                    'Authorization': `Bearer ${token}`\r\n                }\r\n            })\r\n                .then(resp => resp.json())\r\n                .then(data => {\r\n                    if (data.message) {\r\n                        console.log(data.message)\r\n                        localStorage.removeItem(\"token\")\r\n                        dispatch(setUserLoading(false))\r\n                    } else {\r\n                        const user = {\r\n                            name: data.name,\r\n                            email: data.email,\r\n                            telephone: data.telephone,\r\n                            userId: data.userId,\r\n                            token: token\r\n                        }\r\n                        dispatch(loginUser(user))\r\n                        socket.emit('userOnline', user.userId)\r\n                        dispatch(dialogsFetch(token))\r\n                    }\r\n                })\r\n        } else {\r\n            dispatch(setUserLoading(false))\r\n        }\r\n    }\r\n}\r\n\r\nexport const logoutUser = () => {\r\n    localStorage.removeItem(\"token\")\r\n    return {\r\n        type: 'USER_LOGOUT'\r\n    }\r\n}\r\n\r\nconst loginUser = obj => ({\r\n    type: 'USER_LOGIN',\r\n    payload: obj\r\n})","import React, {useState} from 'react';\r\nimport { Helmet } from 'react-helmet';\r\nimport {Link} from \"react-router-dom\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {useAlert} from \"react-alert\";\r\nimport {userDataFetch} from \"../redux/actions/user\";\r\n\r\n\r\nfunction AuthPage () {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const alert = useAlert()\r\n\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const [form, setForm] = useState({\r\n        email: '', password: ''\r\n    })\r\n\r\n    const changeHandler = event => {\r\n        setForm({ ...form, [event.target.name]: event.target.value })\r\n    }\r\n\r\n    const submit = event => {\r\n        event.preventDefault()\r\n        setLoading(true)\r\n        dispatch(userDataFetch(form,'login')).then(res => {\r\n            if (res) {\r\n                setLoading(false)\r\n                alert.show(res);\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Helmet>\r\n                <title>Login</title>\r\n            </Helmet>\r\n            <div className=\"header bg-overlay\"/>\r\n            <div className=\"all-screen\">\r\n                <div className=\"main-box\">\r\n                    <form className=\"formLogin\" onSubmit={submit}>\r\n                        {loading\r\n                            ?\r\n                                <h1>Loading</h1>\r\n                            :\r\n                                <h1>Login</h1>\r\n                        }\r\n                        <div className=\"text_field\">\r\n                            <input type=\"email\" id=\"email\" name=\"email\" required onChange={changeHandler}/>\r\n                            <span/>\r\n                            <label htmlFor=\"email\">E-mail</label>\r\n                        </div>\r\n                        <div className=\"text_field\">\r\n                            <input type=\"password\" id=\"pass\" name=\"password\" minLength=\"6\" required onChange={changeHandler}/>\r\n                            <span/>\r\n                            <label htmlFor=\"pass\">Password</label>\r\n                        </div>\r\n                        <button type=\"submit\">LOGIN</button>\r\n                        <Link to=\"/registration\">Not a member? Sign in!</Link>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AuthPage;","import React, {useState} from 'react';\r\nimport { Helmet } from 'react-helmet';\r\nimport {Link} from 'react-router-dom';\r\nimport {useDispatch} from 'react-redux';\r\nimport {userDataFetch} from \"../redux/actions/user\";\r\nimport { useAlert } from 'react-alert'\r\n\r\n\r\nfunction RegisterPage () {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const alert = useAlert()\r\n\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const [form, setForm] = useState({\r\n        telephone: '', name: '', email: '', password: ''\r\n    })\r\n\r\n    const changeHandler = event => {\r\n        setForm({ ...form, [event.target.name]: event.target.value })\r\n    }\r\n\r\n    const submit = event => {\r\n        event.preventDefault()\r\n        setLoading(true)\r\n        dispatch(userDataFetch(form,'register')).then(res => {\r\n            if (res) {\r\n                setLoading(false)\r\n                alert.show(res);\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Helmet>\r\n                <title>Registration</title>\r\n            </Helmet>\r\n            <div className=\"header bg-overlay\"/>\r\n            <div className=\"all-screen\">\r\n                <div className=\"main-box\">\r\n                    <form className=\"formLogin\" onSubmit={submit}>\r\n                        {loading\r\n                            ?\r\n                                <h1>Loading</h1>\r\n                            :\r\n                                <h1>Registration</h1>\r\n                        }\r\n                        <div className=\"text_field\" >\r\n                            <input type=\"tel\" id=\"telephone\" name=\"telephone\" required onChange={changeHandler}/>\r\n                            <span/>\r\n                            <label htmlFor=\"telephone\">Telephone</label>\r\n                        </div>\r\n                        <div className=\"text_field\">\r\n                            <input type=\"tel\" id=\"name\" name=\"name\" required onChange={changeHandler}/>\r\n                            <span/>\r\n                            <label htmlFor=\"name\">Name</label>\r\n                        </div>\r\n                        <div className=\"text_field\">\r\n                            <input type=\"email\" id=\"email\" name=\"email\" required onChange={changeHandler}/>\r\n                            <span/>\r\n                            <label htmlFor=\"email\">E-mail</label>\r\n                        </div>\r\n                        <div className=\"text_field\">\r\n                            <input type=\"password\" id=\"pass\" name=\"password\" minLength=\"6\" required onChange={changeHandler}/>\r\n                            <span/>\r\n                            <label htmlFor=\"pass\">Password</label>\r\n                        </div>\r\n                        <button type=\"submit\">REGISTER</button>\r\n                        <Link to=\"/login\">Already registered? Log in!</Link>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RegisterPage;","import './App.css';\nimport {useRoutes} from \"./routes\";\nimport {BrowserRouter as Router} from \"react-router-dom\";\nimport {useEffect} from \"react\";\nimport {getProfileFetch} from \"./redux/actions/user\";\nimport {useDispatch} from \"react-redux\";\n\nfunction App() {\n    const routes = useRoutes()\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        dispatch(getProfileFetch())\n    }, [])\n\n    return (\n        <Router>\n            {routes}\n        </Router>\n    );\n}\n\nexport default App;\n","import React from 'react';\r\nimport {Switch, Route, Redirect} from 'react-router-dom'\r\n\r\nimport {MainPage, AuthPage, RegisterPage} from \"./Pages\";\r\n\r\nimport {useSelector} from \"react-redux\";\r\n\r\n\r\nexport const useRoutes = () => {\r\n\r\n    const {userData} = useSelector(({ user }) => user);\r\n    const {userLoading} = useSelector(({ loading }) => loading);\r\n\r\n    if (userLoading) {\r\n        return (\r\n            <Switch>\r\n                <Route path=\"/\" exact>\r\n                    <div>LOADING PAGE</div>\r\n                </Route>\r\n                <Redirect to=\"/\"/>\r\n            </Switch>\r\n        )\r\n    } else {\r\n        if (userData.userId) {\r\n            return (\r\n                <Switch>\r\n                    <Route path=\"/\" exact>\r\n                        <MainPage/>\r\n                    </Route>\r\n                    <Redirect to=\"/\"/>\r\n                </Switch>\r\n            )\r\n        } else {\r\n            return (\r\n                <Switch>\r\n                    <Route path=\"/login\" exact>\r\n                        <AuthPage/>\r\n                    </Route>\r\n                    <Route path=\"/registration\" exact>\r\n                        <RegisterPage/>\r\n                    </Route>\r\n                    <Redirect to=\"/login\"/>\r\n                </Switch>\r\n            )\r\n        }\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nvar BaseIcon = function BaseIcon(_ref) {\r\n    var color = _ref.color,\r\n        _ref$pushRight = _ref.pushRight,\r\n        pushRight = _ref$pushRight === undefined ? true : _ref$pushRight,\r\n        children = _ref.children;\r\n    return React.createElement(\r\n        'svg',\r\n        {\r\n            xmlns: 'http://www.w3.org/2000/svg',\r\n            width: '24',\r\n            height: '24',\r\n            viewBox: '0 0 24 24',\r\n            fill: 'none',\r\n            stroke: color,\r\n            strokeWidth: '2',\r\n            strokeLinecap: 'round',\r\n            strokeLinejoin: 'round',\r\n            style: { marginRight: pushRight ? '20px' : '0', minWidth: 24 }\r\n        },\r\n        children\r\n    );\r\n};\r\n\r\nvar InfoIcon = function InfoIcon() {\r\n    return React.createElement(\r\n        BaseIcon,\r\n        { color: '#e93333' },\r\n        React.createElement('circle', { cx: '12', cy: '12', r: '10' }),\r\n        React.createElement('line', { x1: '12', y1: '16', x2: '12', y2: '12' }),\r\n        React.createElement('line', { x1: '12', y1: '8', x2: '12', y2: '8' })\r\n    );\r\n};\r\n\r\nvar SuccessIcon = function SuccessIcon() {\r\n    return React.createElement(\r\n        BaseIcon,\r\n        { color: '#31B404' },\r\n        React.createElement('path', { d: 'M22 11.08V12a10 10 0 1 1-5.93-9.14' }),\r\n        React.createElement('polyline', { points: '22 4 12 14.01 9 11.01' })\r\n    );\r\n};\r\n\r\nvar ErrorIcon = function ErrorIcon() {\r\n    return React.createElement(\r\n        BaseIcon,\r\n        { color: '#FF0040' },\r\n        React.createElement('circle', { cx: '12', cy: '12', r: '10' }),\r\n        React.createElement('line', { x1: '12', y1: '8', x2: '12', y2: '12' }),\r\n        React.createElement('line', { x1: '12', y1: '16', x2: '12', y2: '16' })\r\n    );\r\n};\r\n\r\nvar CloseIcon = function CloseIcon() {\r\n    return React.createElement(\r\n        BaseIcon,\r\n        { color: '#FFFFFF', pushRight: false },\r\n        React.createElement('line', { x1: '18', y1: '6', x2: '6', y2: '18' }),\r\n        React.createElement('line', { x1: '6', y1: '6', x2: '18', y2: '18' })\r\n    );\r\n};\r\n\r\nvar _extends = Object.assign || function (target) {\r\n    for (var i = 1; i < arguments.length; i++) {\r\n        var source = arguments[i];\r\n\r\n        for (var key in source) {\r\n            if (Object.prototype.hasOwnProperty.call(source, key)) {\r\n                target[key] = source[key];\r\n            }\r\n        }\r\n    }\r\n\r\n    return target;\r\n};\r\n\r\nvar alertStyle = {\r\n    backgroundColor: '#2f9688',\r\n    color: 'white',\r\n    padding: '10px',\r\n    textTransform: 'uppercase',\r\n    borderRadius: '3px',\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    boxShadow: '0px 2px 2px 2px rgba(0, 0, 0, 0.03)',\r\n    fontFamily: 'Arial',\r\n    width: '300px',\r\n    boxSizing: 'border-box'\r\n};\r\n\r\nvar buttonStyle = {\r\n    marginLeft: '20px',\r\n    border: 'none',\r\n    backgroundColor: 'transparent',\r\n    cursor: 'pointer',\r\n    color: '#FFFFFF'\r\n};\r\n\r\nvar alertTemplate = function alertTemplate(_ref) {\r\n    var message = _ref.message,\r\n        options = _ref.options,\r\n        style = _ref.style,\r\n        close = _ref.close;\r\n\r\n    return React.createElement(\r\n        'div',\r\n        { style: _extends({}, alertStyle, style) },\r\n        options.type === 'info' && React.createElement(InfoIcon, null),\r\n        options.type === 'success' && React.createElement(SuccessIcon, null),\r\n        options.type === 'error' && React.createElement(ErrorIcon, null),\r\n        React.createElement(\r\n            'span',\r\n            { style: { flex: 2 } },\r\n            message\r\n        ),\r\n        React.createElement(\r\n            'button',\r\n            { onClick: close, style: buttonStyle },\r\n            React.createElement(CloseIcon, null)\r\n        )\r\n    );\r\n};\r\n\r\nexport default alertTemplate;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {Provider} from 'react-redux'\nimport store from \"./redux/store\";\nimport { transitions, positions, Provider as AlertProvider } from 'react-alert';\nimport AlertTemplate from './Components/alertTemlate';\n\n// optional configuration\nconst options = {\n    // you can also just use 'bottom center'\n    position: positions.TOP_CENTER,\n    timeout: 5000,\n    offset: '30px',\n    background: '#2f9688',\n    // you can also just use 'scale'\n    transition: transitions.SCALE\n}\n\nReactDOM.render(\n  <React.StrictMode>\n      <Provider store={store}>\n          <AlertProvider template={AlertTemplate} {...options}>\n              <App />\n          </AlertProvider>\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}
{"version":3,"sources":["Components/BackGround.jsx","Components/Search.jsx","redux/actions/loading.js","redux/reducers/user.js","redux/reducers/loading.js","redux/reducers/dialog.js","redux/reducers/message.js","redux/reducers/index.js","redux/store.js","redux/actions/message.js","socket.js","redux/actions/dialog.js","Components/Dialogs.jsx","Components/Chat.jsx","redux/actions/user.js","Components/FindNewDialog.jsx","Components/Profile.jsx","Components/UserInfo.jsx","Pages/MainPage.jsx","Pages/AuthPage.jsx","Pages/RegisterPage.jsx","Pages/LoadingPage.jsx","App.js","routes.jsx","Components/alertTemlate.js","index.js"],"names":["BackGround","className","Search","useState","setActiveSearch","xmlns","viewBox","width","height","fill","d","onChange","e","target","value","type","placeholder","setUserLoading","bool","payload","initialState","userData","loading","infoAboutUser","id","user","state","action","socket","emit","name","description","photo","userLoading","dialogs","dialogsOrder","activeDialog","dialog","dialogId","status","last_message","text","last_message_time","time","last_message_owner","owner","last_message_status","orderArr","splice","indexOf","unshift","orderActual","obj","arr","email","telephone","deleted","newMessages","message","messages","msg","map","ms","i","length","_id","rootReducer","combineReducers","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","messagesNewSet","io","on","data","dispatch","dialogUserOnlineStatusSet","getState","userId","dialogLastMessageSet","dialogLastMessageStatusSet","dialogOrderChange","dialogNewSet","newDialog","messagesNewIdSet","deleteDialogInfo","dialogsFetch","token","axios","get","headers","Authorization","then","res","dialogsSet","answer","dialogsOrderSet","order","activeDialogSet","deleteDialogOne","Dialogs","useDispatch","useSelector","today","setToday","yesterday","setYesterday","useEffect","Date","setDate","getDate","key","split","onClick","cloudName","publicId","style","color","date_obj","day","month","getMonth","year","getFullYear","Chat","setMessages","setLoading","err","console","log","t","document","querySelectorAll","baseVal","data-name","transform","j","created_at","userDataFetch","path","fetch","method","Accept","body","JSON","stringify","resp","json","localStorage","setItem","role","loginUser","infoAboutUserSet","FindNewDialog","setDialogs","search","post","crop","Profile","inputName","setInputName","inputAbout","setInputAbout","nameInput","setNameInput","aboutInput","setAboutInput","loadingPhoto","setLoadingPhoto","alert","useAlert","imageInput","useRef","uploadImage","base64EncodedImage","a","img","show","ref","file","files","reader","FileReader","readAsDataURL","onloadend","result","display","accept","current","click","defaultValue","readOnly","updateName","success","getElementById","about","UserInfo","setName","setPhoto","setStatus","setTelephone","setEmail","setAbout","createNewDialog","marginBottom","confirm","deleteDialog","MainPage","activeFindNewDialog","setActiveFindNewDialog","profile","setProfile","userInfo","setUserInfo","messageText","setMessageText","settingsPopUp","setSettingsPopUp","popUpRef","settingMenuRef","handleOutsideClick","composedPath","includes","addEventListener","removeEventListener","sendMessage","preventDefault","querySelector","recipient","date","userInfoShow","Helmet","removeItem","to","onSubmit","disabled","hours","getHours","minutes","getMinutes","seconds","getSeconds","AuthPage","password","form","setForm","changeHandler","event","required","htmlFor","minLength","RegisterPage","LoadingPage","App","routes","exact","useRoutes","BaseIcon","_ref","_ref$pushRight","pushRight","undefined","children","React","createElement","stroke","strokeWidth","strokeLinecap","strokeLinejoin","marginRight","minWidth","InfoIcon","cx","cy","r","x1","y1","x2","y2","SuccessIcon","points","ErrorIcon","CloseIcon","_extends","Object","assign","arguments","source","prototype","hasOwnProperty","call","alertStyle","backgroundColor","padding","textTransform","borderRadius","justifyContent","alignItems","boxShadow","fontFamily","boxSizing","buttonStyle","marginLeft","border","cursor","alertTemplate","options","close","flex","position","positions","TOP_CENTER","timeout","offset","background","transition","transitions","SCALE","ReactDOM","render","StrictMode","template","AlertTemplate"],"mappings":"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","file":"static/js/main.d2a0921d.chunk.js","sourcesContent":["import React from \"react\"\r\n\r\nconst BackGround = () => {\r\n\r\n    return (\r\n        <div className=\"header bg-overlay\"/>\r\n    )\r\n}\r\n\r\nexport default BackGround;","import React, {useState} from 'react';\r\n\r\nconst Search = () => {\r\n    const [activeSearch, setActiveSearch] = useState('');\r\n\r\n\r\n    return (\r\n        <div className=\"search\">\r\n            <div className=\"box\">\r\n                <div className=\"input-box\">\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\"><path fill=\"currentColor\" d=\"M15.009 13.805h-.636l-.22-.219a5.184 5.184 0 0 0 1.256-3.386 5.207 5.207 0 1 0-5.207 5.208 5.183 5.183 0 0 0 3.385-1.255l.221.22v.635l4.004 3.999 1.194-1.195-3.997-4.007zm-4.808 0a3.605 3.605 0 1 1 0-7.21 3.605 3.605 0 0 1 0 7.21z\"/></svg>\r\n                    <input onChange={e => setActiveSearch(e.target.value)} type=\"text\" placeholder=\"Поиск или новый чат\"/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search;","export const setUserLoading = bool => ({\r\n    type: 'LOADING_USER',\r\n    payload: bool\r\n})","import socket from \"../../socket\";\r\n\r\nconst initialState = {\r\n    userData: {},\r\n    loading: false,\r\n    infoAboutUser: {\r\n        bool: false,\r\n        id: null\r\n    }\r\n}\r\n\r\nconst user = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'USER_LOGIN':\r\n            return {\r\n                ...state,\r\n                userData: action.payload\r\n            }\r\n        case 'USER_LOGOUT':\r\n            socket.emit('logout')\r\n            return {\r\n                ...state,\r\n                userData: {}\r\n            }\r\n        case 'USER_UPDATE_NAME':\r\n            return {\r\n                ...state,\r\n                userData: {\r\n                    ...state.userData,\r\n                    name: action.payload\r\n                }\r\n            }\r\n        case 'USER_UPDATE_ABOUT':\r\n            return {\r\n                ...state,\r\n                userData: {\r\n                    ...state.userData,\r\n                    description: action.payload\r\n                }\r\n            }\r\n        case 'USER_UPDATE_PHOTO':\r\n            return {\r\n                ...state,\r\n                userData: {\r\n                    ...state.userData,\r\n                    photo: action.payload\r\n                }\r\n            }\r\n        case 'INFO_ABOUT_USER_SET':\r\n            return {\r\n                ...state,\r\n                infoAboutUser: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default user;","const initialState = {\r\n    userLoading: true\r\n}\r\n\r\nconst loading = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'LOADING_USER':\r\n            return {\r\n                ...state,\r\n                userLoading: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default loading;","const initialState = {\r\n    dialogs: {},\r\n    dialogsOrder: [],\r\n    activeDialog: ''\r\n}\r\n\r\nconst dialog = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'DIALOGS_SET':\r\n            return {\r\n                ...state,\r\n                dialogs: action.payload\r\n            }\r\n        case 'DIALOG_ACTIVE_SET':\r\n            return {\r\n                ...state,\r\n                activeDialog: action.payload\r\n            }\r\n        case 'DIALOG_ORDER_SET':\r\n            return {\r\n                ...state,\r\n                dialogsOrder: action.payload\r\n            }\r\n        case 'DIALOG_USER_ONLINE_SET':\r\n            return {\r\n                ...state,\r\n                dialogs: {\r\n                    ...state.dialogs,\r\n                    [action.dialogId]: {\r\n                        ...state.dialogs[action.dialogId],\r\n                        status: action.payload\r\n                    }\r\n                }\r\n            }\r\n        case 'DIALOG_LAST_MESSAGE_SET':\r\n            return {\r\n                ...state,\r\n                dialogs: {\r\n                    ...state.dialogs,\r\n                    [action.dialogId]: {\r\n                        ...state.dialogs[action.dialogId],\r\n                        dialog: {\r\n                            ...state.dialogs[action.dialogId].dialog,\r\n                            last_message: action.payload.text,\r\n                            last_message_time: action.payload.time,\r\n                            last_message_owner: action.payload.owner,\r\n                            last_message_status: action.payload.status\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        case 'DIALOG_ORDER_CHANGE':\r\n\r\n            let orderArr = state.dialogsOrder\r\n            const dialogId = action.payload\r\n            orderArr.splice(orderArr.indexOf(dialogId), 1)\r\n            orderArr.unshift(dialogId)\r\n\r\n            return {\r\n                ...state,\r\n                dialogsOrder: orderArr\r\n            }\r\n        case 'DIALOG_NEW_SET':\r\n\r\n            let orderActual = state.dialogsOrder\r\n            orderActual.unshift(action.dialogId)\r\n\r\n            return {\r\n                ...state,\r\n                dialogs: {\r\n                    ...state.dialogs,\r\n                    [action.dialogId]: action.payload\r\n                },\r\n                dialogsOrder: orderActual\r\n            }\r\n        case 'DIALOG_LAST_MESSAGE_STATUS_SET':\r\n            return {\r\n                ...state,\r\n                dialogs: {\r\n                    ...state.dialogs,\r\n                    [action.dialogId]: {\r\n                        ...state.dialogs[action.dialogId],\r\n                        dialog: {\r\n                            ...state.dialogs[action.dialogId].dialog,\r\n                            last_message_status: action.payload\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        case 'DIALOG_DELETE_ONE':\r\n\r\n            const obj = state.dialogs\r\n            delete obj[action.payload]\r\n\r\n            const arr = state.dialogsOrder\r\n\r\n            arr.splice(arr.indexOf(action.payload), 1)\r\n\r\n            return {\r\n                ...state,\r\n                dialogs: obj,\r\n                dialogsOrder: arr\r\n            }\r\n        case 'DIALOG_DELETE_INFO':\r\n            return {\r\n                ...state,\r\n                dialogs: {\r\n                    ...state.dialogs,\r\n                    [action.payload]: {\r\n                        ...state.dialogs[action.payload],\r\n                        name: action.name,\r\n                        photo: 'DR7pkQw8DqX4F8FmUIHw_a5YEzo0gP3nHOptm6apiyzg_xEs_VcyQq9pQEH6FdY0wOl95xh8_hkepcq',\r\n                        id: '',\r\n                        status: false,\r\n                        description: 'Recipient deleted this chat',\r\n                        email: 'DELETED',\r\n                        telephone: 'DELETED',\r\n                        deleted: true\r\n                    }\r\n                }\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default dialog;","const initialState = {\r\n    newMessages: [],\r\n    status: null\r\n}\r\n\r\nconst message = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'MESSAGES_NEW_SET':\r\n            let messages;\r\n            if (state.newMessages) {\r\n                messages = state.newMessages\r\n                messages.unshift(action.payload)\r\n            } else {\r\n                messages = [action.payload]\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                newMessages: messages\r\n            }\r\n        case 'MESSAGES_NEW_STATUS_SET':\r\n            let msg = state.newMessages\r\n\r\n            msg.map(obj => {\r\n                obj.status = true;\r\n            })\r\n\r\n            return {\r\n                ...state,\r\n                newMessages: msg\r\n            }\r\n        case 'MESSAGES_NEW_DELETE':\r\n            return {\r\n                ...state,\r\n                newMessages: []\r\n            }\r\n        case 'MESSAGES_STATUS_SET':\r\n            return {\r\n                ...state,\r\n                status: !state.status\r\n            }\r\n        case 'MESSAGES_NEW_ID_SET':\r\n\r\n            let ms = state.newMessages\r\n\r\n            for (let i = 0; i < ms.length; i++) {\r\n                if (ms[i]._id === 'none') {\r\n                    ms[i]._id = action.payload\r\n                    i = ms.length\r\n                }\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                newMessages: ms\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default message;","import { combineReducers } from \"redux\";\r\nimport user from \"./user\"\r\nimport loading from \"./loading\"\r\nimport dialog from \"./dialog\"\r\nimport message from \"./message\";\r\n\r\nconst rootReducer = combineReducers({\r\n    user,\r\n    loading,\r\n    dialog,\r\n    message\r\n});\r\n\r\nexport default rootReducer;","import { createStore, compose, applyMiddleware } from 'redux';\r\nimport rootReducer from \"./reducers\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(rootReducer, composeEnhancer(applyMiddleware(thunk)));\r\n\r\nexport default store;\r\n\r\n","export const messagesNewSet = (msg) => {\r\n    return {\r\n        type: 'MESSAGES_NEW_SET',\r\n        payload: msg\r\n    }\r\n}\r\n\r\nexport const messagesNewStatusSet = () => {\r\n    return {\r\n        type: 'MESSAGES_NEW_STATUS_SET'\r\n    }\r\n}\r\n\r\nexport const messageNewDelete = () => {\r\n    return {\r\n        type: 'MESSAGES_NEW_DELETE'\r\n    }\r\n}\r\n\r\nexport const messagesStatusSet = () => {\r\n    return {\r\n        type: 'MESSAGES_STATUS_SET'\r\n    }\r\n}\r\n\r\nexport const messagesNewIdSet = (id) => {\r\n    return {\r\n        type: 'MESSAGES_NEW_ID_SET',\r\n        payload: id\r\n    }\r\n}","import { io } from \"socket.io-client\"\r\nimport store from \"./redux/store\"\r\nimport {\r\n    dialogLastMessageSet,\r\n    dialogOrderChange,\r\n    dialogUserOnlineStatusSet,\r\n    dialogNewSet,\r\n    dialogLastMessageStatusSet,\r\n    deleteDialogInfo\r\n} from \"./redux/actions/dialog\"\r\nimport {messagesNewIdSet, messagesNewSet, messagesNewStatusSet, messagesStatusSet} from \"./redux/actions/message\";\r\n\r\nconst socket = io()\r\n\r\nsocket.on('userOnline', (data) => {\r\n    store.dispatch(dialogUserOnlineStatusSet(data.dialogId, data.status))\r\n})\r\n\r\nsocket.on('newMessage', (message) => {\r\n    if (store.getState().dialog.activeDialog === message.dialogId) {\r\n        store.dispatch(messagesNewSet(message))\r\n        socket.emit('messageAllStatus', {dialogId: message.dialogId, id: store.getState().user.userData.userId})\r\n    }\r\n\r\n    store.dispatch(dialogLastMessageSet(message.dialogId, message))\r\n\r\n    if (store.getState().dialog.activeDialog === message.dialogId) {\r\n        store.dispatch(dialogLastMessageStatusSet(message.dialogId))\r\n    }\r\n\r\n    if (store.getState().dialog.dialogsOrder[0] !== message.dialogId)\r\n        store.dispatch(dialogOrderChange(message.dialogId))\r\n})\r\n\r\nsocket.on('newDialog', (dialog) => {\r\n    store.dispatch(dialogNewSet(dialog.dialogId, dialog.newDialog))\r\n})\r\n\r\nsocket.on('messageAllStatus', (messages) => {\r\n    store.dispatch(dialogLastMessageStatusSet(messages.dialogId))\r\n    if (store.getState().dialog.activeDialog === messages.dialogId) {\r\n        store.dispatch(messagesStatusSet())\r\n        store.dispatch(messagesNewStatusSet())\r\n    }\r\n})\r\n\r\nsocket.on('newMessageId', (id) => {\r\n    store.dispatch(messagesNewIdSet(id))\r\n})\r\n\r\nsocket.on('dialogDelete', (dialogId, name) => {\r\n    store.dispatch(deleteDialogInfo(dialogId, name))\r\n})\r\n\r\nexport default socket;","import axios from \"axios\";\r\nimport {setUserLoading} from \"./loading\";\r\nimport socket from \"../../socket\";\r\n\r\nexport const dialogsFetch = (token) => {\r\n    return dispatch => {\r\n        return axios.get(\"/api/dialog/find\", { headers: { Authorization:`Bearer ${token}`}}).then(res => {\r\n            dispatch(dialogsSet(res.data.answer))\r\n            dispatch(dialogsOrderSet(res.data.order))\r\n            dispatch(setUserLoading(false))\r\n        })\r\n    }\r\n}\r\n\r\nexport const createDialog = (token, userId) => {\r\n    return dispatch => {\r\n        return axios.post(\"/api/dialog/new\", {userId},{ headers: { Authorization:`Bearer ${token}`}}).then(res => {\r\n            dispatch(dialogsFetch(token)).then(() => {dispatch(activeDialogSet(res.data))})\r\n            socket.emit('newDialog', res.data)\r\n        }, () => {\r\n            return -1\r\n        })\r\n    }\r\n}\r\n\r\nexport const dialogsOrderSet = (arr) => {\r\n    return {\r\n        type: 'DIALOG_ORDER_SET',\r\n        payload: arr\r\n    }\r\n}\r\n\r\nexport const activeDialogSet = (id) => {\r\n    return {\r\n        type: 'DIALOG_ACTIVE_SET',\r\n        payload: id\r\n    }\r\n}\r\n\r\nexport const dialogsSet = (obj) => {\r\n    return {\r\n        type: 'DIALOGS_SET',\r\n        payload: obj\r\n    }\r\n}\r\n\r\nexport const dialogUserOnlineStatusSet = (id, status) => {\r\n    return {\r\n        type: 'DIALOG_USER_ONLINE_SET',\r\n        payload: status,\r\n        dialogId: id\r\n    }\r\n}\r\n\r\nexport const dialogLastMessageSet = (id, message) => {\r\n    return {\r\n        type: 'DIALOG_LAST_MESSAGE_SET',\r\n        payload: message,\r\n        dialogId: id\r\n    }\r\n}\r\n\r\nexport const dialogOrderChange = (id) => {\r\n    return {\r\n        type: 'DIALOG_ORDER_CHANGE',\r\n        payload: id\r\n    }\r\n}\r\n\r\nexport const dialogNewSet = (dialogId, obj) => {\r\n    return {\r\n        type: 'DIALOG_NEW_SET',\r\n        payload: obj,\r\n        dialogId: dialogId\r\n    }\r\n}\r\n\r\nexport const dialogLastMessageStatusSet = (dialogId) => {\r\n    return {\r\n        type: 'DIALOG_LAST_MESSAGE_STATUS_SET',\r\n        payload: true,\r\n        dialogId: dialogId\r\n    }\r\n}\r\n\r\nexport const deleteDialog = (dialogId, token, id = '') => {\r\n    return dispatch => {\r\n        return axios.post(\"/api/dialog/delete\", {dialogId: dialogId, id: id},{ headers: { Authorization:`Bearer ${token}`}}).then(() => {\r\n            socket.emit('dialogDelete', dialogId, id)\r\n            dispatch(activeDialogSet(''))\r\n            dispatch(deleteDialogOne(dialogId))\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteDialogOne = (dialogId) => {\r\n    return {\r\n        type: 'DIALOG_DELETE_ONE',\r\n        payload: dialogId\r\n    }\r\n}\r\n\r\nexport const deleteDialogInfo = (dialogId, name) => {\r\n    return {\r\n        type: 'DIALOG_DELETE_INFO',\r\n        payload: dialogId,\r\n        name: name\r\n    }\r\n}","import React, {useEffect, useState} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {activeDialogSet} from \"../redux/actions/dialog\";\r\nimport {Image} from \"cloudinary-react\";\r\n\r\nconst Dialogs = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const {dialogs, activeDialog, dialogsOrder} = useSelector(({dialog}) => dialog)\r\n    const {userData} = useSelector(({user}) => user)\r\n\r\n    const [today, setToday] = useState('');\r\n    const [yesterday, setYesterday] = useState('');\r\n\r\n    useEffect(() => {\r\n        let yesterday = new Date()\r\n        yesterday.setDate(yesterday.getDate() - 1)\r\n        yesterday = getDate(yesterday)\r\n        setYesterday(yesterday)\r\n        setToday(getDate())\r\n    }, [])\r\n\r\n    const setActiveDialog = (id) => {\r\n        dispatch(activeDialogSet(id))\r\n    }\r\n\r\n    return (\r\n        <div className=\"dialogs\">\r\n            {dialogs !== {} &&\r\n                dialogsOrder.map(key => {\r\n\r\n                    const obj = dialogs[key]\r\n                    let i = 0;\r\n\r\n                    if (obj.dialog.last_message_time.split(' ')[0] === today) {\r\n                        i = 1\r\n                    } else if (obj.dialog.last_message_time.split(' ')[0] === yesterday) {\r\n                        obj.dialog.last_message_time = 'yesterday'\r\n                    }\r\n\r\n                    return (\r\n                        <div onClick={() => {setActiveDialog(key)}} className={activeDialog === key ? \"dialog active\" : \"dialog\"} key={key}>\r\n                            <Image cloudName=\"artemijss\" publicId={obj.photo ? obj.photo : \"tkixqcinuntqmalr2dej\"}/>\r\n                            <div className=\"details\">\r\n                                <div className=\"dialog-info1\">\r\n                                    <div style={obj.deleted && {color: \"rgb(214,48,46)\"}} className={`dialog-name big-text ${obj.dialog.last_message_owner !== userData.userId && !obj.dialog.last_message_status ? \"bold\" : \"\"}`}>\r\n                                        {obj.name}\r\n                                    </div>\r\n                                    <div className={`mssg-time ${obj.dialog.last_message_owner !== userData.userId && !obj.dialog.last_message_status ? \"black bold\" : \"\"}`}>\r\n                                        {obj.dialog.last_message_time ? obj.dialog.last_message_time.split(' ')[i] : \"\"}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"last-message_notification\">\r\n                                    <div className={`last-message big-text ${obj.dialog.last_message_owner !== userData.userId ? \"noPadding\" : \"\"}`}>\r\n                                        {obj.dialog.last_message &&\r\n                                        <span className={obj.dialog.last_message_owner === userData.userId ? `${obj.dialog.last_message_status ? \"opened\" : \"\"}` : \"none\"}>\r\n                                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 18 18\" width=\"18\" height=\"18\"><path fill=\"currentColor\" d=\"M17.394 5.035l-.57-.444a.434.434 0 0 0-.609.076l-6.39 8.198a.38.38 0 0 1-.577.039l-.427-.388a.381.381 0 0 0-.578.038l-.451.576a.497.497 0 0 0 .043.645l1.575 1.51a.38.38 0 0 0 .577-.039l7.483-9.602a.436.436 0 0 0-.076-.609zm-4.892 0l-.57-.444a.434.434 0 0 0-.609.076l-6.39 8.198a.38.38 0 0 1-.577.039l-2.614-2.556a.435.435 0 0 0-.614.007l-.505.516a.435.435 0 0 0 .007.614l3.887 3.8a.38.38 0 0 0 .577-.039l7.483-9.602a.435.435 0 0 0-.075-.609z\"/></svg>\r\n                                        </span>\r\n                                        }\r\n                                        <span className={obj.dialog.last_message_owner !== userData.userId && !obj.dialog.last_message_status ? \"black\" : \"\"}>\r\n                                            {obj.dialog.last_message}\r\n                                        </span>\r\n                                    </div>\r\n                                    { obj.dialog.last_message_owner !== userData.userId && !obj.dialog.last_message_status &&\r\n                                        <div className=\"notification\">\r\n                                            <span>!</span>\r\n                                        </div>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n            {dialogsOrder.length === 0 &&\r\n                <div className=\"no_chat\">\r\n                    <p>You don't have any active chats yet.</p>\r\n                    <p>Use search to find friends!</p>\r\n                </div>\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;\r\n\r\nconst getDate = (date_obj = new Date()) => {\r\n\r\n    let day = date_obj.getDate();\r\n    if (day < 10) day = '0' + day;\r\n\r\n    let month = date_obj.getMonth() + 1;\r\n    if (month < 10) month = '0' + month;\r\n\r\n    let year = date_obj.getFullYear();\r\n\r\n    return  `${day}/${month}/${year}`;\r\n}","import React, {useEffect, useState} from 'react';\r\nimport {useSelector} from \"react-redux\";\r\nimport axios from \"axios\";\r\n\r\nconst Chat = () => {\r\n\r\n    const {activeDialog, dialogs} = useSelector(({dialog}) => dialog)\r\n    const {token, userId} = useSelector(({user}) => user.userData)\r\n    const {newMessages, status} = useSelector(({message}) => message)\r\n\r\n    const [messages, setMessages] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    useEffect(() => {\r\n        setLoading(true)\r\n        axios.get(`/api/message/find/${activeDialog}`, { headers: { Authorization: `Bearer ${token}` } }).then(res => {\r\n            setMessages(res.data)\r\n            setLoading(false)\r\n        }, err => {\r\n            console.log(err)\r\n            setLoading(false)\r\n        })\r\n    }, [activeDialog, token])\r\n\r\n    useEffect(() => {\r\n        if (status !== null) {\r\n            const t = document.querySelectorAll('.time-status svg.notOpened');\r\n            for (let i = 0; i < t.length; i++) {\r\n                t[i].className.baseVal = \"opened\";\r\n            }\r\n        }\r\n    }, [status])\r\n\r\n    const [today, setToday] = useState('');\r\n    const [yesterday, setYesterday] = useState('');\r\n\r\n    useEffect(() => {\r\n        let yesterday = new Date()\r\n        yesterday.setDate(yesterday.getDate() - 1)\r\n        yesterday = getDate(yesterday)\r\n        setYesterday(yesterday)\r\n        setToday(getDate())\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"chat\">\r\n            { dialogs[activeDialog].deleted &&\r\n                <div className=\"date\"><span>{dialogs[activeDialog].name} DELETED THIS CHAT - YOU CAN'T SEND MESSAGES</span></div>\r\n            }\r\n            {\r\n                newMessages && newMessages.map((obj, i) => {\r\n                    return (\r\n                        <div className={`message-block ${userId === obj.owner ? \"message-out\" : \"message-in\"}`} key={i+obj._id}>\r\n                            <div className=\"message\">\r\n                                <div className=\"text-block\">\r\n                                    <div className=\"text\">{obj.text}</div>\r\n                                    <div className=\"time-status\">\r\n                                        {obj.time.split(' ')[1]}\r\n                                        <svg className= {\r\n                                            obj._id !== 'none'\r\n                                            ?\r\n                                                obj.status ? \"opened\" : \"\"\r\n                                            :\r\n                                                \"none\"\r\n                                        }\r\n                                             xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 15\" width=\"16\" height=\"15\"><path fill=\"currentColor\" d=\"M15.01 3.316l-.478-.372a.365.365 0 0 0-.51.063L8.666 9.879a.32.32 0 0 1-.484.033l-.358-.325a.319.319 0 0 0-.484.032l-.378.483a.418.418 0 0 0 .036.541l1.32 1.266c.143.14.361.125.484-.033l6.272-8.048a.366.366 0 0 0-.064-.512zm-4.1 0l-.478-.372a.365.365 0 0 0-.51.063L4.566 9.879a.32.32 0 0 1-.484.033L1.891 7.769a.366.366 0 0 0-.515.006l-.423.433a.364.364 0 0 0 .006.514l3.258 3.185c.143.14.361.125.484-.033l6.272-8.048a.365.365 0 0 0-.063-.51z\"/></svg>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <svg className=\"triangle\" id=\"82734756-3615-4ec8-a382-6c6e9d1975af\" data-name=\"Layer 1\"\r\n                                 xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 67.96699 58.57164\">\r\n                                <path className=\"0082bf7a-a2e0-46d1-be00-84645c2dcbc6\"\r\n                                      d=\"M280.49486,515.96866l-44.88734,15.11513a.69234.69234,0,0,1-.221.03621H214.69244A.69245.69245,0,0,1,214,530.42756V515.31243a.69244.69244,0,0,1,.69244-.69243h65.58144A.69243.69243,0,0,1,280.49486,515.96866Z\"\r\n                                      transform=\"translate(-213.5 -514.12)\"/>\r\n                            </svg>\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n            {\r\n                !loading && messages.map((obj) => {\r\n                    return obj.msg.map((msg, j) => {\r\n                        return (\r\n                            <div key={msg.id}>\r\n                                {\r\n                                    j === obj.msg.length-1 &&\r\n                                    <div className=\"date\"><span>{today === msg.time.split(' ')[0] ? \"TODAY\" : msg.time.split(' ')[0] === yesterday ? \"YESTERDAY\" : obj._id.created_at}</span></div>\r\n                                }\r\n                                <div className={`message-block ${userId === msg.owner ? \"message-out\" : \"message-in\"}`} key={j+msg.id}>\r\n                                     <div className=\"message\">\r\n                                         <div className=\"text-block\">\r\n                                             <div className=\"text\">{msg.text}</div>\r\n                                             <div className=\"time-status\">\r\n                                                 {msg.time.split(' ')[1]}\r\n                                                 <svg className={msg.status ? \"opened\" : \"notOpened\"} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 15\" width=\"16\" height=\"15\"><path fill=\"currentColor\" d=\"M15.01 3.316l-.478-.372a.365.365 0 0 0-.51.063L8.666 9.879a.32.32 0 0 1-.484.033l-.358-.325a.319.319 0 0 0-.484.032l-.378.483a.418.418 0 0 0 .036.541l1.32 1.266c.143.14.361.125.484-.033l6.272-8.048a.366.366 0 0 0-.064-.512zm-4.1 0l-.478-.372a.365.365 0 0 0-.51.063L4.566 9.879a.32.32 0 0 1-.484.033L1.891 7.769a.366.366 0 0 0-.515.006l-.423.433a.364.364 0 0 0 .006.514l3.258 3.185c.143.14.361.125.484-.033l6.272-8.048a.365.365 0 0 0-.063-.51z\"/></svg>\r\n                                             </div>\r\n                                         </div>\r\n                                     </div>\r\n                                     <svg className=\"triangle\" id=\"82734756-3615-4ec8-a382-6c6e9d1975af\" data-name=\"Layer 1\"\r\n                                         xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 67.96699 58.57164\">\r\n                                        <path className=\"0082bf7a-a2e0-46d1-be00-84645c2dcbc6\"\r\n                                              d=\"M280.49486,515.96866l-44.88734,15.11513a.69234.69234,0,0,1-.221.03621H214.69244A.69245.69245,0,0,1,214,530.42756V515.31243a.69244.69244,0,0,1,.69244-.69243h65.58144A.69243.69243,0,0,1,280.49486,515.96866Z\"\r\n                                              transform=\"translate(-213.5 -514.12)\"/>\r\n                                    </svg>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    })\r\n                })\r\n            }\r\n            {\r\n                loading &&\r\n                    <div className=\"loadingChatBlock\">\r\n                        <div className=\"spinner spinner-1\"/>\r\n                    </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chat;\r\n\r\nconst getDate = (date_obj = new Date()) => {\r\n\r\n    let day = date_obj.getDate();\r\n    if (day < 10) day = '0' + day;\r\n\r\n    let month = date_obj.getMonth() + 1;\r\n    if (month < 10) month = '0' + month;\r\n\r\n    let year = date_obj.getFullYear();\r\n\r\n    return  `${day}/${month}/${year}`;\r\n}","import {setUserLoading} from './loading';\r\nimport {dialogsFetch} from './dialog';\r\nimport socket from \"../../socket\";\r\n\r\nexport const userDataFetch = (obj, path) => {\r\n    return dispatch => {\r\n        return fetch(`/api/auth/${path}`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Accept: 'application/json',\r\n            },\r\n            body: JSON.stringify(obj)\r\n        })\r\n            .then(resp => resp.json())\r\n            .then(data => {\r\n                if (data.message) {\r\n                    return data.message\r\n                } else {\r\n                    localStorage.setItem(\"token\", data.token)\r\n                    const user = {\r\n                        name: data.name,\r\n                        email: data.email,\r\n                        telephone: data.telephone,\r\n                        userId: data.userId,\r\n                        token: data.token,\r\n                        role: data.role,\r\n                        description: data.description,\r\n                        photo: data.photo\r\n                    }\r\n                    dispatch(loginUser(user))\r\n                    dispatch(setUserLoading(true))\r\n                    socket.emit('userOnline', user.userId)\r\n                    dispatch(dialogsFetch(user.token))\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport const getProfileFetch = () => {\r\n    return dispatch => {\r\n        const token = localStorage.token;\r\n        dispatch(setUserLoading(true));\r\n        if (token) {\r\n            return fetch(\"/api/auth/check\", {\r\n                method: \"GET\",\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    Accept: 'application/json',\r\n                    'Authorization': `Bearer ${token}`\r\n                }\r\n            })\r\n                .then(resp => resp.json())\r\n                .then(data => {\r\n                    if (data.message) {\r\n                        console.log(data.message)\r\n                        localStorage.removeItem(\"token\")\r\n                        dispatch(setUserLoading(false))\r\n                    } else {\r\n                        const user = {\r\n                            name: data.name,\r\n                            email: data.email,\r\n                            telephone: data.telephone,\r\n                            userId: data.userId,\r\n                            token: token,\r\n                            role: data.role,\r\n                            description: data.description,\r\n                            photo: data.photo\r\n                        }\r\n                        dispatch(loginUser(user))\r\n                        socket.emit('userOnline', user.userId)\r\n                        dispatch(dialogsFetch(token))\r\n                    }\r\n                })\r\n        } else {\r\n            dispatch(setUserLoading(false))\r\n        }\r\n    }\r\n}\r\n\r\nexport const logoutUser = () => {\r\n    localStorage.removeItem(\"token\")\r\n    return {\r\n        type: 'USER_LOGOUT'\r\n    }\r\n}\r\n\r\nconst loginUser = obj => ({\r\n    type: 'USER_LOGIN',\r\n    payload: obj\r\n})\r\n\r\nexport const updateName = name => ({\r\n    type: 'USER_UPDATE_NAME',\r\n    payload: name\r\n})\r\n\r\nexport const updateAbout = about => ({\r\n    type: 'USER_UPDATE_ABOUT',\r\n    payload: about\r\n})\r\n\r\nexport const updatePhoto = img => ({\r\n    type: 'USER_UPDATE_PHOTO',\r\n    payload: img\r\n})\r\n\r\nexport const infoAboutUserSet = obj => ({\r\n    type: 'INFO_ABOUT_USER_SET',\r\n    payload: obj\r\n})","import React, {useState} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport axios from \"axios\";\r\nimport {Image} from \"cloudinary-react\";\r\nimport {infoAboutUserSet} from \"../redux/actions/user\";\r\n\r\n\r\nconst FindNewDialog = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const {token} = useSelector(({user}) => user.userData)\r\n    const {infoAboutUser} = useSelector(({user}) => user)\r\n\r\n    const [dialogs, setDialogs] = useState([]);\r\n\r\n    const newDialogs = (search) => {\r\n        if (search.length > 1)\r\n            axios.post(\"/api/user/find\", {telephone: search},{ headers: { Authorization: `Bearer ${token}` }}).then(res => {\r\n                setDialogs(res.data)\r\n            })\r\n    }\r\n\r\n    const openUserProfile = (userId) => {\r\n        if (userId !== infoAboutUser.id)\r\n            dispatch(infoAboutUserSet({bool: true, id: userId}))\r\n        // dispatch(createDialog(token, userId))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"search\">\r\n                <div className=\"box\">\r\n                    <div className=\"input-box\">\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\"><path fill=\"currentColor\" d=\"M15.009 13.805h-.636l-.22-.219a5.184 5.184 0 0 0 1.256-3.386 5.207 5.207 0 1 0-5.207 5.208 5.183 5.183 0 0 0 3.385-1.255l.221.22v.635l4.004 3.999 1.194-1.195-3.997-4.007zm-4.808 0a3.605 3.605 0 1 1 0-7.21 3.605 3.605 0 0 1 0 7.21z\"/></svg>\r\n                        <input onChange={(e) => {newDialogs(e.target.value)}} type=\"text\" placeholder=\"Start new dialog - enter telephone\"/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"dialogs\">\r\n                {\r\n                    dialogs.map((user, i) => {\r\n                        return (\r\n                            <div onClick={() => openUserProfile(user._id)} className=\"dialog\" key={user._id+i}>\r\n                                <Image cloudName=\"artemijss\" publicId={user.photo ? user.photo : \"tkixqcinuntqmalr2dej\"} crop=\"scale\"/>\r\n                                {/*<img src={logo} alt=\"error\"/>*/}\r\n                                <div className=\"details\">\r\n                                    <div className=\"dialog-info1\">\r\n                                        <div className=\"dialog-name big-text\">\r\n                                            {user.name} {user.telephone}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default FindNewDialog;","import React, {useRef, useState} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {updateAbout, updateName, updatePhoto} from \"../redux/actions/user\";\r\nimport axios from \"axios\";\r\nimport {useAlert} from \"react-alert\";\r\nimport {Image} from \"cloudinary-react\";\r\n\r\n\r\nconst Profile = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const {name, description, token, photo} = useSelector(({user}) => user.userData)\r\n\r\n    const [inputName, setInputName] = useState(true)\r\n    const [inputAbout, setInputAbout] = useState(true)\r\n\r\n    const [nameInput, setNameInput] = useState(name)\r\n    const [aboutInput, setAboutInput] = useState(description)\r\n    const [loadingPhoto, setLoadingPhoto] = useState(false)\r\n\r\n    const alert = useAlert()\r\n\r\n    const imageInput = useRef()\r\n\r\n    const changeName = () => {\r\n        setInputName(true)\r\n        if (nameInput !== name) {\r\n            axios.post('/api/user/updateName', {name: nameInput}, { headers: { Authorization: `Bearer ${token}` }}).then((res) => {\r\n                dispatch(updateName(res.data.name))\r\n                alert.success('Name was changed')\r\n            }, () => {\r\n                alert.show('Name can not be empty')\r\n                const inName = document.getElementById('nameInput')\r\n                inName.value = name\r\n            })\r\n        }\r\n    }\r\n\r\n    const changeAbout = () => {\r\n        setInputAbout(true)\r\n        if (aboutInput !== description) {\r\n            axios.post('/api/user/updateAbout', {about: aboutInput}, { headers: { Authorization: `Bearer ${token}` }}).then((res) => {\r\n                dispatch(updateAbout(res.data.about))\r\n                alert.success('About was changed')\r\n            }, () => {\r\n                alert.show('Error')\r\n                const inAbout = document.getElementById('aboutInput')\r\n                inAbout.value = description\r\n            })\r\n        }\r\n    }\r\n\r\n    const changeImage = (e) => {\r\n        const file = e.target.files[0]\r\n        if (!file)\r\n            return false\r\n        setLoadingPhoto(true)\r\n        const reader = new FileReader()\r\n        reader.readAsDataURL(file)\r\n        reader.onloadend = () => {\r\n            uploadImage(reader.result)\r\n        };\r\n\r\n    }\r\n\r\n    const uploadImage = async (base64EncodedImage) => {\r\n        axios.post('/api/user/updateImage', {img: base64EncodedImage}, { headers: { Authorization: `Bearer ${token}` }}).then((res) => {\r\n            dispatch(updatePhoto(res.data.photo))\r\n            setLoadingPhoto(false)\r\n        }, () => {\r\n            alert.show('error')\r\n            setLoadingPhoto(false)\r\n        })\r\n    };\r\n\r\n    return (\r\n        <div className=\"profile\">\r\n            <div className=\"image\">\r\n                <input ref={imageInput} onChange={changeImage} style={{display: \"none\"}} type=\"file\" accept=\"image/*\"/>\r\n                <div className=\"changePhoto\">\r\n                    Change photo\r\n                </div>\r\n\r\n                <Image onClick={() => imageInput.current.click()} cloudName=\"artemijss\" publicId={photo ? photo : \"tkixqcinuntqmalr2dej\"}/>\r\n                { loadingPhoto &&\r\n                    <div className=\"loadingChatBlock\">\r\n                        <div className=\"spinner spinner-1\"/>\r\n                    </div>\r\n                }\r\n            </div>\r\n            <div className=\"name\">\r\n                <span>Name</span>\r\n                <div className={inputName ? \"update\" : \" update borderBottom\"}>\r\n                    <input id=\"nameInput\" onChange={(e) => {setNameInput(e.target.value)}} type=\"text\" defaultValue={name} readOnly={inputName}/>\r\n                    { inputName\r\n                        ?\r\n                            <div onClick={() => {setInputName(false)}}>\r\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\"><path fill=\"currentColor\" d=\"M3.95 16.7v3.4h3.4l9.8-9.9-3.4-3.4-9.8 9.9zm15.8-9.1c.4-.4.4-.9 0-1.3l-2.1-2.1c-.4-.4-.9-.4-1.3 0l-1.6 1.6 3.4 3.4 1.6-1.6z\"/></svg>\r\n                            </div>\r\n                        :\r\n                            <div onClick={changeName}>\r\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\"><path fill=\"currentColor\" d=\"M9 17.2l-4-4-1.4 1.3L9 19.9 20.4 8.5 19 7.1 9 17.2z\"/></svg>\r\n                            </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n            <div className=\"info\"/>\r\n            <div className=\"about\">\r\n                <span>About</span>\r\n                <div className={inputAbout ? \"update\" : \" update borderBottom\"}>\r\n                    <input id=\"aboutInput\" onChange={(e) => {setAboutInput(e.target.value)}} type=\"text\" defaultValue={description} placeholder={\"enter about yourself\"} readOnly={inputAbout}/>\r\n                    { inputAbout\r\n                        ?\r\n                        <div onClick={() => {setInputAbout(false)}}>\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\"><path fill=\"currentColor\" d=\"M3.95 16.7v3.4h3.4l9.8-9.9-3.4-3.4-9.8 9.9zm15.8-9.1c.4-.4.4-.9 0-1.3l-2.1-2.1c-.4-.4-.9-.4-1.3 0l-1.6 1.6 3.4 3.4 1.6-1.6z\"/></svg>\r\n                        </div>\r\n                        :\r\n                        <div onClick={changeAbout}>\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\"><path fill=\"currentColor\" d=\"M9 17.2l-4-4-1.4 1.3L9 19.9 20.4 8.5 19 7.1 9 17.2z\"/></svg>\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React, {useEffect, useState} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {Image} from \"cloudinary-react\";\r\nimport {infoAboutUserSet} from \"../redux/actions/user\";\r\nimport axios from \"axios\";\r\nimport {useAlert} from \"react-alert\";\r\nimport {createDialog, deleteDialog} from \"../redux/actions/dialog\";\r\n\r\nconst UserInfo = () => {\r\n\r\n    const alert = useAlert()\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const {dialogs, activeDialog} = useSelector(({dialog}) => dialog)\r\n    const {infoAboutUser, userData} = useSelector(({user}) => user)\r\n\r\n    const [name, setName] = useState('')\r\n    const [photo, setPhoto] = useState('')\r\n    const [status, setStatus] = useState('')\r\n    const [telephone, setTelephone] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [about, setAbout] = useState('')\r\n\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    useEffect(() => {\r\n        if (infoAboutUser.id) {\r\n            setLoading(true)\r\n            axios.get(`/api/user/find/${infoAboutUser.id}`, { headers: { Authorization: `Bearer ${userData.token}` }}).then((res) => {\r\n                setName(res.data.name)\r\n                setStatus(res.data.status)\r\n                setPhoto(res.data.photo)\r\n                setTelephone(res.data.telephone)\r\n                setEmail(res.data.email)\r\n                setAbout(res.data.description)\r\n                setLoading(false)\r\n            }, () => {\r\n                setLoading(false)\r\n                alert.show('error')\r\n            })\r\n        } else {\r\n            if (activeDialog) {\r\n                setName(dialogs[activeDialog].name)\r\n                setStatus(dialogs[activeDialog].status)\r\n                setPhoto(dialogs[activeDialog].photo)\r\n                setTelephone(dialogs[activeDialog].telephone)\r\n                setEmail(dialogs[activeDialog].email)\r\n                setAbout(dialogs[activeDialog].description)\r\n            }\r\n            setLoading(false)\r\n        }\r\n    }, [infoAboutUser])\r\n\r\n    const createNewDialog = () => {\r\n        dispatch(createDialog(userData.token, infoAboutUser.id)).then((res) => {\r\n            if (res === -1)\r\n                alert.show('error')\r\n        })\r\n        dispatch(infoAboutUserSet({bool: false, id: null}))\r\n    }\r\n\r\n    const deleteDialogFn = () => {\r\n        const res = window.confirm('Are you sure?')\r\n        if (!res)\r\n            return false\r\n        dispatch(infoAboutUserSet({bool: false, id: null}))\r\n        dispatch(deleteDialog(activeDialog, userData.token, dialogs[activeDialog].id))\r\n    }\r\n\r\n    return (\r\n            <div className=\"userInfo\">\r\n                <div className=\"box-header\">\r\n                    <svg onClick={() => dispatch(infoAboutUserSet({bool: false, id: null}))} xmlns=\"http://www.w3.org/2000/svg\"\r\n                         viewBox=\"0 0 24 24\" width=\"24\" height=\"24\">\r\n                        <path fill=\"currentColor\"\r\n                              d=\"M19.1 17.2l-5.3-5.3 5.3-5.3-1.8-1.8-5.3 5.4-5.3-5.3-1.8 1.7 5.3 5.3-5.3 5.3L6.7 19l5.3-5.3 5.3 5.3 1.8-1.8z\"/>\r\n                    </svg>\r\n                    <div className=\"title\">Profile info</div>\r\n                </div>\r\n                { !loading &&\r\n                    <>\r\n                        <div className=\"user\">\r\n                            <div className=\"info\">\r\n                                <div style={{width: '200px'}}>\r\n                                    <Image cloudName=\"artemijss\"\r\n                                           publicId={photo ? photo : \"tkixqcinuntqmalr2dej\"}/>\r\n                                </div>\r\n                                <div className=\"name\" style={activeDialog ? dialogs[activeDialog].deleted && {color: \"rgb(214,48,46)\"} : {}}>{name}</div>\r\n                                <div className=\"status\" style={activeDialog ? dialogs[activeDialog].deleted && {color: \"rgb(214,48,46)\"} : {}}>\r\n                                    { activeDialog && dialogs[activeDialog].deleted\r\n                                        ?\r\n                                        \"DELETED\"\r\n                                        :\r\n                                        status ? \"online\" : \"offline\"\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                            { infoAboutUser.id &&\r\n                                <div onClick={() => {createNewDialog()}} className=\"button\" style={{marginBottom: \"28px\"}}>\r\n                                    <svg className=\"salat\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\"><path fill=\"currentColor\" d=\"M9 17.2l-4-4-1.4 1.3L9 19.9 20.4 8.5 19 7.1 9 17.2z\"/></svg>\r\n                                    <div className=\"flex1 paddingLeft20 salat bold\">Add to friends</div>\r\n                                </div>\r\n                            }\r\n                            <div style={activeDialog ? dialogs[activeDialog].deleted && {display: \"none\"} : {}} className=\"about\">\r\n                                <span>Telephone</span>\r\n                                <div>{telephone}</div>\r\n                            </div>\r\n                            <div style={activeDialog ? dialogs[activeDialog].deleted && {display: \"none\"} : {}} className=\"about\">\r\n                                <span>Email</span>\r\n                                <div>{email}</div>\r\n                            </div>\r\n                            <div style={activeDialog ? dialogs[activeDialog].deleted && {display: \"none\"} : {}} className=\"about\">\r\n                                <span>About</span>\r\n                                <div>{about ? about : \"none\"}</div>\r\n                            </div>\r\n                            { !infoAboutUser.id &&\r\n                                <div onClick={deleteDialogFn} className=\"button\">\r\n                                    <svg className=\"red\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"\r\n                                         width=\"24\" height=\"24\">\r\n                                        <path fill=\"currentColor\"\r\n                                              d=\"M6 18c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V6H6v12zM19 3h-3.5l-1-1h-5l-1 1H5v2h14V3z\"/>\r\n                                    </svg>\r\n                                    <div className=\"flex1 paddingLeft20 red bold\">Delete Chat</div>\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                    </>\r\n                }\r\n                { loading &&\r\n                    <div className=\"loadingChatBlock\">\r\n                        <div className=\"spinner spinner-1\"/>\r\n                    </div>\r\n                }\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default UserInfo;","import React, {useState, useEffect, useRef} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport { Helmet } from 'react-helmet';\r\nimport {BackGround, Chat, Dialogs, FindNewDialog, Profile, Search, UserInfo} from \"../Components\";\r\nimport axios from \"axios\";\r\nimport {useAlert} from \"react-alert\";\r\nimport socket from \"../socket\";\r\nimport {messageNewDelete, messagesNewSet} from \"../redux/actions/message\";\r\nimport {dialogLastMessageSet, dialogLastMessageStatusSet, dialogOrderChange} from \"../redux/actions/dialog\";\r\nimport {Link} from 'react-router-dom'\r\nimport {infoAboutUserSet, logoutUser} from \"../redux/actions/user\";\r\nimport {Image} from \"cloudinary-react\";\r\n\r\n\r\nfunction MainPage () {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const {dialogs, activeDialog, dialogsOrder} = useSelector(({dialog}) => dialog)\r\n    const {token, userId, role, photo} = useSelector(({user}) => user.userData)\r\n    const {infoAboutUser} = useSelector(({user}) => user)\r\n\r\n    const alert = useAlert()\r\n\r\n    const [activeFindNewDialog, setActiveFindNewDialog] = useState(false)\r\n    const [profile, setProfile] = useState(false)\r\n    const [userInfo, setUserInfo] = useState(infoAboutUser.bool)\r\n\r\n    const [messageText, setMessageText] = useState('')\r\n    const [settingsPopUp, setSettingsPopUp] = useState(false)\r\n\r\n    const popUpRef = useRef();\r\n    const settingMenuRef = useRef();\r\n\r\n    useEffect(() => {\r\n        setActiveFindNewDialog(false)\r\n        dispatch(messageNewDelete())\r\n        if (activeDialog) {\r\n            if (!dialogs[activeDialog].deleted)\r\n                socket.emit('messageAllStatus', {dialogId: activeDialog, id: userId})\r\n            if (dialogs[activeDialog].dialog.last_message_owner !== userId)\r\n                dispatch(dialogLastMessageStatusSet(activeDialog))\r\n        }\r\n    }, [activeDialog])\r\n\r\n    useEffect(() => {\r\n        if (!infoAboutUser.bool) {\r\n            setUserInfo(false)\r\n        } else {\r\n            setUserInfo(true)\r\n        }\r\n    }, [infoAboutUser])\r\n\r\n    const handleOutsideClick = (e) => {\r\n        if (!e.composedPath().includes(popUpRef.current) && !e.composedPath().includes(settingMenuRef.current)) {\r\n            setSettingsPopUp(false);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        document.body.addEventListener('click', handleOutsideClick)\r\n\r\n        return () => {\r\n            document.body.removeEventListener('click', handleOutsideClick);\r\n        };\r\n    }, [])\r\n\r\n    const sendMessage = (e) => {\r\n        e.preventDefault()\r\n        const input = document.querySelector('#sendMessageInput')\r\n        input.value = \"\"\r\n\r\n        if (dialogs[activeDialog].deleted) {\r\n            alert.show('THIS CHAT IS DELETED YOU CANT SEND MESSAGES')\r\n            return false\r\n        }\r\n\r\n        const message = {\r\n            recipient: dialogs[activeDialog].id,\r\n            text: messageText,\r\n            dialogId: activeDialog\r\n        }\r\n\r\n        if (!messageText) {\r\n            alert.show('Enter the message text')\r\n            return false\r\n        }\r\n\r\n        axios.post(\"/api/message/new\", message, { headers: { Authorization: `Bearer ${token}` }}).then(message => {\r\n            socket.emit('newMessage', message.data)\r\n        }, () => {\r\n            alert.show('Error with sending message')\r\n        })\r\n\r\n        const date = getDate();\r\n\r\n        const msg = {\r\n            _id: \"none\",\r\n            text: messageText,\r\n            owner: userId,\r\n            recipient: dialogs[activeDialog].id,\r\n            time: date,\r\n            status: false,\r\n            dialogId: activeDialog\r\n        }\r\n\r\n        dispatch(messagesNewSet(msg))\r\n        dispatch(dialogLastMessageSet(activeDialog, msg))\r\n\r\n        if (dialogsOrder[0] !== activeDialog)\r\n            dispatch(dialogOrderChange(activeDialog))\r\n\r\n        setMessageText('')\r\n    }\r\n\r\n    const userInfoShow = () => {\r\n        if (infoAboutUser.id) {\r\n            dispatch(infoAboutUserSet({bool: true, id: null}))\r\n        }\r\n        setUserInfo(true)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Helmet>\r\n                <title>Live Chat</title>\r\n            </Helmet>\r\n            <BackGround/>\r\n            <div className=\"all-screen\">\r\n                <div className=\"main-box\">\r\n                    <div className=\"whats-app\">\r\n                        <div className=\"side-bar\">\r\n                            { activeFindNewDialog &&\r\n                                <>\r\n                                    <div className=\"find-header\">\r\n                                        <div className=\"box\">\r\n                                            <div className=\"back\">\r\n                                                <svg onClick={() => {setActiveFindNewDialog(false)}} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\"><path fill=\"currentColor\" d=\"M12 4l1.4 1.4L7.8 11H20v2H7.8l5.6 5.6L12 20l-8-8 8-8z\"/></svg>\r\n                                            </div>\r\n                                            <div className=\"big-text\">\r\n                                                New Chat\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <FindNewDialog/>\r\n                                </>\r\n                            }\r\n                            {\r\n                                profile &&\r\n                                <>\r\n                                    <div className=\"find-header\">\r\n                                        <div className=\"box\">\r\n                                            <div className=\"back\">\r\n                                                <svg onClick={() => {setProfile(false)}} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\"><path fill=\"currentColor\" d=\"M12 4l1.4 1.4L7.8 11H20v2H7.8l5.6 5.6L12 20l-8-8 8-8z\"/></svg>\r\n                                            </div>\r\n                                            <div className=\"big-text\">\r\n                                                Profile\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <Profile/>\r\n                                </>\r\n                            }\r\n                            { !activeFindNewDialog && !profile &&\r\n                                <div>\r\n                                    <div className=\"box-header\">\r\n                                        <Image onClick={() => setProfile(true)} cloudName=\"artemijss\" publicId={photo ? photo : \"tkixqcinuntqmalr2dej\"}/>\r\n                                        <div className=\"settings\">\r\n                                            <svg id=\"ee51d023-7db6-4950-baf7-c34874b80976\"\r\n                                                 xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\"\r\n                                                 height=\"24\">\r\n                                                <path fill=\"currentColor\"\r\n                                                      d=\"M12 20.664a9.163 9.163 0 0 1-6.521-2.702.977.977 0 0 1 1.381-1.381 7.269 7.269 0 0 0 10.024.244.977.977 0 0 1 1.313 1.445A9.192 9.192 0 0 1 12 20.664zm7.965-6.112a.977.977 0 0 1-.944-1.229 7.26 7.26 0 0 0-4.8-8.804.977.977 0 0 1 .594-1.86 9.212 9.212 0 0 1 6.092 11.169.976.976 0 0 1-.942.724zm-16.025-.39a.977.977 0 0 1-.953-.769 9.21 9.21 0 0 1 6.626-10.86.975.975 0 1 1 .52 1.882l-.015.004a7.259 7.259 0 0 0-5.223 8.558.978.978 0 0 1-.955 1.185z\"/>\r\n                                            </svg>\r\n                                            <svg onClick={() => {setActiveFindNewDialog(true)}} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\"\r\n                                                 height=\"24\">\r\n                                                <path fill=\"currentColor\"\r\n                                                      d=\"M19.005 3.175H4.674C3.642 3.175 3 3.789 3 4.821V21.02l3.544-3.514h12.461c1.033 0 2.064-1.06 2.064-2.093V4.821c-.001-1.032-1.032-1.646-2.064-1.646zm-4.989 9.869H7.041V11.1h6.975v1.944zm3-4H7.041V7.1h9.975v1.944z\"/>\r\n                                            </svg>\r\n                                            <svg ref={settingMenuRef} className={settingsPopUp ? \"active\" : \"\"} onClick={() => {setSettingsPopUp(!settingsPopUp)}} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\"\r\n                                                 height=\"24\">\r\n                                                <path fill=\"currentColor\"\r\n                                                      d=\"M12 7a2 2 0 1 0-.001-4.001A2 2 0 0 0 12 7zm0 2a2 2 0 1 0-.001 3.999A2 2 0 0 0 12 9zm0 6a2 2 0 1 0-.001 3.999A2 2 0 0 0 12 15z\"/>\r\n                                            </svg>\r\n                                            {\r\n                                                settingsPopUp &&\r\n                                                <div className=\"settingsPopUp\" ref={popUpRef}>\r\n                                                    <div className=\"settingsLink\" onClick={() => {setProfile(true); setSettingsPopUp(false)}}><div>Profile</div></div>\r\n                                                    <div className=\"settingsLink\" onClick={() => {}}><div>Favourites</div></div>\r\n                                                    <div className=\"settingsLink\" onClick={() => {}}><div>Settings</div></div>\r\n                                                    <div className=\"settingsLink\" onClick={() => {dispatch(logoutUser())}}><div>Logout</div></div>\r\n                                                </div>\r\n                                            }\r\n                                        </div>\r\n                                        {\r\n                                            role === \"admin\" &&\r\n                                            <Link to=\"/admin\">AdminPanel</Link>\r\n                                        }\r\n                                    </div>\r\n                                    <Search/>\r\n                                    <Dialogs/>\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                        { activeDialog &&\r\n                            <div className=\"chat-bar\">\r\n                                <div className=\"box-header\">\r\n                                    <div className=\"padding\">\r\n                                        <Image onClick={() => userInfoShow()} cloudName=\"artemijss\" publicId={dialogs[activeDialog].photo ? dialogs[activeDialog].photo : \"tkixqcinuntqmalr2dej\"} crop=\"scale\"/>\r\n                                    </div>\r\n                                    <div onClick={() => userInfoShow()} className=\"dialog-info\">\r\n                                        <div className={dialogs[activeDialog].deleted ? \"dialog-name red\" : \"dialog-name\"}>\r\n                                            {dialogs[activeDialog].name}\r\n                                        </div>\r\n                                        <div className=\"last-time-seen\" style={dialogs[activeDialog].deleted && {color: \"rgb(214,48,46)\"}}>\r\n                                            { dialogs[activeDialog].deleted\r\n                                                ?\r\n                                                    \"DELETED\"\r\n                                                :\r\n                                                dialogs[activeDialog].status ? \"online\" : \"offline\"\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"settings\">\r\n                                        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\"><path fill=\"currentColor\" d=\"M15.9 14.3H15l-.3-.3c1-1.1 1.6-2.7 1.6-4.3 0-3.7-3-6.7-6.7-6.7S3 6 3 9.7s3 6.7 6.7 6.7c1.6 0 3.2-.6 4.3-1.6l.3.3v.8l5.1 5.1 1.5-1.5-5-5.2zm-6.2 0c-2.6 0-4.6-2.1-4.6-4.6s2.1-4.6 4.6-4.6 4.6 2.1 4.6 4.6-2 4.6-4.6 4.6z\"/></svg>\r\n                                        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\"><path fill=\"currentColor\" d=\"M12 7a2 2 0 1 0-.001-4.001A2 2 0 0 0 12 7zm0 2a2 2 0 1 0-.001 3.999A2 2 0 0 0 12 9zm0 6a2 2 0 1 0-.001 3.999A2 2 0 0 0 12 15z\"/></svg>\r\n                                    </div>\r\n                                </div>\r\n                                <Chat/>\r\n                                <div className=\"footer\">\r\n                                    <div className=\"box\">\r\n                                        <form onSubmit={sendMessage} className=\"input-box\">\r\n                                            <input onChange={e => setMessageText(e.target.value)} id=\"sendMessageInput\" type=\"text\" placeholder=\"Введите сообщение\" disabled={dialogs[activeDialog].deleted}/>\r\n                                            <svg role=\"button\" onClick={sendMessage} type=\"submit\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\"><path fill=\"currentColor\" d=\"M1.101 21.757L23.8 12.028 1.101 2.3l.011 7.912 13.623 1.816-13.623 1.817-.011 7.912z\"/></svg>\r\n                                        </form>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                        { !activeDialog && !userInfo &&\r\n                            <div className=\"chat-bar\"/>\r\n                        }\r\n                        { userInfo &&\r\n                            <UserInfo/>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MainPage;\r\n\r\nconst getDate = () => {\r\n    const date_obj = new Date();\r\n\r\n    let day = date_obj.getDate();\r\n    if (day < 10) day = '0' + day;\r\n\r\n    let month = date_obj.getMonth() + 1;\r\n    if (month < 10) month = '0' + month;\r\n\r\n    let year = date_obj.getFullYear();\r\n\r\n    let hours = date_obj.getHours();\r\n    if (hours < 10) hours = '0' + hours;\r\n\r\n    let minutes = date_obj.getMinutes();\r\n    if (minutes < 10) minutes = '0' + minutes;\r\n\r\n    let seconds = date_obj.getSeconds();\r\n    if (seconds < 10) seconds = '0' + seconds;\r\n\r\n    return  `${day}/${month}/${year} ${hours}:${minutes} ${seconds}`;\r\n}","import React, {useState} from 'react';\r\nimport { Helmet } from 'react-helmet';\r\nimport {Link} from \"react-router-dom\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {useAlert} from \"react-alert\";\r\nimport {userDataFetch} from \"../redux/actions/user\";\r\n\r\n\r\nfunction AuthPage () {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const alert = useAlert()\r\n\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const [form, setForm] = useState({\r\n        email: '', password: ''\r\n    })\r\n\r\n    const changeHandler = event => {\r\n        setForm({ ...form, [event.target.name]: event.target.value })\r\n    }\r\n\r\n    const submit = event => {\r\n        event.preventDefault()\r\n        setLoading(true)\r\n        dispatch(userDataFetch(form,'login')).then(res => {\r\n            if (res) {\r\n                setLoading(false)\r\n                alert.show(res);\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Helmet>\r\n                <title>Login</title>\r\n            </Helmet>\r\n            <div className=\"header bg-overlay\"/>\r\n            <div className=\"all-screen\">\r\n                <div className=\"main-box\">\r\n                    <form className=\"formLogin\" onSubmit={submit}>\r\n                        {loading\r\n                            ?\r\n                                <h1>Loading</h1>\r\n                            :\r\n                                <h1>Login</h1>\r\n                        }\r\n                        <div className=\"text_field\">\r\n                            <input type=\"email\" id=\"email\" name=\"email\" required onChange={changeHandler}/>\r\n                            <span/>\r\n                            <label htmlFor=\"email\">E-mail</label>\r\n                        </div>\r\n                        <div className=\"text_field\">\r\n                            <input type=\"password\" id=\"pass\" name=\"password\" minLength=\"6\" required onChange={changeHandler}/>\r\n                            <span/>\r\n                            <label htmlFor=\"pass\">Password</label>\r\n                        </div>\r\n                        <button type=\"submit\">LOGIN</button>\r\n                        <Link to=\"/registration\">Not a member? Sign in!</Link>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AuthPage;","import React, {useState} from 'react';\r\nimport { Helmet } from 'react-helmet';\r\nimport {Link} from 'react-router-dom';\r\nimport {useDispatch} from 'react-redux';\r\nimport {userDataFetch} from \"../redux/actions/user\";\r\nimport { useAlert } from 'react-alert'\r\n\r\n\r\nfunction RegisterPage () {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const alert = useAlert()\r\n\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const [form, setForm] = useState({\r\n        telephone: '', name: '', email: '', password: ''\r\n    })\r\n\r\n    const changeHandler = event => {\r\n        setForm({ ...form, [event.target.name]: event.target.value })\r\n    }\r\n\r\n    const submit = event => {\r\n        event.preventDefault()\r\n        setLoading(true)\r\n        dispatch(userDataFetch(form,'register')).then(res => {\r\n            if (res) {\r\n                setLoading(false)\r\n                alert.show(res);\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Helmet>\r\n                <title>Registration</title>\r\n            </Helmet>\r\n            <div className=\"header bg-overlay\"/>\r\n            <div className=\"all-screen\">\r\n                <div className=\"main-box\">\r\n                    <form className=\"formLogin\" onSubmit={submit}>\r\n                        {loading\r\n                            ?\r\n                                <h1>Loading</h1>\r\n                            :\r\n                                <h1>Registration</h1>\r\n                        }\r\n                        <div className=\"text_field\" >\r\n                            <input type=\"tel\" id=\"telephone\" name=\"telephone\" required onChange={changeHandler}/>\r\n                            <span/>\r\n                            <label htmlFor=\"telephone\">Telephone</label>\r\n                        </div>\r\n                        <div className=\"text_field\">\r\n                            <input type=\"tel\" id=\"name\" name=\"name\" required onChange={changeHandler}/>\r\n                            <span/>\r\n                            <label htmlFor=\"name\">Name</label>\r\n                        </div>\r\n                        <div className=\"text_field\">\r\n                            <input type=\"email\" id=\"email\" name=\"email\" required onChange={changeHandler}/>\r\n                            <span/>\r\n                            <label htmlFor=\"email\">E-mail</label>\r\n                        </div>\r\n                        <div className=\"text_field\">\r\n                            <input type=\"password\" id=\"password\" name=\"password\" minLength=\"6\" required onChange={changeHandler}/>\r\n                            <span/>\r\n                            <label htmlFor=\"pass\">Password</label>\r\n                        </div>\r\n                        <div className=\"text_field\">\r\n                            <input type=\"password\" id=\"confirm_password\" name=\"password\" minLength=\"6\" required onChange={changeHandler}/>\r\n                            <span/>\r\n                            <label htmlFor=\"pass\">Confirm Password</label>\r\n                        </div>\r\n                        <button type=\"submit\">REGISTER</button>\r\n                        <Link to=\"/login\">Already registered? Log in!</Link>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RegisterPage;","import React from \"react\"\r\n\r\nconst LoadingPage = () => {\r\n\r\n    return (\r\n        <div className=\"sk-circle\">\r\n            <div className=\"sk-circle1 sk-child\"/>\r\n            <div className=\"sk-circle2 sk-child\"/>\r\n            <div className=\"sk-circle3 sk-child\"/>\r\n            <div className=\"sk-circle4 sk-child\"/>\r\n            <div className=\"sk-circle5 sk-child\"/>\r\n            <div className=\"sk-circle6 sk-child\"/>\r\n            <div className=\"sk-circle7 sk-child\"/>\r\n            <div className=\"sk-circle8 sk-child\"/>\r\n            <div className=\"sk-circle9 sk-child\"/>\r\n            <div className=\"sk-circle10 sk-child\"/>\r\n            <div className=\"sk-circle11 sk-child\"/>\r\n            <div className=\"sk-circle12 sk-child\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoadingPage;","import './App.css';\nimport {useRoutes} from \"./routes\";\nimport {BrowserRouter as Router} from \"react-router-dom\";\nimport {useEffect} from \"react\";\nimport {getProfileFetch} from \"./redux/actions/user\";\nimport {useDispatch} from \"react-redux\";\n\nfunction App() {\n    const routes = useRoutes()\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        dispatch(getProfileFetch())\n    }, [])\n\n    return (\n        <Router>\n            {routes}\n        </Router>\n    );\n}\n\nexport default App;\n","import React from 'react';\r\nimport {Switch, Route, Redirect} from 'react-router-dom'\r\n\r\nimport {MainPage, AuthPage, RegisterPage, LoadingPage} from  \"./Pages\";\r\n\r\nimport {useSelector} from \"react-redux\";\r\n\r\n\r\nexport const useRoutes = () => {\r\n\r\n    const {userData} = useSelector(({ user }) => user);\r\n    const {userLoading} = useSelector(({ loading }) => loading);\r\n\r\n    if (userLoading) {\r\n        return (\r\n            <Switch>\r\n                <Route path=\"/\" exact>\r\n                    <LoadingPage/>\r\n                </Route>\r\n                <Redirect to=\"/\"/>\r\n            </Switch>\r\n        )\r\n    } else {\r\n        if (userData.userId) {\r\n            return (\r\n                <Switch>\r\n                    <Route path=\"/\" exact>\r\n                        <MainPage/>\r\n                    </Route>\r\n                    {\r\n                        userData.role === \"admin\" &&\r\n                        <Route path=\"/admin\" exact>\r\n                            <div>ADMINKA</div>\r\n                        </Route>\r\n                    }\r\n                    <Redirect to=\"/\"/>\r\n                </Switch>\r\n            )\r\n        } else {\r\n            return (\r\n                <Switch>\r\n                    <Route path=\"/login\" exact>\r\n                        <AuthPage/>\r\n                    </Route>\r\n                    <Route path=\"/registration\" exact>\r\n                        <RegisterPage/>\r\n                    </Route>\r\n                    <Redirect to=\"/login\"/>\r\n                </Switch>\r\n            )\r\n        }\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nvar BaseIcon = function BaseIcon(_ref) {\r\n    var color = _ref.color,\r\n        _ref$pushRight = _ref.pushRight,\r\n        pushRight = _ref$pushRight === undefined ? true : _ref$pushRight,\r\n        children = _ref.children;\r\n    return React.createElement(\r\n        'svg',\r\n        {\r\n            xmlns: 'http://www.w3.org/2000/svg',\r\n            width: '24',\r\n            height: '24',\r\n            viewBox: '0 0 24 24',\r\n            fill: 'none',\r\n            stroke: color,\r\n            strokeWidth: '2',\r\n            strokeLinecap: 'round',\r\n            strokeLinejoin: 'round',\r\n            style: { marginRight: pushRight ? '20px' : '0', minWidth: 24 }\r\n        },\r\n        children\r\n    );\r\n};\r\n\r\nvar InfoIcon = function InfoIcon() {\r\n    return React.createElement(\r\n        BaseIcon,\r\n        { color: '#e93333' },\r\n        React.createElement('circle', { cx: '12', cy: '12', r: '10' }),\r\n        React.createElement('line', { x1: '12', y1: '16', x2: '12', y2: '12' }),\r\n        React.createElement('line', { x1: '12', y1: '8', x2: '12', y2: '8' })\r\n    );\r\n};\r\n\r\nvar SuccessIcon = function SuccessIcon() {\r\n    return React.createElement(\r\n        BaseIcon,\r\n        { color: '#31B404' },\r\n        React.createElement('path', { d: 'M22 11.08V12a10 10 0 1 1-5.93-9.14' }),\r\n        React.createElement('polyline', { points: '22 4 12 14.01 9 11.01' })\r\n    );\r\n};\r\n\r\nvar ErrorIcon = function ErrorIcon() {\r\n    return React.createElement(\r\n        BaseIcon,\r\n        { color: '#FF0040' },\r\n        React.createElement('circle', { cx: '12', cy: '12', r: '10' }),\r\n        React.createElement('line', { x1: '12', y1: '8', x2: '12', y2: '12' }),\r\n        React.createElement('line', { x1: '12', y1: '16', x2: '12', y2: '16' })\r\n    );\r\n};\r\n\r\nvar CloseIcon = function CloseIcon() {\r\n    return React.createElement(\r\n        BaseIcon,\r\n        { color: '#FFFFFF', pushRight: false },\r\n        React.createElement('line', { x1: '18', y1: '6', x2: '6', y2: '18' }),\r\n        React.createElement('line', { x1: '6', y1: '6', x2: '18', y2: '18' })\r\n    );\r\n};\r\n\r\nvar _extends = Object.assign || function (target) {\r\n    for (var i = 1; i < arguments.length; i++) {\r\n        var source = arguments[i];\r\n\r\n        for (var key in source) {\r\n            if (Object.prototype.hasOwnProperty.call(source, key)) {\r\n                target[key] = source[key];\r\n            }\r\n        }\r\n    }\r\n\r\n    return target;\r\n};\r\n\r\nvar alertStyle = {\r\n    backgroundColor: '#2f9688',\r\n    color: 'white',\r\n    padding: '10px',\r\n    textTransform: 'uppercase',\r\n    borderRadius: '3px',\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    boxShadow: '0px 2px 2px 2px rgba(0, 0, 0, 0.03)',\r\n    fontFamily: 'Arial',\r\n    width: '300px',\r\n    boxSizing: 'border-box'\r\n};\r\n\r\nvar buttonStyle = {\r\n    marginLeft: '20px',\r\n    border: 'none',\r\n    backgroundColor: 'transparent',\r\n    cursor: 'pointer',\r\n    color: '#FFFFFF'\r\n};\r\n\r\nvar alertTemplate = function alertTemplate(_ref) {\r\n    var message = _ref.message,\r\n        options = _ref.options,\r\n        style = _ref.style,\r\n        close = _ref.close;\r\n\r\n    return React.createElement(\r\n        'div',\r\n        { style: _extends({}, alertStyle, style) },\r\n        options.type === 'info' && React.createElement(InfoIcon, null),\r\n        options.type === 'success' && React.createElement(SuccessIcon, null),\r\n        options.type === 'error' && React.createElement(ErrorIcon, null),\r\n        React.createElement(\r\n            'span',\r\n            { style: { flex: 2 } },\r\n            message\r\n        ),\r\n        React.createElement(\r\n            'button',\r\n            { onClick: close, style: buttonStyle },\r\n            React.createElement(CloseIcon, null)\r\n        )\r\n    );\r\n};\r\n\r\nexport default alertTemplate;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {Provider} from 'react-redux'\nimport store from \"./redux/store\";\nimport { transitions, positions, Provider as AlertProvider } from 'react-alert';\nimport AlertTemplate from './Components/alertTemlate';\n\n// optional configuration\nconst options = {\n    // you can also just use 'bottom center'\n    position: positions.TOP_CENTER,\n    timeout: 5000,\n    offset: '30px',\n    background: '#2f9688',\n    // you can also just use 'scale'\n    transition: transitions.SCALE\n}\n\nReactDOM.render(\n  <React.StrictMode>\n      <Provider store={store}>\n          <AlertProvider template={AlertTemplate} {...options}>\n              <App />\n          </AlertProvider>\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}
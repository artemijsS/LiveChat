{"version":3,"sources":["Components/BackGround.jsx","redux/actions/loading.js","redux/reducers/user.js","redux/reducers/loading.js","redux/reducers/dialog.js","redux/reducers/message.js","redux/reducers/index.js","redux/store.js","redux/actions/message.js","socket.js","redux/actions/dialog.js","redux/actions/user.js","Components/Search.jsx","Components/Dialogs.jsx","Components/DialogsSearch.jsx","Components/Chat.jsx","Components/FindNewDialog.jsx","Components/Profile.jsx","Components/UserInfo.jsx","Pages/MainPage.jsx","Pages/AuthPage.jsx","Pages/RegisterPage.jsx","Pages/LoadingPage.jsx","Pages/AdminPage.jsx","App.js","routes.jsx","Components/alertTemlate.js","index.js"],"names":["BackGround","className","setUserLoading","bool","type","payload","initialState","userData","loading","infoAboutUser","id","dialogId","dialogSearch","user","state","action","socket","emit","language","localStorage","setItem","name","description","photo","userLoading","dialogs","dialogsOrder","activeDialog","dialog","status","last_message","text","last_message_time","time","last_message_owner","owner","last_message_status","orderArr","splice","indexOf","unshift","orderActual","obj","arr","email","telephone","deleted","newMessages","message","messages","msg","map","ms","i","length","_id","rootReducer","combineReducers","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","messagesNewSet","io","on","data","dispatch","dialogUserOnlineStatusSet","getState","userId","dialogLastMessageSet","dialogLastMessageStatusSet","dialogOrderChange","dialogNewSet","newDialog","messagesNewIdSet","deleteDialogInfo","dialogsFetch","token","axios","get","headers","Authorization","then","res","dialogsSet","answer","dialogsOrderSet","order","activeDialogSet","deleteDialogOne","userDataFetch","path","changeUserLanguage","fetch","method","Accept","body","JSON","stringify","resp","json","role","loginUser","logoutUser","infoAboutUserSet","logout","removeItem","lan","Search","useDispatch","useSelector","xmlns","viewBox","width","height","fill","d","onChange","e","target","value","console","log","placeholder","translate","inputPlaceholder","LV","ok","cancel","error","RU","EN","Dialogs","useState","today","setToday","yesterday","setYesterday","useEffect","Date","setDate","getDate","elems","document","querySelectorAll","innerHTML","key","split","onClick","cloudName","publicId","style","color","noChat1","noChat2","date_obj","day","month","getMonth","year","getFullYear","DialogsSearch","alert","useAlert","dialogsIds","setDialogsIds","setLoading","post","search","err","response","show","errorAuth","setTimeout","Object","keys","includes","Chat","setMessages","t","baseVal","deletedNotification","data-name","transform","j","FindNewDialog","setDialogs","crop","Profile","inputName","setInputName","inputAbout","setInputAbout","nameInput","setNameInput","aboutInput","setAboutInput","loadingPhoto","setLoadingPhoto","imageInput","useRef","uploadImage","base64EncodedImage","a","img","success","photoWasChanged","ref","file","files","reader","FileReader","readAsDataURL","onloadend","result","display","accept","current","click","changePhoto","defaultValue","readOnly","updateName","nameWasChanged","namCanNotBeEmpty","getElementById","about","aboutPlaceholder","aboutWasChanged","fontSize","UserInfo","setName","setPhoto","setStatus","setTelephone","setEmail","setAbout","createNewDialog","createDialog","profileInfo","online","offline","marginBottom","addToFriends","none","confirm","sure","deleteDialog","deleteChat","MainPage","activeFindNewDialog","setActiveFindNewDialog","profile","setProfile","languageChoose","setLanguageChoose","userInfo","setUserInfo","languageTMP","setLanguageTMP","messageText","setMessageText","settingsPopUp","setSettingsPopUp","popUpRef","settingMenuRef","handleOutsideClick","composedPath","addEventListener","removeEventListener","sendMessage","preventDefault","querySelector","errorMsgDel","recipient","errorMsgEnter","errorMsg","date","userInfoShow","Helmet","languageBox","heading","defaultChecked","notification","newChat","to","onSubmit","enterMessage","disabled","autoComplete","hours","getHours","minutes","getMinutes","seconds","getSeconds","AuthPage","password","form","setForm","changeHandler","event","title","required","htmlFor","minLength","login","signUp","RegisterPage","confirmPass","setConfirmPass","nameSurname","confirmPassword","LoadingPage","AdminPage","setActiveDialog","users","setUsers","setUser","loadingUser","setLoadingUsers","loadingInfo","setLoadingInfo","inputTelephone","setInputTelephone","inputEmail","setInputEmail","telephoneInput","setTelephoneInput","emailInput","setEmailInput","inputPlaceholderSearch","telephoneWasChanged","errorUniqueTel","emailWasChanged","errorUniqueEm","App","routes","exact","useRoutes","BaseIcon","_ref","_ref$pushRight","pushRight","undefined","children","React","createElement","stroke","strokeWidth","strokeLinecap","strokeLinejoin","marginRight","minWidth","InfoIcon","cx","cy","r","x1","y1","x2","y2","SuccessIcon","points","ErrorIcon","CloseIcon","_extends","assign","arguments","source","prototype","hasOwnProperty","call","alertStyle","backgroundColor","padding","textTransform","borderRadius","justifyContent","alignItems","boxShadow","fontFamily","boxSizing","buttonStyle","marginLeft","border","cursor","alertTemplate","options","close","flex","position","positions","TOP_CENTER","timeout","offset","background","transition","transitions","SCALE","ReactDOM","render","StrictMode","template","AlertTemplate"],"mappings":"yNASeA,EAPI,WAEf,OACI,qBAAKC,UAAU,uBCLVC,EAAiB,SAAAC,GAAI,MAAK,CACnCC,KAAM,eACNC,QAASF,I,iCCAPG,EAAe,CACjBC,SAAU,GACVC,SAAS,EACTC,cAAe,CACXN,MAAM,EACNO,GAAI,KACJC,SAAU,MAEdC,aAAc,MAoEHC,EAjEF,WAAmC,IAAlCC,EAAiC,uDAAzBR,EAAcS,EAAW,uCAC3C,OAAQA,EAAOX,MACX,IAAK,aACD,OAAO,2BACAU,GADP,IAEIP,SAAUQ,EAAOV,UAEzB,IAAK,cACDW,EAAOC,KAAK,UACZ,IAAMC,EAAWJ,EAAMP,SAASW,SAEhC,OADAC,aAAaC,QAAQ,WAAYF,GAC1B,2BACAJ,GADP,IAEIP,SAAU,CACNW,SAAUA,KAGtB,IAAK,mBACD,OAAO,2BACAJ,GADP,IAEIP,SAAS,2BACFO,EAAMP,UADL,IAEJc,KAAMN,EAAOV,YAGzB,IAAK,oBACD,OAAO,2BACAS,GADP,IAEIP,SAAS,2BACFO,EAAMP,UADL,IAEJe,YAAaP,EAAOV,YAGhC,IAAK,oBACD,OAAO,2BACAS,GADP,IAEIP,SAAS,2BACFO,EAAMP,UADL,IAEJgB,MAAOR,EAAOV,YAG1B,IAAK,sBACD,OAAO,2BACAS,GADP,IAEIL,cAAeM,EAAOV,UAE9B,IAAK,kBAED,OADAc,aAAaC,QAAQ,WAAYL,EAAOV,SACjC,2BACAS,GADP,IAEIP,SAAS,2BACFO,EAAMP,UADL,IAEJW,SAAUH,EAAOV,YAG7B,IAAK,gBACD,OAAO,2BACAS,GADP,IAEIF,aAAcG,EAAOV,UAE7B,QACI,OAAOS,IC1EbR,EAAe,CACjBkB,aAAa,GAeFhB,EAZC,WAAmC,IAAlCM,EAAiC,uDAAzBR,EAAcS,EAAW,uCAC9C,OAAQA,EAAOX,MACX,IAAK,eACD,OAAO,2BACAU,GADP,IAEIU,YAAaT,EAAOV,UAE5B,QACI,OAAOS,I,QCZbR,EAAe,CACjBmB,QAAS,GACTC,aAAc,GACdC,aAAc,IA2HHC,EAxHA,WAAmC,IAAlCd,EAAiC,uDAAzBR,EAAcS,EAAW,uCAC7C,OAAQA,EAAOX,MACX,IAAK,cACD,OAAO,2BACAU,GADP,IAEIW,QAASV,EAAOV,UAExB,IAAK,oBACD,OAAO,2BACAS,GADP,IAEIa,aAAcZ,EAAOV,UAE7B,IAAK,mBACD,OAAO,2BACAS,GADP,IAEIY,aAAcX,EAAOV,UAE7B,IAAK,yBACD,OAAO,2BACAS,GADP,IAEIW,QAAQ,2BACDX,EAAMW,SADN,kBAEFV,EAAOJ,SAFL,2BAGIG,EAAMW,QAAQV,EAAOJ,WAHzB,IAICkB,OAAQd,EAAOV,cAI/B,IAAK,0BACD,OAAO,2BACAS,GADP,IAEIW,QAAQ,2BACDX,EAAMW,SADN,kBAEFV,EAAOJ,SAFL,2BAGIG,EAAMW,QAAQV,EAAOJ,WAHzB,IAICiB,OAAO,2BACAd,EAAMW,QAAQV,EAAOJ,UAAUiB,QADhC,IAEFE,aAAcf,EAAOV,QAAQ0B,KAC7BC,kBAAmBjB,EAAOV,QAAQ4B,KAClCC,mBAAoBnB,EAAOV,QAAQ8B,MACnCC,oBAAqBrB,EAAOV,QAAQwB,eAKxD,IAAK,sBAED,IAAIQ,EAAWvB,EAAMY,aACff,EAAWI,EAAOV,QAIxB,OAHAgC,EAASC,OAAOD,EAASE,QAAQ5B,GAAW,GAC5C0B,EAASG,QAAQ7B,GAEV,2BACAG,GADP,IAEIY,aAAcW,IAEtB,IAAK,iBAED,IAAII,EAAc3B,EAAMY,aAGxB,OAFAe,EAAYD,QAAQzB,EAAOJ,UAEpB,2BACAG,GADP,IAEIW,QAAQ,2BACDX,EAAMW,SADN,kBAEFV,EAAOJ,SAAWI,EAAOV,UAE9BqB,aAAce,IAEtB,IAAK,iCACD,OAAO,2BACA3B,GADP,IAEIW,QAAQ,2BACDX,EAAMW,SADN,kBAEFV,EAAOJ,SAFL,2BAGIG,EAAMW,QAAQV,EAAOJ,WAHzB,IAICiB,OAAO,2BACAd,EAAMW,QAAQV,EAAOJ,UAAUiB,QADhC,IAEFQ,oBAAqBrB,EAAOV,gBAKhD,IAAK,oBAED,IAAMqC,EAAM5B,EAAMW,eACXiB,EAAI3B,EAAOV,SAElB,IAAMsC,EAAM7B,EAAMY,aAIlB,OAFAiB,EAAIL,OAAOK,EAAIJ,QAAQxB,EAAOV,SAAU,GAEjC,2BACAS,GADP,IAEIW,QAASiB,EACThB,aAAciB,IAEtB,IAAK,qBACD,OAAO,2BACA7B,GADP,IAEIW,QAAQ,2BACDX,EAAMW,SADN,kBAEFV,EAAOV,QAFL,2BAGIS,EAAMW,QAAQV,EAAOV,UAHzB,IAICgB,KAAMN,EAAOM,KACbE,MAAO,kFACPb,GAAI,GACJmB,QAAQ,EACRP,YAAa,8BACbsB,MAAO,UACPC,UAAW,UACXC,SAAS,QAIzB,QACI,OAAOhC,IC1HbR,EAAe,CACjByC,YAAa,GACblB,OAAQ,MA2DGmB,EAxDC,WAAmC,IAAlClC,EAAiC,uDAAzBR,EAAcS,EAAW,uCAC9C,OAAQA,EAAOX,MACX,IAAK,mBACD,IAAI6C,EAQJ,OAPInC,EAAMiC,aACNE,EAAWnC,EAAMiC,aACRP,QAAQzB,EAAOV,SAExB4C,EAAW,CAAClC,EAAOV,SAGhB,2BACAS,GADP,IAEIiC,YAAaE,IAErB,IAAK,0BACD,IAAIC,EAAMpC,EAAMiC,YAMhB,OAJAG,EAAIC,KAAI,SAAAT,GACJA,EAAIb,QAAS,KAGV,2BACAf,GADP,IAEIiC,YAAaG,IAErB,IAAK,sBACD,OAAO,2BACApC,GADP,IAEIiC,YAAa,KAErB,IAAK,sBACD,OAAO,2BACAjC,GADP,IAEIe,QAASf,EAAMe,SAEvB,IAAK,sBAID,IAFA,IAAIuB,EAAKtC,EAAMiC,YAENM,EAAI,EAAGA,EAAID,EAAGE,OAAQD,IACT,SAAdD,EAAGC,GAAGE,MACNH,EAAGC,GAAGE,IAAMxC,EAAOV,QACnBgD,EAAID,EAAGE,QAIf,OAAO,2BACAxC,GADP,IAEIiC,YAAaK,IAErB,QACI,OAAOtC,IC5CJ0C,EAPKC,YAAgB,CAChC5C,OACAL,UACAoB,SACAoB,Y,SCNEU,EAAkBC,OAAOC,sCAAwCC,IAIxDC,EAFDC,YAAYP,EAAaE,EAAgBM,YAAgBC,OCN1DC,EAAiB,SAAChB,GAC3B,MAAO,CACH9C,KAAM,mBACNC,QAAS6C,ICSXlC,EAASmD,eAEfnD,EAAOoD,GAAG,cAAc,SAACC,GACrBP,EAAMQ,SAASC,EAA0BF,EAAK1D,SAAU0D,EAAKxC,YAGjEb,EAAOoD,GAAG,cAAc,SAACpB,GACjBc,EAAMU,WAAW5C,OAAOD,eAAiBqB,EAAQrC,WACjDmD,EAAMQ,SAASJ,EAAelB,IAC9BhC,EAAOC,KAAK,mBAAoB,CAACN,SAAUqC,EAAQrC,SAAUD,GAAIoD,EAAMU,WAAW3D,KAAKN,SAASkE,UAGpGX,EAAMQ,SAASI,EAAqB1B,EAAQrC,SAAUqC,IAElDc,EAAMU,WAAW5C,OAAOD,eAAiBqB,EAAQrC,UACjDmD,EAAMQ,SAASK,EAA2B3B,EAAQrC,WAGlDmD,EAAMU,WAAW5C,OAAOF,aAAa,KAAOsB,EAAQrC,UACpDmD,EAAMQ,SAASM,EAAkB5B,EAAQrC,cAGjDK,EAAOoD,GAAG,aAAa,SAACxC,GACpBkC,EAAMQ,SAASO,EAAajD,EAAOjB,SAAUiB,EAAOkD,eAGxD9D,EAAOoD,GAAG,oBAAoB,SAACnB,GAC3Ba,EAAMQ,SAASK,EAA2B1B,EAAStC,WAC/CmD,EAAMU,WAAW5C,OAAOD,eAAiBsB,EAAStC,WAClDmD,EAAMQ,SDrBH,CACHlE,KAAM,wBCqBN0D,EAAMQ,SDlCH,CACHlE,KAAM,gCCqCdY,EAAOoD,GAAG,gBAAgB,SAAC1D,GACvBoD,EAAMQ,SDtBsB,SAAC5D,GAC7B,MAAO,CACHN,KAAM,sBACNC,QAASK,GCmBEqE,CAAiBrE,OAGpCM,EAAOoD,GAAG,gBAAgB,SAACzD,EAAUU,GACjCyC,EAAMQ,SAASU,EAAiBrE,EAAUU,OAG/BL,QClDFiE,EAAe,SAACC,GACzB,OAAO,SAAAZ,GACH,OAAOa,IAAMC,IAAI,mBAAoB,CAAEC,QAAS,CAAEC,cAAc,UAAD,OAAWJ,MAAWK,MAAK,SAAAC,GACtFlB,EAASmB,EAAWD,EAAInB,KAAKqB,SAC7BpB,EAASqB,EAAgBH,EAAInB,KAAKuB,QAClCtB,EAASpE,GAAe,SAgBvByF,EAAkB,SAAChD,GAC5B,MAAO,CACHvC,KAAM,mBACNC,QAASsC,IAIJkD,EAAkB,SAACnF,GAC5B,MAAO,CACHN,KAAM,oBACNC,QAASK,IAIJ+E,EAAa,SAAC/C,GACvB,MAAO,CACHtC,KAAM,cACNC,QAASqC,IAIJ6B,EAA4B,SAAC7D,EAAImB,GAC1C,MAAO,CACHzB,KAAM,yBACNC,QAASwB,EACTlB,SAAUD,IAILgE,EAAuB,SAAChE,EAAIsC,GACrC,MAAO,CACH5C,KAAM,0BACNC,QAAS2C,EACTrC,SAAUD,IAILkE,EAAoB,SAAClE,GAC9B,MAAO,CACHN,KAAM,sBACNC,QAASK,IAIJmE,EAAe,SAAClE,EAAU+B,GACnC,MAAO,CACHtC,KAAM,iBACNC,QAASqC,EACT/B,SAAUA,IAILgE,EAA6B,SAAChE,GACvC,MAAO,CACHP,KAAM,iCACNC,SAAS,EACTM,SAAUA,IAcLmF,EAAkB,SAACnF,GAC5B,MAAO,CACHP,KAAM,oBACNC,QAASM,IAIJqE,EAAmB,SAACrE,EAAUU,GACvC,MAAO,CACHjB,KAAM,qBACNC,QAASM,EACTU,KAAMA,ICtGD0E,EAAgB,SAACrD,EAAKsD,GAC/B,OAAO,SAAA1B,GACH,IAAIpD,EAAWC,aAAaD,SAM5B,OAFIoD,EAAS2B,EAHR/E,GAC2B,OAIzBgF,MAAM,aAAD,OAAcF,GAAQ,CAC9BG,OAAQ,OACRd,QAAS,CACL,eAAgB,mBAChBe,OAAQ,oBAEZC,KAAMC,KAAKC,UAAU7D,KAEpB6C,MAAK,SAAAiB,GAAI,OAAIA,EAAKC,UAClBlB,MAAK,SAAAlB,GACF,GAAIA,EAAKrB,QACL,OAAOqB,EAAKrB,QAEZ7B,aAAaC,QAAQ,QAASiD,EAAKa,OACnC/D,aAAaC,QAAQ,WAAYiD,EAAKnD,UAClCmD,EAAKnD,WACLA,EAAWmD,EAAKnD,UAEpB,IAAML,EAAO,CACTQ,KAAMgD,EAAKhD,KACXuB,MAAOyB,EAAKzB,MACZC,UAAWwB,EAAKxB,UAChB4B,OAAQJ,EAAKI,OACbS,MAAOb,EAAKa,MACZwB,KAAMrC,EAAKqC,KACXpF,YAAa+C,EAAK/C,YAClBC,MAAO8C,EAAK9C,MACZL,SAAUA,GAEdoD,EAASqC,EAAU9F,IACnByD,EAASpE,GAAe,IACxBc,EAAOC,KAAK,aAAcJ,EAAK4D,QAC/BH,EAASW,EAAapE,EAAKqE,aAyDlC0B,EAAa,WACtB,OAAO,SAAAtC,GACHA,EAASuB,EAAgB,KACzBvB,EAASuC,EAAiB,CAAC1G,MAAM,EAAOO,GAAI,KAAMC,SAAU,QAC5D2D,EAASwC,OAIJA,EAAS,WAElB,OADA3F,aAAa4F,WAAW,SACjB,CACH3G,KAAM,gBAIRuG,EAAY,SAAAjE,GAAG,MAAK,CACtBtC,KAAM,aACNC,QAASqC,IAkBAmE,EAAmB,SAAAnE,GAAG,MAAK,CACpCtC,KAAM,sBACNC,QAASqC,IAGAuD,EAAqB,SAAAe,GAAG,MAAK,CACtC5G,KAAM,kBACNC,QAAS2G,ICjHEC,EA1BA,WAEX,IAAM3C,EAAW4C,cAEVhG,EAAYiG,aAAY,qBAAEtG,KAAeN,YAAzCW,SAUP,OACI,qBAAKjB,UAAU,SAAf,SACI,qBAAKA,UAAU,MAAf,SACI,sBAAKA,UAAU,YAAf,UACI,qBAAKmH,MAAM,6BAA6BC,QAAQ,YAAYC,MAAM,KAAKC,OAAO,KAA9E,SAAmF,sBAAMC,KAAK,eAAeC,EAAE,6OAC/G,uBAAOC,SAbJ,SAACC,GAEc,IAA1BA,EAAEC,OAAOC,MAAMvE,SACfwE,QAAQC,IAAIJ,EAAEC,OAAOC,OACrBvD,EDoIyB,CACjClE,KAAM,gBACNC,QCtI+BsH,EAAEC,OAAOC,UASKzH,KAAK,OAAO4H,YAAaC,EAAU/G,GAAUgH,2BASxFD,EAAY,CACdE,GAAI,CACAD,iBAAkB,uCAClBE,GAAI,KACJC,OAAQ,SACRC,MAAO,mBAEXC,GAAI,CACAL,iBAAkB,8HAClBE,GAAI,KACJC,OAAQ,uCACRC,MAAO,wCAEXE,GAAI,CACAN,iBAAkB,yBAClBE,GAAI,KACJC,OAAQ,SACRC,MAAO,U,SC4CAG,GAxFC,WAEZ,IAAMnE,EAAW4C,cAFC,EAI4BC,aAAY,qBAAEvF,UAArDH,EAJW,EAIXA,QAASE,EAJE,EAIFA,aAAcD,EAJZ,EAIYA,aACvBnB,EAAY4G,aAAY,qBAAEtG,QAA1BN,SALW,EAOQmI,mBAAS,IAPjB,mBAOXC,EAPW,KAOJC,EAPI,OAQgBF,mBAAS,IARzB,mBAQXG,EARW,KAQAC,EARA,KAUlBC,qBAAU,WACN,IAAIF,EAAY,IAAIG,KACpBH,EAAUI,QAAQJ,EAAUK,UAAY,GACxCL,EAAYK,GAAQL,GACpBC,EAAaD,GACbD,EAASM,QACV,IAEHH,qBAAU,WAEN,IADA,IAAMI,EAAQC,SAASC,iBAAiB,6BAC/BhG,EAAI,EAAGA,EAAI8F,EAAM7F,OAAQD,IAC9B8F,EAAM9F,GAAGiG,UAAYrB,GAAU1H,EAASW,UAAU2H,YAEvD,CAACtI,EAASW,WAMb,OACI,sBAAKjB,UAAU,UAAf,UACKwB,IAAY,IACTC,EAAayB,KAAI,SAAAoG,GAEb,IAAM7G,EAAMjB,EAAQ8H,GAChBlG,EAAI,EAQR,OANIX,EAAId,OAAOI,kBAAkBwH,MAAM,KAAK,KAAOb,EAC/CtF,EAAI,EACGX,EAAId,OAAOI,kBAAkBwH,MAAM,KAAK,KAAOX,IACtDnG,EAAId,OAAOI,kBAAoBiG,GAAU1H,EAASW,UAAU2H,WAI5D,sBAAKY,QAAS,WAlB9BnF,EAASuB,EAkB4C0D,KAAOtJ,UAAW0B,IAAiB4H,EAAM,gBAAkB,SAAhG,UACI,cAAC,KAAD,CAAOG,UAAU,YAAYC,SAAUjH,EAAInB,MAAQmB,EAAInB,MAAQ,yBAC/D,sBAAKtB,UAAU,UAAf,UACI,sBAAKA,UAAU,eAAf,UACI,qBAAK2J,MAAOlH,EAAII,SAAW,CAAC+G,MAAO,kBAAmB5J,UAAS,+BAA0ByC,EAAId,OAAOM,qBAAuB3B,EAASkE,QAAW/B,EAAId,OAAOQ,oBAA+B,GAAT,QAAhL,SACKM,EAAIrB,OAET,qBAAKpB,UAAS,oBAAeyC,EAAId,OAAOM,qBAAuB3B,EAASkE,QAAW/B,EAAId,OAAOQ,oBAAqC,GAAf,aAAtG,YAA2HM,EAAId,OAAOI,oBAAsBiG,GAAS,GAAOY,WAAanG,EAAId,OAAOI,oBAAsBiG,GAAS,GAAOY,WAAanG,EAAId,OAAOI,oBAAsBiG,GAAS,GAAOY,UAAY,2BAA6B,IAA/V,SACKnG,EAAId,OAAOI,kBAAoBU,EAAId,OAAOI,kBAAkBwH,MAAM,KAAKnG,GAAK,QAGrF,sBAAKpD,UAAU,4BAAf,UACI,sBAAKA,UAAS,gCAA2ByC,EAAId,OAAOM,qBAAuB3B,EAASkE,OAAS,YAAc,IAA3G,UACK/B,EAAId,OAAOE,cACZ,sBAAM7B,UAAWyC,EAAId,OAAOM,qBAAuB3B,EAASkE,OAA3C,UAAuD/B,EAAId,OAAOQ,oBAAsB,SAAW,IAAO,OAA3H,SACI,qBAAKgF,MAAM,6BAA6BC,QAAQ,YAAYC,MAAM,KAAKC,OAAO,KAA9E,SAAmF,sBAAMC,KAAK,eAAeC,EAAE,kcAGnH,sBAAMxH,UAAWyC,EAAId,OAAOM,qBAAuB3B,EAASkE,QAAW/B,EAAId,OAAOQ,oBAAgC,GAAV,QAAxG,SACKM,EAAId,OAAOE,kBAGlBY,EAAId,OAAOM,qBAAuB3B,EAASkE,SAAW/B,EAAId,OAAOQ,qBAC/D,qBAAKnC,UAAU,eAAf,SACI,+CAxB2FsJ,MAiClG,IAAxB7H,EAAa4B,QACV,sBAAKrD,UAAU,UAAf,UACI,4BAAIgI,GAAU1H,EAASW,UAAU4I,UACjC,4BAAI7B,GAAU1H,EAASW,UAAU6I,iBAU/Cb,GAAU,WAA4B,IAA3Bc,EAA0B,uDAAf,IAAIhB,KAExBiB,EAAMD,EAASd,UACfe,EAAM,KAAIA,EAAM,IAAMA,GAE1B,IAAIC,EAAQF,EAASG,WAAa,EAC9BD,EAAQ,KAAIA,EAAQ,IAAMA,GAE9B,IAAIE,EAAOJ,EAASK,cAEpB,MAAM,GAAN,OAAWJ,EAAX,YAAkBC,EAAlB,YAA2BE,IAGzBnC,GAAY,CACdE,GAAI,CACAU,UAAW,QACXiB,QAAS,oEACTC,QAAS,wDACT3B,GAAI,KACJC,OAAQ,SACRC,MAAO,mBAEXC,GAAI,CACAM,UAAW,iCACXiB,QAAS,kJACTC,QAAS,yMACT3B,GAAI,KACJC,OAAQ,uCACRC,MAAO,wCAEXE,GAAI,CACAK,UAAW,YACXiB,QAAS,sCACTC,QAAS,8BACT3B,GAAI,KACJC,OAAQ,SACRC,MAAO,U,QCXAgC,GAhHO,WAElB,IAAMhG,EAAW4C,cACXqD,EAAQC,eAHU,EAKsBrD,aAAY,qBAAEvF,UAArDD,EALiB,EAKjBA,aAAcF,EALG,EAKHA,QAASC,EALN,EAKMA,aALN,EAMSyF,aAAY,qBAAEtG,QAAxCN,EANiB,EAMjBA,SAAUK,EANO,EAMPA,aANO,EAQY8H,mBAAS,IARrB,mBAQjB+B,EARiB,KAQLC,EARK,OASMhC,oBAAS,GATf,mBASjBlI,EATiB,KASRmK,EATQ,OAUEjC,mBAAS,IAVX,mBAUjBC,EAViB,KAUVC,EAVU,OAWUF,mBAAS,IAXnB,mBAWjBG,EAXiB,KAWNC,EAXM,KAaxBC,qBAAU,WACN4B,GAAW,GACXxF,IAAMyF,KAAK,qBAAsB,CAAEC,OAAQjK,GAAgB,CAAEyE,QAAS,CAAEC,cAAc,UAAD,OAAY/E,EAAS2E,UAAYK,MAAK,SAAAC,GACvHkF,EAAclF,EAAInB,KAAKqB,QACvBiF,GAAW,MACZ,SAACG,GAC4B,MAAxBA,EAAIC,SAASlJ,QACb0I,EAAMS,KAAK/C,GAAU1H,EAASW,UAAU+J,WACxCC,YAAW,WACP5G,EAASsC,OACV,OAEH2D,EAAMS,KAAK/C,GAAU1H,EAASW,UAAUoH,UAGhD,IAAIO,EAAY,IAAIG,KACpBH,EAAUI,QAAQJ,EAAUK,UAAY,GACxCL,EAAYK,GAAQL,GACpBC,EAAaD,GACbD,EAASM,QACV,CAACtI,IAEJmI,qBAAU,WAEN,IADA,IAAMI,EAAQC,SAASC,iBAAiB,6BAC/BhG,EAAI,EAAGA,EAAI8F,EAAM7F,OAAQD,IAC9B8F,EAAM9F,GAAGiG,UAAYrB,GAAU1H,EAASW,UAAU2H,YAEvD,CAACtI,EAASW,WAMb,OACI,sBAAKjB,UAAU,UAAf,UACMO,GACF,qBAAKP,UAAU,mBAAf,SACI,qBAAKA,UAAU,wBAGlBwB,IAAY,KAAOjB,GAEhBkB,EAAayB,KAAI,SAAAoG,GACb,GAAI4B,OAAOC,KAAKX,GAAYY,SAAS9B,GAAM,CACvC,IAAM7G,EAAMjB,EAAQ8H,GAChBlG,EAAI,EAQR,OANIX,EAAId,OAAOI,kBAAkBwH,MAAM,KAAK,KAAOb,EAC/CtF,EAAI,EACGX,EAAId,OAAOI,kBAAkBwH,MAAM,KAAK,KAAOX,IACtDnG,EAAId,OAAOI,kBAAoBiG,GAAU1H,EAASW,UAAU2H,WAI5D,sBAAKY,QAAS,WAxBlCnF,EAASuB,EAwBgD0D,KAAOtJ,UAAW0B,IAAiB4H,EAAM,gBAAkB,SAAhG,UACI,cAAC,KAAD,CAAOG,UAAU,YAAYC,SAAUjH,EAAInB,MAAQmB,EAAInB,MAAQ,yBAC/D,sBAAKtB,UAAU,UAAf,UACI,sBAAKA,UAAU,eAAf,UACI,qBAAK2J,MAAOlH,EAAII,SAAW,CAAC+G,MAAO,kBAAmB5J,UAAS,+BAA0ByC,EAAId,OAAOM,qBAAuB3B,EAASkE,QAAW/B,EAAId,OAAOQ,oBAA+B,GAAT,QAAhL,SACKM,EAAIrB,OAET,qBAAKpB,UAAS,oBAAeyC,EAAId,OAAOM,qBAAuB3B,EAASkE,QAAW/B,EAAId,OAAOQ,oBAAqC,GAAf,aAAtG,YAA2HM,EAAId,OAAOI,oBAAsBiG,GAAS,GAAOY,WAAanG,EAAId,OAAOI,oBAAsBiG,GAAS,GAAOY,WAAanG,EAAId,OAAOI,oBAAsBiG,GAAS,GAAOY,UAAY,2BAA6B,IAA/V,SACKnG,EAAId,OAAOI,kBAAoBU,EAAId,OAAOI,kBAAkBwH,MAAM,KAAKnG,GAAK,QAGrF,sBAAKpD,UAAU,4BAAf,UACI,sBAAKA,UAAS,gCAA2ByC,EAAId,OAAOM,qBAAuB3B,EAASkE,OAAS,YAAc,IAA3G,UACK/B,EAAId,OAAOE,cACZ,sBAAM7B,UAAWyC,EAAId,OAAOM,qBAAuB3B,EAASkE,OAA3C,UAAuD/B,EAAId,OAAOQ,oBAAsB,SAAW,IAAO,OAA3H,SACI,qBAAKgF,MAAM,6BAA6BC,QAAQ,YAAYC,MAAM,KAAKC,OAAO,KAA9E,SAAmF,sBAAMC,KAAK,eAAeC,EAAE,kcAGnH,sBAAMxH,UAAWyC,EAAId,OAAOM,qBAAuB3B,EAASkE,QAAW/B,EAAId,OAAOQ,oBAAgC,GAAV,QAAxG,SACKM,EAAId,OAAOE,kBAGlBY,EAAId,OAAOM,qBAAuB3B,EAASkE,SAAW/B,EAAId,OAAOQ,qBACnE,qBAAKnC,UAAU,eAAf,SACI,+CAxB+FsJ,OAkC7F,IAAhC4B,OAAOC,KAAK3J,GAAS6B,SAAiB9C,GACxC,sBAAKP,UAAU,UAAf,UACI,4BAAIgI,GAAU1H,EAASW,UAAU4I,UACjC,4BAAI7B,GAAU1H,EAASW,UAAU6I,iBAU3Cb,GAAU,WAA4B,IAA3Bc,EAA0B,uDAAf,IAAIhB,KAExBiB,EAAMD,EAASd,UACfe,EAAM,KAAIA,EAAM,IAAMA,GAE1B,IAAIC,EAAQF,EAASG,WAAa,EAC9BD,EAAQ,KAAIA,EAAQ,IAAMA,GAE9B,IAAIE,EAAOJ,EAASK,cAEpB,MAAM,GAAN,OAAWJ,EAAX,YAAkBC,EAAlB,YAA2BE,IAGzBnC,GAAY,CACdE,GAAI,CACAU,UAAW,QACXiB,QAAS,mDACTC,QAAS,wDACT3B,GAAI,KACJC,OAAQ,SACRC,MAAO,kBACP2C,UAAW,0CAEf1C,GAAI,CACAM,UAAW,iCACXiB,QAAS,iLACTC,QAAS,yMACT3B,GAAI,KACJC,OAAQ,uCACRC,MAAO,uCACP2C,UAAW,8HAEfzC,GAAI,CACAK,UAAW,YACXiB,QAAS,4CACTC,QAAS,8BACT3B,GAAI,KACJC,OAAQ,SACRC,MAAO,QACP2C,UAAW,iCC9BJK,GA7HF,WAET,IAAMhH,EAAW4C,cAFF,EAIiBC,aAAY,qBAAEvF,UAAvCD,EAJQ,EAIRA,aAAcF,EAJN,EAIMA,QAJN,EAKmB0F,aAAY,qBAAEtG,KAAeN,YAAxD2E,EALQ,EAKRA,MAAOT,EALC,EAKDA,OAAQvD,EALP,EAKOA,SALP,EAMeiG,aAAY,qBAAEnE,WAArCD,EANQ,EAMRA,YAAalB,EANL,EAMKA,OANL,EAQiB6G,mBAAS,IAR1B,mBAQRzF,EARQ,KAQEsI,EARF,OASe7C,oBAAS,GATxB,mBASRlI,EATQ,KASCmK,EATD,KAWTJ,EAAQC,eAEdzB,qBAAU,WACN4B,GAAW,GACXxF,IAAMC,IAAN,4BAA+BzD,GAAgB,CAAE0D,QAAS,CAAEC,cAAc,UAAD,OAAYJ,MAAaK,MAAK,SAAAC,GACnG+F,EAAY/F,EAAInB,MAChBsG,GAAW,MACZ,SAAAG,GAC6B,MAAxBA,EAAIC,SAASlJ,SACb0I,EAAMS,KAAK/C,GAAU/G,GAAU+J,WAC/BC,YAAW,WACP5G,EAASsC,OACV,OAEP+D,GAAW,QAEhB,CAAChJ,EAAcuD,IAElB6D,qBAAU,WACN,GAAe,OAAXlH,EAEA,IADA,IAAM2J,EAAIpC,SAASC,iBAAiB,8BAC3BhG,EAAI,EAAGA,EAAImI,EAAElI,OAAQD,IAC1BmI,EAAEnI,GAAGpD,UAAUwL,QAAU,WAGlC,CAAC5J,IApCW,MAsCW6G,mBAAS,IAtCpB,mBAsCRC,EAtCQ,KAsCDC,EAtCC,OAuCmBF,mBAAS,IAvC5B,mBAuCRG,EAvCQ,KAuCGC,EAvCH,KAiDf,OARAC,qBAAU,WACN,IAAIF,EAAY,IAAIG,KACpBH,EAAUI,QAAQJ,EAAUK,UAAY,GACxCL,EAAYK,GAAQL,GACpBC,EAAaD,GACbD,EAASM,QACV,IAGC,sBAAKjJ,UAAU,OAAf,UACMwB,EAAQE,GAAcmB,SACpB,qBAAK7C,UAAU,OAAf,SAAsB,iCAAOwB,EAAQE,GAAcN,KAA7B,IAAoC4G,GAAU/G,GAAUwK,yBAG9E3I,GAAeA,EAAYI,KAAI,SAACT,EAAKW,GACjC,OACI,sBAAKpD,UAAS,wBAAmBwE,IAAW/B,EAAIP,MAAQ,cAAgB,cAAxE,UACI,qBAAKlC,UAAU,UAAf,SACI,sBAAKA,UAAU,aAAf,UACI,qBAAKA,UAAU,OAAf,SAAuByC,EAAIX,OAC3B,sBAAK9B,UAAU,cAAf,UACKyC,EAAIT,KAAKuH,MAAM,KAAK,GACrB,qBAAKvJ,UACW,SAAZyC,EAAIa,IAEAb,EAAIb,OAAS,SAAW,GAExB,OAEHuF,MAAM,6BAA6BC,QAAQ,YAAYC,MAAM,KAAKC,OAAO,KAP9E,SAOmF,sBAAMC,KAAK,eAAeC,EAAE,ycAI3H,qBAAKxH,UAAU,WAAWS,GAAG,uCAAuCiL,YAAU,UACzEvE,MAAM,6BAA6BC,QAAQ,wBADhD,SAEI,sBAAMpH,UAAU,uCACVwH,EAAE,+MACFmE,UAAU,kCArBqEvI,EAAEX,EAAIa,SA4B1G/C,GAAWyC,EAASE,KAAI,SAACT,GACtB,OAAOA,EAAIQ,IAAIC,KAAI,SAACD,EAAK2I,GACrB,OACI,gCAEQA,IAAMnJ,EAAIQ,IAAII,OAAO,GACrB,qBAAKrD,UAAU,OAAf,SAAsB,+BAAO0I,IAAUzF,EAAIjB,KAAKuH,MAAM,KAAK,GAAKvB,GAAU/G,GAAUyH,MAAQzF,EAAIjB,KAAKuH,MAAM,KAAK,KAAOX,EAAYZ,GAAU/G,GAAU2H,UAAY3F,EAAIjB,KAAKuH,MAAM,KAAK,OAE3L,sBAAKvJ,UAAS,wBAAmBwE,IAAWvB,EAAIf,MAAQ,cAAgB,cAAxE,UACK,qBAAKlC,UAAU,UAAf,SACI,sBAAKA,UAAU,aAAf,UACI,qBAAKA,UAAU,OAAf,SAAuBiD,EAAInB,OAC3B,sBAAK9B,UAAU,cAAf,UACKiD,EAAIjB,KAAKuH,MAAM,KAAK,GACrB,qBAAKvJ,UAAWiD,EAAIrB,OAAS,SAAW,YAAauF,MAAM,6BAA6BC,QAAQ,YAAYC,MAAM,KAAKC,OAAO,KAA9H,SAAmI,sBAAMC,KAAK,eAAeC,EAAE,ycAI3K,qBAAKxH,UAAU,WAAWS,GAAG,uCAAuCiL,YAAU,UAC1EvE,MAAM,6BAA6BC,QAAQ,wBAD/C,SAEG,sBAAMpH,UAAU,uCACVwH,EAAE,+MACFmE,UAAU,kCAdqEC,EAAE3I,EAAIxC,MAL7FwC,EAAIxC,UA4B1BF,GACI,qBAAKP,UAAU,mBAAf,SACI,qBAAKA,UAAU,4BASjCiJ,GAAU,WAA4B,IAA3Bc,EAA0B,uDAAf,IAAIhB,KAExBiB,EAAMD,EAASd,UACfe,EAAM,KAAIA,EAAM,IAAMA,GAE1B,IAAIC,EAAQF,EAASG,WAAa,EAC9BD,EAAQ,KAAIA,EAAQ,IAAMA,GAE9B,IAAIE,EAAOJ,EAASK,cAEpB,MAAM,GAAN,OAAWJ,EAAX,YAAkBC,EAAlB,YAA2BE,IAGzBnC,GAAY,CACdE,GAAI,CACAuD,oBAAqB,6FACrB/C,MAAO,cACPE,UAAW,QACXT,GAAI,KACJC,OAAQ,SACRC,MAAO,kBACP2C,UAAW,0CAEf1C,GAAI,CACAmD,oBAAqB,wQACrB/C,MAAO,6CACPE,UAAW,iCACXT,GAAI,KACJC,OAAQ,uCACRC,MAAO,uCACP2C,UAAW,8HAEfzC,GAAI,CACAkD,oBAAqB,8CACrB/C,MAAO,QACPE,UAAW,YACXT,GAAI,KACJC,OAAQ,SACRC,MAAO,QACP2C,UAAW,iCCrGJa,GA/DO,WAElB,IAAMxH,EAAW4C,cACXqD,EAAQC,eAHU,EAKErD,aAAY,qBAAEtG,KAAeN,YAAhD2E,EALiB,EAKjBA,MAAOhE,EALU,EAKVA,SACPT,EAAiB0G,aAAY,qBAAEtG,QAA/BJ,cANiB,EAQMiI,mBAAS,IARf,mBAQjBjH,EARiB,KAQRsK,EARQ,KA+BxB,OACI,qCACI,qBAAK9L,UAAU,SAAf,SACI,qBAAKA,UAAU,MAAf,SACI,sBAAKA,UAAU,YAAf,UACI,qBAAKmH,MAAM,6BAA6BC,QAAQ,YAAYC,MAAM,KAAKC,OAAO,KAA9E,SAAmF,sBAAMC,KAAK,eAAeC,EAAE,6OAC/G,uBAAOC,SAAU,SAACC,GA3BnB,IAACkD,KA2BoClD,EAAEC,OAAOC,OA1BlDvE,OAAS,GAChB6B,IAAMyF,KAAK,iBAAkB,CAAC/H,UAAWgI,GAAQ,CAAExF,QAAS,CAAEC,cAAc,UAAD,OAAYJ,MAAYK,MAAK,SAAAC,GACpGuG,EAAWvG,EAAInB,SAChB,SAACyG,GAC4B,MAAxBA,EAAIC,SAASlJ,QACb0I,EAAMS,KAAK/C,GAAU/G,GAAU+J,WAC/BC,YAAW,WACP5G,EAASsC,OACV,OAEH2D,EAAMS,KAAK/C,GAAU/G,GAAUoH,WAgB2BlI,KAAK,OAAO4H,YAAaC,GAAU/G,GAAUgH,0BAI/G,qBAAKjI,UAAU,UAAf,SAEQwB,EAAQ0B,KAAI,SAACtC,EAAMwC,GACf,OACI,sBAAKoG,QAAS,WAnBd,IAAChF,KAmBmC5D,EAAK0C,OAlB9C9C,EAAcC,IACzB4D,EAASuC,EAAiB,CAAC1G,MAAM,EAAMO,GAAI+D,MAiBoBxE,UAAU,SAAzD,UACI,cAAC,KAAD,CAAOyJ,UAAU,YAAYC,SAAU9I,EAAKU,MAAQV,EAAKU,MAAQ,uBAAwByK,KAAK,UAC9F,qBAAK/L,UAAU,UAAf,SACI,qBAAKA,UAAU,eAAf,SACI,sBAAKA,UAAU,uBAAf,UACKY,EAAKQ,KADV,IACiBR,EAAKgC,mBALqChC,EAAK0C,IAAIF,YAoBtG4E,GAAY,CACdE,GAAI,CACAD,iBAAkB,kDAClBE,GAAI,KACJC,OAAQ,SACRC,MAAO,kBACP2C,UAAW,0CAEf1C,GAAI,CACAL,iBAAkB,mMAClBE,GAAI,KACJC,OAAQ,uCACRC,MAAO,uCACP2C,UAAW,8HAEfzC,GAAI,CACAN,iBAAkB,qCAClBE,GAAI,KACJC,OAAQ,SACRC,MAAO,QACP2C,UAAW,iC,6BCgEJgB,GArJC,WAEZ,IAAM3H,EAAW4C,cAFC,EAI6CC,aAAY,qBAAEtG,KAAeN,YAArFc,EAJW,EAIXA,KAAMC,EAJK,EAILA,YAAa4D,EAJR,EAIQA,MAAO3D,EAJf,EAIeA,MAAOsB,EAJtB,EAIsBA,UAAW3B,EAJjC,EAIiCA,SAJjC,EAMgBwH,oBAAS,GANzB,mBAMXwD,EANW,KAMAC,EANA,OAOkBzD,oBAAS,GAP3B,mBAOX0D,EAPW,KAOCC,EAPD,OASgB3D,mBAASrH,GATzB,mBASXiL,EATW,KASAC,EATA,OAUkB7D,mBAASpH,GAV3B,mBAUXkL,EAVW,KAUCC,EAVD,OAWsB/D,oBAAS,GAX/B,mBAWXgE,EAXW,KAWGC,EAXH,KAaZpC,EAAQC,eAERoC,EAAaC,mBAyDbC,EAAW,yCAAG,WAAOC,GAAP,UAAAC,EAAA,sDAChB7H,IAAMyF,KAAK,wBAAyB,CAACqC,IAAKF,GAAqB,CAAE1H,QAAS,CAAEC,cAAc,UAAD,OAAYJ,MAAYK,MAAK,SAACC,GACnHlB,ENiDuB,CAC/BlE,KAAM,oBACNC,QMnD6BmF,EAAInB,KAAK9C,QAC9BgJ,EAAM2C,QAAQjF,GAAU/G,GAAUiM,iBAClCR,GAAgB,MACjB,SAAC7B,GAC4B,MAAxBA,EAAIC,SAASlJ,QACb0I,EAAMS,KAAK/C,GAAU/G,GAAU+J,WAC/BC,YAAW,WACP5G,EAASsC,OACV,QAEH2D,EAAMS,KAAK/C,GAAU/G,GAAUoH,OAC/BqE,GAAgB,OAbR,2CAAH,sDAkBjB,OACI,sBAAK1M,UAAU,UAAf,UACI,sBAAKA,UAAU,QAAf,UACI,uBAAOmN,IAAKR,EAAYlF,SAlChB,SAACC,GACjB,IAAM0F,EAAO1F,EAAEC,OAAO0F,MAAM,GAC5B,IAAKD,EACD,OAAO,EACXV,GAAgB,GAChB,IAAMY,EAAS,IAAIC,WACnBD,EAAOE,cAAcJ,GACrBE,EAAOG,UAAY,WACfZ,EAAYS,EAAOI,UA0BgC/D,MAAO,CAACgE,QAAS,QAASxN,KAAK,OAAOyN,OAAO,YAC5F,qBAAKpE,QAAS,kBAAMmD,EAAWkB,QAAQC,SAAS9N,UAAU,cAA1D,SACI,+BAAOgI,GAAU/G,GAAU8M,gBAG/B,cAAC,KAAD,CAAOtE,UAAU,YAAYC,SAAUpI,GAAgB,yBACrDmL,GACE,qBAAKzM,UAAU,mBAAf,SACI,qBAAKA,UAAU,2BAI3B,sBAAKA,UAAU,OAAf,UACI,+BAAOgI,GAAU/G,GAAUG,OAC3B,sBAAKpB,UAAWiM,EAAY,SAAW,uBAAvC,UACI,uBAAOxL,GAAG,YAAYgH,SAAU,SAACC,GAAO4E,EAAa5E,EAAEC,OAAOC,QAASzH,KAAK,OAAO6N,aAAc5M,EAAM6M,SAAUhC,IAC/GA,EAEM,qBAAKzC,QAAS,WAAO0C,GAAa,IAAlC,SACI,qBAAK/E,MAAM,6BAA6BC,QAAQ,YAAYC,MAAM,KAAKC,OAAO,KAA9E,SAAmF,sBAAMC,KAAK,eAAeC,EAAE,oIAGnH,qBAAKgC,QAlGV,WACf0C,GAAa,GACTG,IAAcjL,GACd8D,IAAMyF,KAAK,uBAAwB,CAACvJ,KAAMiL,GAAY,CAAEjH,QAAS,CAAEC,cAAc,UAAD,OAAYJ,MAAYK,MAAK,SAACC,GAC1GlB,EN4FU,SAAAjD,GAAI,MAAK,CAC/BjB,KAAM,mBACNC,QAASgB,GM9FY8M,CAAW3I,EAAInB,KAAKhD,OAC7BkJ,EAAM2C,QAAQjF,GAAU/G,GAAUkN,mBACnC,SAACtD,GAC4B,MAAxBA,EAAIC,SAASlJ,QACb0I,EAAMS,KAAK/C,GAAU/G,GAAU+J,WAC/BC,YAAW,WACP5G,EAASsC,OACV,QAEH2D,EAAMS,KAAK/C,GAAU/G,GAAUmN,kBAChBjF,SAASkF,eAAe,aAChCzG,MAAQxG,OAmFP,SACI,qBAAK+F,MAAM,6BAA6BC,QAAQ,YAAYC,MAAM,KAAKC,OAAO,KAA9E,SAAmF,sBAAMC,KAAK,eAAeC,EAAE,kEAKnI,qBAAKxH,UAAU,SACf,sBAAKA,UAAU,QAAf,UACI,+BAAOgI,GAAU/G,GAAUqN,QAC3B,sBAAKtO,UAAWmM,EAAa,SAAW,uBAAxC,UACI,uBAAO1L,GAAG,aAAagH,SAAU,SAACC,GAAO8E,EAAc9E,EAAEC,OAAOC,QAASzH,KAAK,OAAO6N,aAAc3M,EAAa0G,YAAaC,GAAU/G,GAAUsN,iBAAkBN,SAAU9B,IAC3KA,EAEE,qBAAK3C,QAAS,WAAO4C,GAAc,IAAnC,SACI,qBAAKjF,MAAM,6BAA6BC,QAAQ,YAAYC,MAAM,KAAKC,OAAO,KAA9E,SAAmF,sBAAMC,KAAK,eAAeC,EAAE,oIAGnH,qBAAKgC,QA9FL,WAChB4C,GAAc,GACVG,IAAelL,GACf6D,IAAMyF,KAAK,wBAAyB,CAAC2D,MAAO/B,GAAa,CAAEnH,QAAS,CAAEC,cAAc,UAAD,OAAYJ,MAAYK,MAAK,SAACC,GAC7GlB,EN4EqB,CACjClE,KAAM,oBACNC,QM9EiCmF,EAAInB,KAAKkK,QAC9BhE,EAAM2C,QAAQjF,GAAU/G,GAAUuN,oBACnC,SAAC3D,GAC4B,MAAxBA,EAAIC,SAASlJ,QACb0I,EAAMS,KAAK/C,GAAU/G,GAAU+J,WAC/BC,YAAW,WACP5G,EAASsC,OACV,QAEH2D,EAAMS,KAAK/C,GAAU/G,GAAUoH,OACfc,SAASkF,eAAe,cAChCzG,MAAQvG,OA+EZ,SACI,qBAAK8F,MAAM,6BAA6BC,QAAQ,YAAYC,MAAM,KAAKC,OAAO,KAA9E,SAAmF,sBAAMC,KAAK,eAAeC,EAAE,kEAK/H,qBAAKxH,UAAU,SACf,sBAAKA,UAAU,QAAf,UACI,+BAAOgI,GAAU/G,GAAU2B,YAC3B,qBAAK5C,UAAU,SAAf,SACI,qBAAKS,GAAG,MAAMkJ,MAAO,CAAC8E,SAAS,QAA/B,SAAyC7L,aASvDoF,GAAY,CACdE,GAAI,CACAsG,gBAAiB,6BACjBL,eAAgB,4CAChBC,iBAAkB,uCAClBlB,gBAAiB,yBACjBa,YAAa,oBACb3M,KAAM,0BACNkN,MAAO,WACPC,iBAAkB,oBAClB3L,UAAW,gBACXuF,GAAI,KACJC,OAAQ,SACRC,MAAO,kBACP2C,UAAW,0CAEf1C,GAAI,CACAkG,gBAAiB,6HACjBL,eAAgB,0IAChBC,iBAAkB,+HAClBlB,gBAAiB,yIACjBa,YAAa,gHACb3M,KAAM,gEACNkN,MAAO,mDACPC,iBAAkB,6EAClB3L,UAAW,6CACXuF,GAAI,KACJC,OAAQ,uCACRC,MAAO,uCACP2C,UAAW,8HAEfzC,GAAI,CACAiG,gBAAiB,0BACjBL,eAAgB,2BAChBC,iBAAkB,uBAClBlB,gBAAiB,oBACjBa,YAAa,eACb3M,KAAM,eACNkN,MAAO,QACPC,iBAAkB,uBAClB3L,UAAW,YACXuF,GAAI,KACJC,OAAQ,SACRC,MAAO,QACP2C,UAAW,iCCpDJ0D,GA/IE,WAEb,IAAMpE,EAAQC,eAERlG,EAAW4C,cAJE,EAMaC,aAAY,qBAAEvF,UAAvCH,EANY,EAMZA,QAASE,EANG,EAMHA,aANG,EAOewF,aAAY,qBAAEtG,QAAzCJ,EAPY,EAOZA,cAAeF,EAPH,EAOGA,SAPH,EAQO4G,aAAY,cAAEtG,KAAF,OAAYN,KAA3C2E,EARY,EAQZA,MAAOhE,EARK,EAQLA,SARK,EAUKwH,mBAAS,IAVd,mBAUZrH,EAVY,KAUNuN,EAVM,OAWOlG,mBAAS,IAXhB,mBAWZnH,EAXY,KAWLsN,EAXK,OAYSnG,mBAAS,IAZlB,mBAYZ7G,EAZY,KAYJiN,EAZI,OAaepG,mBAAS,IAbxB,mBAaZ7F,EAbY,KAaDkM,EAbC,OAcOrG,mBAAS,IAdhB,mBAcZ9F,EAdY,KAcLoM,EAdK,OAeOtG,mBAAS,IAfhB,mBAeZ6F,EAfY,KAeLU,EAfK,OAiBWvG,oBAAS,GAjBpB,mBAiBZlI,EAjBY,KAiBHmK,EAjBG,KAmBnB5B,qBAAU,WACFtI,EAAcC,IACdiK,GAAW,GACXxF,IAAMC,IAAN,yBAA4B3E,EAAcC,IAAM,CAAE2E,QAAS,CAAEC,cAAc,UAAD,OAAYJ,MAAYK,MAAK,SAACC,GACpGoJ,EAAQpJ,EAAInB,KAAKhD,MACjByN,EAAUtJ,EAAInB,KAAKxC,QACnBgN,EAASrJ,EAAInB,KAAK9C,OAClBwN,EAAavJ,EAAInB,KAAKxB,WACtBmM,EAASxJ,EAAInB,KAAKzB,OAClBqM,EAASzJ,EAAInB,KAAK/C,aAClBqJ,GAAW,MACZ,SAACG,GAC4B,MAAxBA,EAAIC,SAASlJ,QACb0I,EAAMS,KAAK/C,GAAU/G,GAAU+J,WAC/BC,YAAW,WACP5G,EAASsC,OACV,QAEH+D,GAAW,GACXJ,EAAMS,KAAK/C,GAAU/G,GAAUoH,aAInC3G,IACAiN,EAAQnN,EAAQE,GAAcN,MAC9ByN,EAAUrN,EAAQE,GAAcE,QAChCgN,EAASpN,EAAQE,GAAcJ,OAC/BwN,EAAatN,EAAQE,GAAckB,WACnCmM,EAASvN,EAAQE,GAAciB,OAC/BqM,EAASxN,EAAQE,GAAcL,cAEnCqJ,GAAW,MAEhB,CAAClK,IAEJ,IAAMyO,EAAkB,WACpBvE,GAAW,GACXrG,ERlDoB,SAACY,EAAOT,GAChC,OAAO,SAAAH,GACH,OAAOa,IAAMyF,KAAK,kBAAmB,CAACnG,UAAQ,CAAEY,QAAS,CAAEC,cAAc,UAAD,OAAWJ,MAAWK,MAAK,SAAAC,GAC/FlB,EAASW,EAAaC,IAAQK,MAAK,WAAOjB,EAASuB,EAAgBL,EAAInB,UACvErD,EAAOC,KAAK,YAAauE,EAAInB,SAC9B,WACC,OAAQ,MQ4CH8K,CAAajK,EAAOzE,EAAcC,KAAK6E,MAAK,SAACC,GAClDmF,GAAW,IACE,IAATnF,GACA+E,EAAMS,KAAK/C,GAAU/G,GAAUoH,OACnChE,EAASuC,EAAiB,CAAC1G,MAAM,EAAOO,GAAI,YAepD,OACQ,sBAAKT,UAAU,WAAf,UACI,sBAAKA,UAAU,aAAf,UACI,qBAAKwJ,QAAS,kBAAMnF,EAASuC,EAAiB,CAAC1G,MAAM,EAAOO,GAAI,SAAS0G,MAAM,6BAC1EC,QAAQ,YAAYC,MAAM,KAAKC,OAAO,KAD3C,SAEI,sBAAMC,KAAK,eACLC,EAAE,kHAEZ,qBAAKxH,UAAU,QAAf,SAAwBgI,GAAU/G,GAAUkO,kBAE7C5O,GACC,mCACI,sBAAKP,UAAU,OAAf,UACI,sBAAKA,UAAU,OAAf,UACI,qBAAK2J,MAAO,CAACtC,MAAO,SAApB,SACI,cAAC,KAAD,CAAOoC,UAAU,YACVC,SAAUpI,GAAgB,2BAErC,qBAAKtB,UAAU,OAAO2J,MAAOjI,EAAeF,EAAQE,GAAcmB,SAAW,CAAC+G,MAAO,kBAAoB,GAAzG,SAA8GxI,IAC9G,qBAAKpB,UAAU,SAAS2J,MAAOjI,EAAeF,EAAQE,GAAcmB,SAAW,CAAC+G,MAAO,kBAAoB,GAA3G,SACMlI,GAAgBF,EAAQE,GAAcmB,QAEpCmF,GAAU/G,GAAU4B,QAEpBjB,EAASoG,GAAU/G,GAAUmO,OAASpH,GAAU/G,GAAUoO,cAInE7N,EAAQhB,EAAcE,WACrB,sBAAK8I,QAAS,WAAOyF,KAAoBjP,UAAU,SAAS2J,MAAO,CAAC2F,aAAc,QAAlF,UACI,qBAAKtP,UAAU,QAAQmH,MAAM,6BAA6BC,QAAQ,YAAYC,MAAM,KAAKC,OAAO,KAAhG,SAAqG,sBAAMC,KAAK,eAAeC,EAAE,0DACjI,qBAAKxH,UAAU,iCAAf,SAAiDgI,GAAU/G,GAAUsO,kBAG7E,sBAAK5F,MAAOjI,EAAeF,EAAQE,GAAcmB,SAAW,CAAC8K,QAAS,QAAU,GAAI3N,UAAU,QAA9F,UACI,+BAAOgI,GAAU/G,GAAU2B,YAC3B,8BAAMA,OAEV,sBAAK+G,MAAOjI,EAAeF,EAAQE,GAAcmB,SAAW,CAAC8K,QAAS,QAAU,GAAI3N,UAAU,QAA9F,UACI,yCACA,8BAAM2C,OAEV,sBAAKgH,MAAOjI,EAAeF,EAAQE,GAAcmB,SAAW,CAAC8K,QAAS,QAAU,GAAI3N,UAAU,QAA9F,UACI,+BAAOgI,GAAU/G,GAAUqN,QAC3B,8BAAMA,GAAgBtG,GAAU/G,GAAUuO,UAE5ChO,EAAQhB,EAAcE,WACpB,sBAAK8I,QA1DV,WAEnB,IADY9F,OAAO+L,QAAQzH,GAAU/G,GAAUyO,MAE3C,OAAO,EACXhF,GAAW,GACXrG,ERQoB,SAAC3D,EAAUuE,GAAoB,IAAbxE,EAAY,uDAAP,GAC/C,OAAO,SAAA4D,GACH,OAAOa,IAAMyF,KAAK,qBAAsB,CAACjK,SAAUA,EAAUD,GAAIA,GAAI,CAAE2E,QAAS,CAAEC,cAAc,UAAD,OAAWJ,MAAWK,MAAK,WACtHvE,EAAOC,KAAK,eAAgBN,EAAUD,GACtC4D,EAASuB,EAAgB,KACzBvB,EAASwB,EAAgBnF,QQbpBiP,CAAanP,EAAcE,SAAUuE,EAAOzE,EAAcC,KAAK6E,MAAK,WACzEoF,GAAW,GACXrG,EAASuC,EAAiB,CAAC1G,MAAM,EAAOO,GAAI,YAmDMT,UAAU,SAAxC,UACI,qBAAKA,UAAU,MAAMmH,MAAM,6BAA6BC,QAAQ,YAC3DC,MAAM,KAAKC,OAAO,KADvB,SAEI,sBAAMC,KAAK,eACLC,EAAE,oFAEZ,qBAAKxH,UAAU,+BAAf,SAA+CgI,GAAU/G,GAAU2O,qBAMrFrP,GACE,qBAAKP,UAAU,mBAAf,SACI,qBAAKA,UAAU,4BASjCgI,GAAY,CACdE,GAAI,CACAiH,YAAa,2BACbI,aAAc,qBACdK,WAAY,sCACZF,KAAM,sCACNtO,KAAM,0BACNkN,MAAO,WACP1L,UAAW,gBACXC,QAAS,cACTuM,OAAQ,SACRC,QAAS,UACTlH,GAAI,KACJC,OAAQ,SACRC,MAAO,kBACPmH,KAAM,MACNxE,UAAW,0CAEf1C,GAAI,CACA6G,YAAa,iHACbI,aAAc,+FACdK,WAAY,gEACZF,KAAM,2DACNtO,KAAM,gEACNkN,MAAO,mDACP1L,UAAW,6CACXC,QAAS,uCACTuM,OAAQ,kCACRC,QAAS,+CACTlH,GAAI,KACJC,OAAQ,uCACRC,MAAO,uCACPmH,KAAM,iCACNxE,UAAW,8HAEfzC,GAAI,CACA4G,YAAa,eACbI,aAAc,iBACdK,WAAY,cACZF,KAAM,gBACNtO,KAAM,eACNkN,MAAO,QACP1L,UAAW,YACXC,QAAS,UACTuM,OAAQ,SACRC,QAAS,UACTlH,GAAI,KACJC,OAAQ,SACRC,MAAO,QACPmH,KAAM,OACNxE,UAAW,iC,SCwHJ6E,OArTf,WAEI,IAAMxL,EAAW4C,cAFA,EAI6BC,aAAY,qBAAEvF,UAArDH,EAJU,EAIVA,QAASE,EAJC,EAIDA,aAAcD,EAJb,EAIaA,aAJb,EAK8ByF,aAAY,qBAAEtG,KAAeN,YAArE2E,EALU,EAKVA,MAAOT,EALG,EAKHA,OAAQiC,EALL,EAKKA,KAAMnF,EALX,EAKWA,MAAOL,EALlB,EAKkBA,SALlB,EAMqBiG,aAAY,qBAAEtG,QAA7CJ,EANU,EAMVA,cAAeG,EANL,EAMKA,aAEhB2J,EAAQC,eARG,EAUqC9B,oBAAS,GAV9C,mBAUVqH,EAVU,KAUWC,EAVX,OAWatH,oBAAS,GAXtB,mBAWVuH,EAXU,KAWDC,EAXC,OAY2BxH,oBAAS,GAZpC,mBAYVyH,EAZU,KAYMC,EAZN,OAae1H,mBAASjI,EAAcN,MAbtC,mBAaVkQ,EAbU,KAaAC,EAbA,OAeqB5H,mBAASxH,GAf9B,mBAeVqP,EAfU,KAeGC,EAfH,OAiBqB9H,mBAAS,IAjB9B,mBAiBV+H,EAjBU,KAiBGC,GAjBH,QAkByBhI,oBAAS,GAlBlC,qBAkBViI,GAlBU,MAkBKC,GAlBL,MAoBXC,GAAWhE,mBACXiE,GAAiBjE,mBAEvB9D,qBAAU,WACNiH,GAAuB,GACvB1L,EXzBG,CACHlE,KAAM,wBWyBFuB,IACKF,EAAQE,GAAcmB,SAAWrB,EAAQE,GAAcC,OAAOM,qBAAuBuC,GACtFzD,EAAOC,KAAK,mBAAoB,CAACN,SAAUgB,EAAcjB,GAAI+D,IAC7DhD,EAAQE,GAAcC,OAAOM,qBAAuBuC,GACpDH,EAASK,EAA2BhD,OAE7C,CAACA,IAEJoH,qBAAU,WACDtI,EAAcN,KAGfmQ,GAAY,GAFZA,GAAY,KAIjB,CAAC7P,IAEJ,IAAMsQ,GAAqB,SAACpJ,GACnBA,EAAEqJ,eAAe3F,SAASwF,GAAS/C,UAAanG,EAAEqJ,eAAe3F,SAASyF,GAAehD,UAC1F8C,IAAiB,IAIzB7H,qBAAU,WAGN,OAFAK,SAAS/C,KAAK4K,iBAAiB,QAASF,IAEjC,WACH3H,SAAS/C,KAAK6K,oBAAoB,QAASH,OAEhD,IAEH,IAAMI,GAAc,SAACxJ,GAKjB,GAJAA,EAAEyJ,iBACYhI,SAASiI,cAAc,qBAC/BxJ,MAAQ,GAEVpG,EAAQE,GAAcmB,QAEtB,OADAyH,EAAMS,KAAK/C,GAAU/G,GAAUoQ,cACxB,EAGX,IAAMtO,EAAU,CACZuO,UAAW9P,EAAQE,GAAcjB,GACjCqB,KAAM0O,EACN9P,SAAUgB,GAGd,IAAK8O,EAED,OADAlG,EAAMS,KAAK/C,GAAU/G,GAAUsQ,gBACxB,EAGXrM,IAAMyF,KAAK,mBAAoB5H,EAAS,CAAEqC,QAAS,CAAEC,cAAc,UAAD,OAAYJ,MAAYK,MAAK,SAAAvC,GAC3FhC,EAAOC,KAAK,aAAc+B,EAAQqB,SACnC,SAACyG,GAC4B,MAAxBA,EAAIC,SAASlJ,QACb0I,EAAMS,KAAK/C,GAAU/G,GAAU+J,WAC/BC,YAAW,WACP5G,EAASsC,OACV,OAEH2D,EAAMS,KAAK/C,GAAU/G,GAAUuQ,aAIvC,IAAMC,EAAOxI,KAEPhG,EAAM,CACRK,IAAK,OACLxB,KAAM0O,EACNtO,MAAOsC,EACP8M,UAAW9P,EAAQE,GAAcjB,GACjCuB,KAAMyP,EACN7P,QAAQ,EACRlB,SAAUgB,GAGd2C,EAASJ,EAAehB,IACxBoB,EAASI,EAAqB/C,EAAcuB,IAExCxB,EAAa,KAAOC,GACpB2C,EAASM,EAAkBjD,IAE/B+O,GAAe,KAGbiB,GAAe,WAIbrN,EAASuC,EAAiB,CAAC1G,MAAM,EAAMO,GAAIe,EAAQE,GAAcjB,GAAIC,SAAUgB,KAEnF2O,GAAY,IAsBhB,OACI,gCACI,cAACsB,EAAA,EAAD,UACI,gDAEJ,cAAC,EAAD,IACEzB,GACE,qBAAKlQ,UAAU,WAAf,SACI,qBAAKA,UAAU,YAAf,SACI,sBAAKA,UAAU,aAAf,UACI,qBAAKA,UAAU,UAAf,SAA0BgI,GAAU/G,GAAU2Q,YAAYC,UAC1D,sBAAK7R,UAAU,SAAf,UACI,kCACI,uBAAOoB,KAAK,MAAMwG,MAAM,KAAKH,SAAU,SAACC,GAAO6I,EAAe7I,EAAEC,OAAOC,QAASzH,KAAK,QAAQ2R,eAA6B,OAAb7Q,IADjH,QAIA,kCACI,uBAAOG,KAAK,MAAMwG,MAAM,KAAKH,SAAU,SAACC,GAAO6I,EAAe7I,EAAEC,OAAOC,QAASzH,KAAK,QAAQ2R,eAA6B,OAAb7Q,IADjH,QAIA,kCACI,uBAAOG,KAAK,MAAMwG,MAAM,KAAKH,SAAU,SAACC,GAAO6I,EAAe7I,EAAEC,OAAOC,QAASzH,KAAK,QAAQ2R,eAA6B,OAAb7Q,IADjH,WAKJ,sBAAKjB,UAAU,SAAf,UACI,qBAAKA,UAAU,KAAKwJ,QA7CzB,WACfvI,IAAaqP,GAEjBpL,IAAMyF,KAAK,2BAA4B,CAAE1J,SAAUqP,GAAc,CAAElL,QAAS,CAAEC,cAAc,UAAD,OAAYJ,MAAYK,MAAK,SAACC,GACrHlB,EAAS2B,EAAmBT,EAAInB,KAAKnD,WACrCqJ,EAAM2C,QAAQjF,GAAUsI,GAAasB,YAAYG,cACjD5B,GAAkB,MACnB,SAACtF,GAC4B,MAAxBA,EAAIC,SAASlJ,QACb0I,EAAMS,KAAK/C,GAAU/G,GAAU+J,WAC/BC,YAAW,WACP5G,EAASsC,OACV,OAEH2D,EAAMS,KAAK/C,GAAU/G,GAAUoH,WA+Bf,SACKL,GAAU/G,GAAUkH,KAEzB,qBAAKnI,UAAU,SAASwJ,QAAS,WAAO2G,GAAkB,IAA1D,SACKnI,GAAU/G,GAAUmH,mBAO7C,qBAAKpI,UAAU,aAAf,SACI,qBAAKA,UAAU,WAAf,SACI,sBAAKA,UAAU,YAAf,UACI,sBAAKA,UAAU,WAAf,UACM8P,GACE,qCACI,qBAAK9P,UAAU,cAAf,SACI,sBAAKA,UAAU,MAAf,UACI,qBAAKA,UAAU,OAAf,SACI,qBAAKwJ,QAAS,WAAOuG,GAAuB,IAAS5I,MAAM,6BAA6BC,QAAQ,YAAYC,MAAM,KAAKC,OAAO,KAA9H,SAAmI,sBAAMC,KAAK,eAAeC,EAAE,8DAEnK,qBAAKxH,UAAU,WAAf,SACKgI,GAAU/G,GAAU+Q,eAIjC,cAAC,GAAD,OAIJhC,GACA,qCACI,qBAAKhQ,UAAU,cAAf,SACI,sBAAKA,UAAU,MAAf,UACI,qBAAKA,UAAU,OAAf,SACI,qBAAKwJ,QAAS,WAAOyG,GAAW,IAAS9I,MAAM,6BAA6BC,QAAQ,YAAYC,MAAM,KAAKC,OAAO,KAAlH,SAAuH,sBAAMC,KAAK,eAAeC,EAAE,8DAEvJ,qBAAKxH,UAAU,WAAf,SACKgI,GAAU/G,GAAU+O,eAIjC,cAAC,GAAD,QAGLF,IAAwBE,GACvB,gCACI,sBAAKhQ,UAAU,aAAf,UACI,cAAC,KAAD,CAAOwJ,QAAS,kBAAMyG,GAAW,IAAOxG,UAAU,YAAYC,SAAUpI,GAAgB,yBACxF,sBAAKtB,UAAU,WAAf,UACI,qBAAKS,GAAG,uCACH0G,MAAM,6BAA6BC,QAAQ,YAAYC,MAAM,KAC7DC,OAAO,KAFZ,SAGI,sBAAMC,KAAK,eACLC,EAAE,ucAEc,IAAxB/F,EAAa4B,QACX,qBAAKrD,UAAU,0BAEnB,qBAAKwJ,QAAS,WAAOuG,GAAuB,IAAQ5I,MAAM,6BAA6BC,QAAQ,YAAYC,MAAM,KAC5GC,OAAO,KADZ,SAEI,sBAAMC,KAAK,eACLC,EAAE,yNAEZ,qBAAK2F,IAAK0D,GAAgB7Q,UAAW0Q,GAAgB,SAAW,GAAIlH,QAAS,WAAOmH,IAAkBD,KAAiBvJ,MAAM,6BAA6BC,QAAQ,YAAYC,MAAM,KAC/KC,OAAO,KADZ,SAEI,sBAAMC,KAAK,eACLC,EAAE,oIAGRkJ,IACA,sBAAK1Q,UAAU,gBAAgBmN,IAAKyD,GAApC,UACI,qBAAK5Q,UAAU,eAAewJ,QAAS,WAAOyG,GAAW,GAAOU,IAAiB,IAAjF,SAA0F,8BAAM3I,GAAU/G,GAAU+O,YACpH,qBAAKhQ,UAAU,eAAewJ,QAAS,aAAvC,SAAiD,wCACjD,qBAAKxJ,UAAU,eAAewJ,QAAS,WAAO2G,GAAkB,GAAOQ,IAAiB,IAAxF,SAAiG,8BAAM3I,GAAU/G,GAAUA,aAC3H,qBAAKjB,UAAU,eAAewJ,QAAS,WAAOnF,EAASsC,MAAvD,SAAuE,8BAAMqB,GAAU/G,GAAU4F,iBAKhG,UAATJ,GACA,cAAC,KAAD,CAAMwL,GAAG,SAAT,2BAGR,cAAC,EAAD,IACEtR,EAEE,cAAC,GAAD,IAEA,cAAC,GAAD,UAKde,GACE,sBAAK1B,UAAU,WAAf,UACI,sBAAKA,UAAU,aAAf,UACI,qBAAKA,UAAU,UAAf,SACI,cAAC,KAAD,CAAOwJ,QAAS,kBAAMkI,MAAgBjI,UAAU,YAAYC,SAAUlI,EAAQE,GAAcJ,MAAQE,EAAQE,GAAcJ,MAAQ,uBAAwByK,KAAK,YAEnK,sBAAKvC,QAAS,kBAAMkI,MAAgB1R,UAAU,cAA9C,UACI,qBAAKA,UAAWwB,EAAQE,GAAcmB,QAAU,kBAAoB,cAApE,SACKrB,EAAQE,GAAcN,OAE3B,qBAAKpB,UAAU,iBAAiB2J,MAAOnI,EAAQE,GAAcmB,SAAW,CAAC+G,MAAO,kBAAhF,SACMpI,EAAQE,GAAcmB,QAEhBmF,GAAU/G,GAAU4B,QAExBrB,EAAQE,GAAcE,OAASoG,GAAU/G,GAAUmO,OAASpH,GAAU/G,GAAUoO,aAI5F,sBAAKrP,UAAU,WAAf,UACI,qBAAKmH,MAAM,6BAA6BC,QAAQ,YAAYC,MAAM,KAAKC,OAAO,KAA9E,SAAmF,sBAAMC,KAAK,eAAeC,EAAE,8NAC/G,qBAAKL,MAAM,6BAA6BC,QAAQ,YAAYC,MAAM,KAAKC,OAAO,KAA9E,SAAmF,sBAAMC,KAAK,eAAeC,EAAE,0IAGvH,cAAC,GAAD,IACA,qBAAKxH,UAAU,SAAf,SACI,qBAAKA,UAAU,MAAf,SACI,uBAAMkS,SAAUhB,GAAalR,UAAU,YAAvC,UACI,uBAAOyH,SAAU,SAAAC,GAAC,OAAI+I,GAAe/I,EAAEC,OAAOC,QAAQnH,GAAG,mBAAmBN,KAAK,OAAO4H,YAAaC,GAAU/G,GAAUkR,aAAcC,SAAU5Q,EAAQE,GAAcmB,QAASwP,aAAa,QAC7L,qBAAK5L,KAAK,SAAS+C,QAAS0H,GAAa/Q,KAAK,SAASgH,MAAM,6BAA6BC,QAAQ,YAAYC,MAAM,KAAKC,OAAO,KAAhI,SAAqI,sBAAMC,KAAK,eAAeC,EAAE,sGAMlL9F,IAAiB0O,GAChB,qBAAKpQ,UAAU,aAEjBoQ,GACE,cAAC,GAAD,eAYtBnH,GAAU,WACZ,IAAMc,EAAW,IAAIhB,KAEjBiB,EAAMD,EAASd,UACfe,EAAM,KAAIA,EAAM,IAAMA,GAE1B,IAAIC,EAAQF,EAASG,WAAa,EAC9BD,EAAQ,KAAIA,EAAQ,IAAMA,GAE9B,IAAIE,EAAOJ,EAASK,cAEhBkI,EAAQvI,EAASwI,WACjBD,EAAQ,KAAIA,EAAQ,IAAMA,GAE9B,IAAIE,EAAUzI,EAAS0I,aACnBD,EAAU,KAAIA,EAAU,IAAMA,GAElC,IAAIE,EAAU3I,EAAS4I,aAGvB,OAFID,EAAU,KAAIA,EAAU,IAAMA,GAE5B,GAAN,OAAW1I,EAAX,YAAkBC,EAAlB,YAA2BE,EAA3B,YAAmCmI,EAAnC,YAA4CE,EAA5C,YAAuDE,IAGrD1K,GAAY,CACdE,GAAI,CACA0J,YAAa,CACTG,aAAc,2BACdF,QAAS,2BAEbG,QAAS,iCACThC,QAAS,UACT/O,SAAU,SACV4F,OAAQ,QACRhE,QAAS,cACTuM,OAAQ,SACRC,QAAS,UACT8C,aAAc,yBACdhK,GAAI,KACJC,OAAQ,SACRC,MAAO,kBACPmJ,SAAU,uDACVD,cAAe,gCACfF,YAAa,+GACbrG,UAAW,0CAEf1C,GAAI,CACAsJ,YAAa,CACTG,aAAc,iHACdF,QAAS,6EAEbG,QAAS,oDACThC,QAAS,6CACT/O,SAAU,2BACV4F,OAAQ,iCACRhE,QAAS,uCACTuM,OAAQ,kCACRC,QAAS,+CACT8C,aAAc,oGACdhK,GAAI,KACJC,OAAQ,uCACRC,MAAO,uCACPmJ,SAAU,kKACVD,cAAe,mIACfF,YAAa,sQACbrG,UAAW,8HAEfzC,GAAI,CACAqJ,YAAa,CACTG,aAAc,mBACdF,QAAS,qBAEbG,QAAS,WACThC,QAAS,UACT/O,SAAU,WACV4F,OAAQ,SACRhE,QAAS,UACTuM,OAAQ,SACRC,QAAS,UACT8C,aAAc,kBACdhK,GAAI,KACJC,OAAQ,SACRC,MAAO,QACPmJ,SAAU,6BACVD,cAAe,yBACfF,YAAa,8CACbrG,UAAW,iCCnVJ4H,OA/Df,WAEI,IAAMvO,EAAW4C,cAEThG,EAAaiG,aAAY,qBAAEtG,KAAeN,YAA1CW,SAEFqJ,EAAQC,eANG,EAQa9B,oBAAS,GARtB,mBAQVlI,EARU,KAQDmK,EARC,OAUOjC,mBAAS,CAC7B9F,MAAO,GAAIkQ,SAAU,GAAI5R,SAAUA,IAXtB,mBAUV6R,EAVU,KAUJC,EAVI,KAcXC,EAAgB,SAAAC,GAClBF,EAAQ,2BAAKD,GAAN,kBAAaG,EAAMtL,OAAOvG,KAAO6R,EAAMtL,OAAOC,UAczD,OACI,gCACI,cAAC+J,EAAA,EAAD,UACI,gCAAQ3J,GAAU/G,GAAUiS,UAEhC,qBAAKlT,UAAU,sBACf,qBAAKA,UAAU,aAAf,SACI,qBAAKA,UAAU,WAAf,SACI,uBAAMA,UAAU,YAAYkS,SAnB7B,SAAAe,GACXA,EAAM9B,iBACNzG,GAAW,GACXrG,EAASyB,EAAcgN,EAAK,UAAUxN,MAAK,SAAAC,GACnCA,IACAmF,GAAW,GACXJ,EAAMS,KAAKxF,QAaP,UACKhF,EAEO,6BAAKyH,GAAU/G,GAAUV,UAEzB,6BAAKyH,GAAU/G,GAAUiS,QAEjC,sBAAKlT,UAAU,aAAf,UACI,uBAAOG,KAAK,QAAQM,GAAG,QAAQW,KAAK,QAAQ+R,UAAQ,EAAC1L,SAAUuL,IAC/D,yBACA,uBAAOI,QAAQ,QAAf,uBAEJ,sBAAKpT,UAAU,aAAf,UACI,uBAAOG,KAAK,WAAWM,GAAG,OAAOW,KAAK,WAAWiS,UAAU,IAAIF,UAAQ,EAAC1L,SAAUuL,IAClF,yBACA,uBAAOI,QAAQ,OAAf,SAAuBpL,GAAU/G,GAAU4R,cAE/C,wBAAQ1S,KAAK,SAAb,SAAuB6H,GAAU/G,GAAUqS,QAC3C,cAAC,KAAD,CAAMrB,GAAG,gBAAT,SAA0BjK,GAAU/G,GAAUsS,oBAUhEvL,GAAY,CACdE,GAAI,CACAgL,MAAO,mBACP3S,QAAS,4BACTsS,SAAU,SACVS,MAAO,mBACPC,OAAQ,kCACRpL,GAAI,KACJC,OAAQ,SACRC,MAAO,mBAEXC,GAAI,CACA4K,MAAO,2BACP3S,QAAS,mDACTsS,SAAU,uCACVS,MAAO,iCACPC,OAAQ,qLACRpL,GAAI,KACJC,OAAQ,uCACRC,MAAO,wCAEXE,GAAI,CACA2K,MAAO,QACP3S,QAAS,UACTsS,SAAU,WACVS,MAAO,QACPC,OAAQ,yBACRpL,GAAI,KACJC,OAAQ,SACRC,MAAO,UCTAmL,OArFf,WAEI,IAAMnP,EAAW4C,cAEThG,EAAaiG,aAAY,qBAAEtG,KAAeN,YAA1CW,SAEFqJ,EAAQC,eANO,EAQS9B,oBAAS,GARlB,mBAQdlI,EARc,KAQLmK,EARK,OAUGjC,mBAAS,CAC7B7F,UAAW,GAAIxB,KAAM,GAAIuB,MAAO,GAAIkQ,SAAU,GAAI5R,SAAUA,IAX3C,mBAUd6R,EAVc,KAURC,EAVQ,OAciBtK,mBAAS,IAd1B,mBAcdgL,EAdc,KAcDC,EAdC,KAgBfV,EAAgB,SAAAC,GAClBF,EAAQ,2BAAKD,GAAN,kBAAaG,EAAMtL,OAAOvG,KAAO6R,EAAMtL,OAAOC,UAmBzD,OACI,gCACI,cAAC+J,EAAA,EAAD,UACI,gCAAQ3J,GAAU/G,GAAUiS,UAEhC,qBAAKlT,UAAU,sBACf,qBAAKA,UAAU,aAAf,SACI,qBAAKA,UAAU,WAAf,SACI,uBAAMA,UAAU,YAAYkS,SAxB7B,SAAAe,GACXA,EAAM9B,iBACNzG,GAAW,GACX7C,QAAQC,IAAI2L,GACRA,IAAgBX,EAAKD,WACrBvI,EAAMS,KAAK,yBACXL,GAAW,IAEfrG,EAASyB,EAAcgN,EAAK,aAAaxN,MAAK,SAAAC,GACtCA,IACAmF,GAAW,GACXJ,EAAMS,KAAKxF,QAaP,UACKhF,EAEO,6BAAKyH,GAAU/G,GAAUV,UAEzB,6BAAKyH,GAAU/G,GAAUiS,QAEjC,sBAAKlT,UAAU,aAAf,UACI,uBAAOG,KAAK,MAAMM,GAAG,YAAYW,KAAK,YAAY+R,UAAQ,EAAC1L,SAAUuL,IACrE,yBACA,uBAAOI,QAAQ,YAAf,SAA4BpL,GAAU/G,GAAU2B,eAEpD,sBAAK5C,UAAU,aAAf,UACI,uBAAOG,KAAK,MAAMM,GAAG,OAAOW,KAAK,OAAO+R,UAAQ,EAAC1L,SAAUuL,IAC3D,yBACA,uBAAOI,QAAQ,OAAf,SAAuBpL,GAAU/G,GAAU0S,iBAE/C,sBAAK3T,UAAU,aAAf,UACI,uBAAOG,KAAK,QAAQM,GAAG,QAAQW,KAAK,QAAQ+R,UAAQ,EAAC1L,SAAUuL,IAC/D,yBACA,uBAAOI,QAAQ,QAAf,uBAEJ,sBAAKpT,UAAU,aAAf,UACI,uBAAOG,KAAK,WAAWM,GAAG,WAAWW,KAAK,WAAWiS,UAAU,IAAIF,UAAQ,EAAC1L,SAAUuL,IACtF,yBACA,uBAAOI,QAAQ,OAAf,SAAuBpL,GAAU/G,GAAU4R,cAE/C,sBAAK7S,UAAU,aAAf,UACI,uBAAOG,KAAK,WAAWM,GAAG,mBAAmBW,KAAK,WAAWiS,UAAU,IAAIF,UAAQ,EAAC1L,SAAU,SAACC,GAAOgM,EAAehM,EAAEC,OAAOC,UAC9H,yBACA,uBAAOwL,QAAQ,OAAf,SAAuBpL,GAAU/G,GAAU2S,qBAE/C,wBAAQzT,KAAK,SAAb,SAAuB6H,GAAU/G,GAAUsS,SAC3C,cAAC,KAAD,CAAMtB,GAAG,SAAT,SAAmBjK,GAAU/G,GAAUqS,mBAUzDtL,GAAY,CACdE,GAAI,CACAgL,MAAO,yBACP3S,QAAS,4BACTsS,SAAU,SACVS,MAAO,iDACPC,OAAQ,yBACR3Q,UAAW,WACX+Q,YAAa,0BACbC,gBAAiB,sBACjBzL,GAAI,KACJC,OAAQ,SACRC,MAAO,mBAEXC,GAAI,CACA4K,MAAO,qEACP3S,QAAS,mDACTsS,SAAU,uCACVS,MAAO,iJACPC,OAAQ,+GACR3Q,UAAW,6CACX+Q,YAAa,gEACbC,gBAAiB,0GACjBzL,GAAI,KACJC,OAAQ,uCACRC,MAAO,wCAEXE,GAAI,CACA2K,MAAO,eACP3S,QAAS,UACTsS,SAAU,WACVS,MAAO,8BACPC,OAAQ,WACR3Q,UAAW,YACX+Q,YAAa,eACbC,gBAAiB,mBACjBzL,GAAI,KACJC,OAAQ,SACRC,MAAO,UC/GAwL,GApBK,WAEhB,OACI,sBAAK7T,UAAU,YAAf,UACI,qBAAKA,UAAU,wBACf,qBAAKA,UAAU,wBACf,qBAAKA,UAAU,wBACf,qBAAKA,UAAU,wBACf,qBAAKA,UAAU,wBACf,qBAAKA,UAAU,wBACf,qBAAKA,UAAU,wBACf,qBAAKA,UAAU,wBACf,qBAAKA,UAAU,wBACf,qBAAKA,UAAU,yBACf,qBAAKA,UAAU,yBACf,qBAAKA,UAAU,6BCgbZ8T,OAtbf,WAEI,IAAMzP,EAAW4C,cAFC,EAIeC,aAAY,qBAAEtG,KAAeN,YAAvD2E,EAJW,EAIXA,MAAO3D,EAJI,EAIJA,MAAOL,EAJH,EAIGA,SAEfqJ,EAAQC,eAERoC,EAAaC,mBARD,EAU0BnE,oBAAS,GAVnC,mBAUXyH,EAVW,KAUKC,EAVL,OAWgB1H,mBAAS,IAXzB,mBAWX7F,EAXW,KAWAkM,EAXA,OAYsBrG,mBAAS,IAZ/B,mBAYX/G,EAZW,KAYGqS,EAZH,OAaQtL,mBAAS,IAbjB,mBAaXuL,EAbW,KAaJC,EAbI,OAcMxL,mBAAS,IAdf,mBAcX7H,EAdW,KAcLsT,EAdK,OAiBqBzL,oBAAS,GAjB9B,mBAiBX0L,EAjBW,KAiBEC,EAjBF,OAkBoB3L,oBAAS,GAlB7B,mBAkBX4L,EAlBW,KAkBEC,EAlBF,OAmBsB7L,oBAAS,GAnB/B,mBAmBXgE,EAnBW,KAmBGC,EAnBH,OAqBoBjE,mBAASxH,GArB7B,mBAqBXqP,EArBW,KAqBEC,EArBF,OAuBwB9H,oBAAS,GAvBjC,oBAuBXiI,GAvBW,MAuBIC,GAvBJ,SAyBgBlI,oBAAS,GAzBzB,qBAyBXwD,GAzBW,MAyBAC,GAzBA,SA0B0BzD,oBAAS,GA1BnC,qBA0BX8L,GA1BW,MA0BKC,GA1BL,SA2BkB/L,oBAAS,GA3B3B,qBA2BX0D,GA3BW,MA2BCC,GA3BD,SA4BkB3D,oBAAS,GA5B3B,qBA4BXgM,GA5BW,MA4BCC,GA5BD,SA8BgBjM,mBAAS,IA9BzB,qBA8BX4D,GA9BW,MA8BAC,GA9BA,SA+B0B7D,mBAAS,IA/BnC,qBA+BXkM,GA/BW,MA+BKC,GA/BL,SAgCkBnM,mBAAS,IAhC3B,qBAgCXoM,GAhCW,MAgCCC,GAhCD,SAiCkBrM,mBAAS,IAjC3B,qBAiCX8D,GAjCW,MAiCCC,GAjCD,MAmCZoE,GAAWhE,mBACXiE,GAAiBjE,mBAEjBkE,GAAqB,SAACpJ,GACnBA,EAAEqJ,eAAe3F,SAASwF,GAAS/C,UAAanG,EAAEqJ,eAAe3F,SAASyF,GAAehD,UAC1F8C,IAAiB,IAIzB7H,qBAAU,WAGN,OAFAK,SAAS/C,KAAK4K,iBAAiB,QAASF,IAEjC,WACH3H,SAAS/C,KAAK6K,oBAAoB,QAASH,OAEhD,IAGHhI,qBAAU,WACFlG,EAAUS,OAAS,GACnB+Q,GAAgB,GAChBlP,IAAMyF,KAAK,uBAAwB,CAAC/H,UAAWA,GAAY,CAAEwC,QAAS,CAAEC,cAAc,UAAD,OAAYJ,MAAYK,MAAK,SAAAC,GAC9G6O,GAAgB,GAChBH,EAAS1O,EAAInB,SACd,WACCkG,EAAMS,KAAK/C,GAAU/G,GAAUoH,WAEP,IAArBzF,EAAUS,QACjB4Q,EAAS,MAEd,CAACrR,IAEJkG,qBAAU,WACFpH,IACA4S,GAAe,GACfpP,IAAMC,IAAN,yBAA4BzD,GAAgB,CAAE0D,QAAS,CAAEC,cAAc,UAAD,OAAYJ,MAAYK,MAAK,SAAAC,GAC/FsC,QAAQC,IAAIvC,EAAInB,MAChB8P,EAAQ3O,EAAInB,MACZkI,GAAa/G,EAAInB,KAAKhD,MACtBwT,GAAkBrP,EAAInB,KAAKxB,WAC3B4J,GAAcjH,EAAInB,KAAK/C,aACvByT,GAAcvP,EAAInB,KAAKzB,OACvB2R,GAAe,MAChB,WACChK,EAAMS,KAAK/C,GAAU/G,GAAUoH,WAGvC6D,IAAa,GACbsI,IAAkB,GAClBE,IAAc,GACdtI,IAAc,KACf,CAAC1K,IAEJ,IAgCMmL,GAAW,yCAAG,WAAOC,GAAP,UAAAC,EAAA,sDAChB7H,IAAMyF,KAAK,8BAA+B,CAACqC,IAAKF,EAAoBrM,GAAIG,EAAK0C,KAAM,CAAE8B,QAAS,CAAEC,cAAc,UAAD,OAAYJ,MAAYK,MAAK,SAACC,GACvI2O,EAAQ,2BAAItT,GAAL,IAAWU,MAAOiE,EAAInB,KAAK9C,SAClCgJ,EAAM2C,QAAQjF,GAAU/G,GAAUiM,iBAClCR,GAAgB,MACjB,SAAC7B,GAC4B,MAAxBA,EAAIC,SAASlJ,QACb0I,EAAMS,KAAK/C,GAAU/G,GAAU+J,WAC/BC,YAAW,WACP5G,EAASsC,OACV,QAEH2D,EAAMS,KAAK/C,GAAU/G,GAAUoH,OAC/BqE,GAAgB,OAbR,2CAAH,sDA8GjB,OACI,gCACI,cAACiF,EAAA,EAAD,UACI,wDAEJ,cAAC,EAAD,IACEzB,GACF,qBAAKlQ,UAAU,WAAf,SACI,qBAAKA,UAAU,YAAf,SACI,sBAAKA,UAAU,aAAf,UACI,qBAAKA,UAAU,UAAf,SAA0BgI,GAAU/G,GAAU2Q,YAAYC,UAC1D,sBAAK7R,UAAU,SAAf,UACI,kCACI,uBAAOoB,KAAK,MAAMwG,MAAM,KAAKH,SAAU,SAACC,GAAO6I,EAAe7I,EAAEC,OAAOC,QAASzH,KAAK,QAAQ2R,eAA6B,OAAb7Q,IADjH,QAIA,kCACI,uBAAOG,KAAK,MAAMwG,MAAM,KAAKH,SAAU,SAACC,GAAO6I,EAAe7I,EAAEC,OAAOC,QAASzH,KAAK,QAAQ2R,eAA6B,OAAb7Q,IADjH,QAIA,kCACI,uBAAOG,KAAK,MAAMwG,MAAM,KAAKH,SAAU,SAACC,GAAO6I,EAAe7I,EAAEC,OAAOC,QAASzH,KAAK,QAAQ2R,eAA6B,OAAb7Q,IADjH,WAKJ,sBAAKjB,UAAU,SAAf,UACI,qBAAKA,UAAU,KAAKwJ,QAxKrB,WACfvI,IAAaqP,GAEjBpL,IAAMyF,KAAK,2BAA4B,CAAE1J,SAAUqP,GAAc,CAAElL,QAAS,CAAEC,cAAc,UAAD,OAAYJ,MAAYK,MAAK,SAACC,GACrHlB,EAAS2B,EAAmBT,EAAInB,KAAKnD,WACrCqJ,EAAM2C,QAAQjF,GAAUsI,GAAasB,YAAYG,cACjD5B,GAAkB,MACnB,SAACtF,GAC4B,MAAxBA,EAAIC,SAASlJ,QACb0I,EAAMS,KAAK/C,GAAU/G,GAAU+J,WAC/BC,YAAW,WACP5G,EAASsC,OACV,OAEH2D,EAAMS,KAAK/C,GAAU/G,GAAUoH,WA0JnB,SACKL,GAAU/G,GAAUkH,KAEzB,qBAAKnI,UAAU,SAASwJ,QAAS,WAAO2G,GAAkB,IAA1D,SACKnI,GAAU/G,GAAUmH,mBAOzC,qBAAKpI,UAAU,aAAf,SACI,qBAAKA,UAAU,WAAf,SACI,sBAAKA,UAAU,YAAf,UACI,sBAAKA,UAAU,WAAf,UACI,sBAAKA,UAAU,mBAAf,UACI,cAAC,KAAD,CAAOyJ,UAAU,YAAYC,SAAUpI,GAAgB,yBACvD,sBAAKtB,UAAU,WAAf,UACI,qBAAKmN,IAAK0D,GAAgB7Q,UAAW0Q,GAAgB,SAAW,GAAIlH,QAAS,WAAOmH,IAAkBD,KAAiBvJ,MAAM,6BAA6BC,QAAQ,YAAYC,MAAM,KAC/KC,OAAO,KADZ,SAEI,sBAAMC,KAAK,eACLC,EAAE,oIAGRkJ,IACA,sBAAK1Q,UAAU,gBAAgBmN,IAAKyD,GAApC,UACI,qBAAK5Q,UAAU,eAAewJ,QAAS,WAAO2G,GAAkB,GAAOQ,IAAiB,IAAxF,SAAiG,8BAAM3I,GAAU/G,GAAUA,aAC3H,qBAAKjB,UAAU,eAAewJ,QAAS,WAAOnF,EAASsC,MAAvD,SAAuE,8BAAMqB,GAAU/G,GAAU4F,iBAI7G,cAAC,KAAD,CAAMoL,GAAG,IAAT,wBAEJ,qBAAKjS,UAAU,SAAf,SACI,qBAAKA,UAAU,MAAf,SACI,sBAAKA,UAAU,YAAf,UACI,qBAAKmH,MAAM,6BAA6BC,QAAQ,YAAYC,MAAM,KAAKC,OAAO,KAA9E,SAAmF,sBAAMC,KAAK,eAAeC,EAAE,6OAC/G,uBAAOC,SAAU,SAACC,GAAOoH,EAAapH,EAAEC,OAAOC,QAASzH,KAAK,OAAO4H,YAAaC,GAAU/G,GAAU8T,gCAI/GZ,GACE,qBAAKnU,UAAU,yBAAf,SACI,qBAAKA,UAAU,wBAGrBgU,EAAM3Q,OAAS,IAAM8Q,GACnBH,EAAM9Q,KAAI,SAAAT,GACN,OACI,sBAAK+G,QAAS,WAAOuK,EAAgBtR,EAAIa,MAAOtD,UAAW0B,IAAiBe,EAAIa,IAAM,gBAAkB,SAAxG,UACI,cAAC,KAAD,CAAOmG,UAAU,YAAYC,SAAUjH,EAAInB,MAAQmB,EAAInB,MAAQ,yBAC/D,qBAAKtB,UAAU,UAAf,SACI,qBAAKA,UAAU,eAAf,SACI,sBAAKA,UAAS,uBAAd,UACKyC,EAAIrB,KADT,IACgBqB,EAAIG,mBALuFH,EAAIa,QAapH,IAAjB0Q,EAAM3Q,SAAiB8Q,GACrB,0CAGPzS,GACG,sBAAK1B,UAAU,WAAf,UACI,sBAAKA,UAAU,aAAf,UACI,qBAAKwJ,QAAS,kBAAMuK,EAAgB,KAAK5M,MAAM,6BAC1CC,QAAQ,YAAYC,MAAM,KAAKC,OAAO,KAD3C,SAEI,sBAAMC,KAAK,eACLC,EAAE,kHAEZ,qBAAKxH,UAAU,QAAf,SAAwBgI,GAAU/G,GAAUkO,kBAE9CkF,GACF,mCACI,qBAAKrU,UAAU,OAAf,SACI,sBAAKA,UAAU,UAAf,UACI,sBAAKA,UAAU,cAAf,UACI,uBAAOmN,IAAKR,EAAYlF,SAtOhD,SAACC,GACjB,IAAM0F,EAAO1F,EAAEC,OAAO0F,MAAM,GAC5B,IAAKD,EACD,OAAO,EACXV,GAAgB,GAChB,IAAMY,EAAS,IAAIC,WACnBD,EAAOE,cAAcJ,GACrBE,EAAOG,UAAY,WACfZ,GAAYS,EAAOI,UA8NgE/D,MAAO,CAACgE,QAAS,QAASxN,KAAK,OAAOyN,OAAO,YAC5F,qBAAKpE,QAAS,kBAAMmD,EAAWkB,QAAQC,SAAS9N,UAAU,cAA1D,SACI,+BAAOgI,GAAU/G,GAAU8M,gBAG/B,cAAC,KAAD,CAAOtE,UAAU,YAAYC,SAAU9I,EAAKU,MAAQV,EAAKU,MAAQ,yBAC/DmL,GACF,qBAAKzM,UAAU,mBAAf,SACI,qBAAKA,UAAU,2BAIvB,qBAAKA,UAAU,QAAf,SAEQY,EAAKgB,OAASoG,GAAU/G,GAAUmO,OAASpH,GAAU/G,GAAUoO,UAGvE,sBAAKrP,UAAU,OAAf,UACI,+BAAOgI,GAAU/G,GAAUG,OAC3B,sBAAKpB,UAAWiM,GAAY,SAAW,uBAAvC,UACI,uBAAOxL,GAAG,YAAYgH,SAAU,SAACC,GAAO4E,GAAa5E,EAAEC,OAAOC,QAASzH,KAAK,OAAO6N,aAAcpN,EAAKQ,KAAM6M,SAAUhC,KACpHA,GAEE,qBAAKzC,QAAS,WAAO0C,IAAa,IAAlC,SACI,qBAAK/E,MAAM,6BAA6BC,QAAQ,YAAYC,MAAM,KAAKC,OAAO,KAA9E,SAAmF,sBAAMC,KAAK,eAAeC,EAAE,oIAGnH,qBAAKgC,QAAS,kBAlO9C/I,EAkO+DG,EAAK0C,IAjOpF4I,IAAa,QACTG,KAAczL,EAAKQ,MACnB8D,IAAMyF,KAAK,6BAA8B,CAACvJ,KAAMiL,GAAW5L,GAAIA,GAAK,CAAE2E,QAAS,CAAEC,cAAc,UAAD,OAAYJ,MAAYK,MAAK,WACvHgF,EAAM2C,QAAQjF,GAAU/G,GAAUkN,gBAClC+F,EAAQ,2BAAItT,GAAL,IAAWQ,KAAMiL,SACzB,SAACxB,GAC4B,MAAxBA,EAAIC,SAASlJ,QACb0I,EAAMS,KAAK/C,GAAU/G,GAAU+J,WAC/BC,YAAW,WACP5G,EAASsC,OACV,QAEH2D,EAAMS,KAAK/C,GAAU/G,GAAUmN,kBAChBjF,SAASkF,eAAe,aAChCzG,MAAQhH,EAAKQ,UAfjB,IAACX,GAkOgC,SACI,qBAAK0G,MAAM,6BAA6BC,QAAQ,YAAYC,MAAM,KAAKC,OAAO,KAA9E,SAAmF,sBAAMC,KAAK,eAAeC,EAAE,kEAK/H,sBAAKxH,UAAU,QAAf,UACI,+BAAOgI,GAAU/G,GAAU2B,YAC3B,sBAAK5C,UAAWuU,GAAiB,SAAW,uBAA5C,UACI,uBAAO9T,GAAG,iBAAiBgH,SAAU,SAACC,GAAOkN,GAAkBlN,EAAEC,OAAOC,QAASzH,KAAK,OAAO6N,aAAcpN,EAAKgC,UAAWmF,YAAaC,GAAU/G,GAAU2B,UAAWqL,SAAUsG,KAC/KA,GAEE,qBAAK/K,QAAS,WAAOgL,IAAkB,IAAvC,SACI,qBAAKrN,MAAM,6BAA6BC,QAAQ,YAAYC,MAAM,KAAKC,OAAO,KAA9E,SAAmF,sBAAMC,KAAK,eAAeC,EAAE,oIAGnH,qBAAKgC,QAAS,WA7N1C,IAAC/I,IA6NgEG,EAAK0C,IA5N1FkR,IAAkB,GACdG,KAAmB/T,EAAKgC,WACxBsC,IAAMyF,KAAK,kCAAmC,CAAC/H,UAAW+R,GAAgBlU,GAAIA,EAAIQ,SAAUA,GAAW,CAAEmE,QAAS,CAAEC,cAAc,UAAD,OAAYJ,MAAYK,MAAK,WAC1JgF,EAAM2C,QAAQjF,GAAU/G,GAAU+T,qBAClCd,EAAQ,2BAAItT,GAAL,IAAWgC,UAAW+R,SAC9B,SAAC9J,GAC4B,MAAxBA,EAAIC,SAASlJ,QACb0I,EAAMS,KAAK/C,GAAU/G,GAAU+J,WAC/BC,YAAW,WACP5G,EAASsC,OACV,OAC4B,MAAxBkE,EAAIC,SAASlJ,OACpB0I,EAAMS,KAAKF,EAAIC,SAAS1G,KAAKrB,SACE,MAAxB8H,EAAIC,SAASlJ,OACpB0I,EAAMS,KAAK/C,GAAU/G,GAAUgU,gBAE/B3K,EAAMS,KAAK/C,GAAU/G,GAAUoH,OAEpBc,SAASkF,eAAe,kBAChCzG,MAAQhH,EAAKgC,cAyMoB,SACI,qBAAKuE,MAAM,6BAA6BC,QAAQ,YAAYC,MAAM,KAAKC,OAAO,KAA9E,SAAmF,sBAAMC,KAAK,eAAeC,EAAE,kEAK/H,sBAAKxH,UAAU,QAAf,UACI,+BAAOgI,GAAU/G,GAAU0B,QAC3B,sBAAK3C,UAAWyU,GAAa,SAAW,uBAAxC,UACI,uBAAOhU,GAAG,aAAagH,SAAU,SAACC,GAAOoN,GAAcpN,EAAEC,OAAOC,QAASzH,KAAK,OAAO6N,aAAcpN,EAAK+B,MAAOoF,YAAaC,GAAU/G,GAAU0B,MAAOsL,SAAUwG,KAC/JA,GAEE,qBAAKjL,QAAS,WAAOkL,IAAc,IAAnC,SACI,qBAAKvN,MAAM,6BAA6BC,QAAQ,YAAYC,MAAM,KAAKC,OAAO,KAA9E,SAAmF,sBAAMC,KAAK,eAAeC,EAAE,oIAGnH,qBAAKgC,QAAS,WApN9C,IAAC/I,IAoNgEG,EAAK0C,IAnNtFoR,IAAc,GACVG,KAAejU,EAAK+B,OACpBuC,IAAMyF,KAAK,8BAA+B,CAAChI,MAAOkS,GAAYpU,GAAIA,EAAIQ,SAAUA,GAAW,CAAEmE,QAAS,CAAEC,cAAc,UAAD,OAAYJ,MAAYK,MAAK,WAC9IgF,EAAM2C,QAAQjF,GAAU/G,GAAUiU,iBAClChB,EAAQ,2BAAItT,GAAL,IAAW+B,MAAOkS,SAC1B,SAAChK,GAC4B,MAAxBA,EAAIC,SAASlJ,QACb0I,EAAMS,KAAK/C,GAAU/G,GAAU+J,WAC/BC,YAAW,WACP5G,EAASsC,OACV,OAC4B,MAAxBkE,EAAIC,SAASlJ,OACpB0I,EAAMS,KAAKF,EAAIC,SAAS1G,KAAKrB,SACE,MAAxB8H,EAAIC,SAASlJ,OACpB0I,EAAMS,KAAK/C,GAAU/G,GAAUkU,eAE/B7K,EAAMS,KAAK/C,GAAU/G,GAAUoH,OAEpBc,SAASkF,eAAe,cAChCzG,MAAQhH,EAAK+B,UAgMoB,SACI,qBAAKwE,MAAM,6BAA6BC,QAAQ,YAAYC,MAAM,KAAKC,OAAO,KAA9E,SAAmF,sBAAMC,KAAK,eAAeC,EAAE,kEAK/H,sBAAKxH,UAAU,QAAf,UACI,+BAAOgI,GAAU/G,GAAUqN,QAC3B,sBAAKtO,UAAWmM,GAAa,SAAW,uBAAxC,UACI,uBAAO1L,GAAG,aAAagH,SAAU,SAACC,GAAO8E,GAAc9E,EAAEC,OAAOC,QAASzH,KAAK,OAAO6N,aAAcpN,EAAKS,YAAa0G,YAAaC,GAAU/G,GAAUsN,iBAAkBN,SAAU9B,KAChLA,GAEE,qBAAK3C,QAAS,WAAO4C,IAAc,IAAnC,SACI,qBAAKjF,MAAM,6BAA6BC,QAAQ,YAAYC,MAAM,KAAKC,OAAO,KAA9E,SAAmF,sBAAMC,KAAK,eAAeC,EAAE,oIAGnH,qBAAKgC,QAAS,WA3M9C,IAAC/I,IA2MgEG,EAAK0C,IA1MtF8I,IAAc,GACVG,KAAe3L,EAAKS,aACpB6D,IAAMyF,KAAK,8BAA+B,CAAC2D,MAAO/B,GAAY9L,GAAIA,GAAK,CAAE2E,QAAS,CAAEC,cAAc,UAAD,OAAYJ,MAAYK,MAAK,WAC1HgF,EAAM2C,QAAQjF,GAAU/G,GAAUuN,iBAClC0F,EAAQ,2BAAItT,GAAL,IAAWS,YAAakL,SAChC,SAAC1B,GAC4B,MAAxBA,EAAIC,SAASlJ,QACb0I,EAAMS,KAAK/C,GAAU/G,GAAU+J,WAC/BC,YAAW,WACP5G,EAASsC,OACV,QAEH2D,EAAMS,KAAK/C,GAAU/G,GAAUoH,OACfc,SAASkF,eAAe,cAChCzG,MAAQhH,EAAKS,iBA4Le,SACI,qBAAK8F,MAAM,6BAA6BC,QAAQ,YAAYC,MAAM,KAAKC,OAAO,KAA9E,SAAmF,sBAAMC,KAAK,eAAeC,EAAE,yEAU1I6M,GACD,qBAAKrU,UAAU,mBAAf,SACI,qBAAKA,UAAU,sCAe7CgI,GAAY,CACdE,GAAI,CACA0J,YAAa,CACTG,aAAc,2BACdF,QAAS,2BAEbkD,uBAAwB,6CACxB/C,QAAS,iCACThC,QAAS,UACT/O,SAAU,SACV4F,OAAQ,QACRsI,YAAa,2BACbI,aAAc,qBACdK,WAAY,sCACZF,KAAM,sCACNlB,gBAAiB,6BACjBL,eAAgB,4CAChB+G,gBAAiB,0BACjBF,oBAAqB,6BACrB5G,iBAAkB,uCAClBlB,gBAAiB,yBACjBa,YAAa,oBACb3M,KAAM,0BACNkN,MAAO,WACP1L,UAAW,gBACXD,MAAO,QACPE,QAAS,cACTuM,OAAQ,SACRC,QAAS,UACT8C,aAAc,yBACdhK,GAAI,KACJC,OAAQ,SACRC,MAAO,kBACPmJ,SAAU,uDACVD,cAAe,gCACfF,YAAa,+GACbrG,UAAW,yCACXiK,eAAgB,iEAChBE,cAAe,iEAEnB7M,GAAI,CACAsJ,YAAa,CACTG,aAAc,iHACdF,QAAS,6EAEbkD,uBAAwB,gJACxB/C,QAAS,oDACThC,QAAS,6CACT/O,SAAU,2BACV4F,OAAQ,iCACRsI,YAAa,iHACbI,aAAc,+FACdK,WAAY,gEACZF,KAAM,2DACNlB,gBAAiB,6HACjBL,eAAgB,0IAChB6G,oBAAqB,2GACrBE,gBAAiB,sEACjB9G,iBAAkB,+HAClBlB,gBAAiB,yIACjBa,YAAa,gHACb3M,KAAM,gEACNkN,MAAO,mDACP1L,UAAW,6CACXD,MAAO,QACPE,QAAS,uCACTuM,OAAQ,kCACRC,QAAS,+CACT8C,aAAc,oGACdhK,GAAI,KACJC,OAAQ,uCACRC,MAAO,uCACPmJ,SAAU,kKACVD,cAAe,mIACfF,YAAa,sQACbrG,UAAW,6HACXiK,eAAgB,gRAChBE,cAAe,+PAEnB5M,GAAI,CACAqJ,YAAa,CACTG,aAAc,mBACdF,QAAS,qBAEbkD,uBAAwB,yBACxB/C,QAAS,WACThC,QAAS,UACT/O,SAAU,WACV4F,OAAQ,SACRsI,YAAa,eACbI,aAAc,iBACdK,WAAY,cACZF,KAAM,gBACNlB,gBAAiB,0BACjBL,eAAgB,2BAChB6G,oBAAqB,wBACrBE,gBAAiB,oBACjB9G,iBAAkB,uBAClBlB,gBAAiB,oBACjBa,YAAa,eACb3M,KAAM,eACNkN,MAAO,QACP1L,UAAW,YACXD,MAAO,QACPE,QAAS,UACTuM,OAAQ,SACRC,QAAS,UACT8C,aAAc,kBACdhK,GAAI,KACJC,OAAQ,SACRC,MAAO,QACPmJ,SAAU,6BACVD,cAAe,yBACfF,YAAa,8CACbrG,UAAW,+BACXiK,eAAgB,iDAChBE,cAAe,+CCjiBRC,OAff,WACI,IAAMC,ECAe,WAAO,IAErB/U,EAAY4G,aAAY,qBAAGtG,QAA3BN,SAGP,OAFsB4G,aAAY,qBAAG3G,WAA9BgB,YAIC,eAAC,IAAD,WACI,cAAC,IAAD,CAAOwE,KAAK,IAAIuP,OAAK,EAArB,SACI,cAAC,GAAD,MAEJ,cAAC,IAAD,CAAUrD,GAAG,SAIjB3R,EAASkE,OAEL,eAAC,IAAD,WACI,cAAC,IAAD,CAAOuB,KAAK,IAAIuP,OAAK,EAArB,SACI,cAAC,GAAD,MAGkB,UAAlBhV,EAASmG,MACT,cAAC,IAAD,CAAOV,KAAK,SAASuP,OAAK,EAA1B,SACI,cAAC,GAAD,MAGR,cAAC,IAAD,CAAUrD,GAAG,SAKjB,eAAC,IAAD,WACI,cAAC,IAAD,CAAOlM,KAAK,SAASuP,OAAK,EAA1B,SACI,cAAC,GAAD,MAEJ,cAAC,IAAD,CAAOvP,KAAK,gBAAgBuP,OAAK,EAAjC,SACI,cAAC,GAAD,MAEJ,cAAC,IAAD,CAAUrD,GAAG,cDvCdsD,GACTlR,EAAW4C,cAMjB,OAJA6B,qBAAU,WACNzE,GbuCG,SAAAA,GACH,IAAMY,EAAQ/D,aAAa+D,MACvBhE,EAAWC,aAAaD,SAO5B,GAHIoD,EAAS2B,EAHR/E,GAAyB,cAAbA,EAGeA,EAFA,OAIhCoD,EAASpE,GAAe,IACpBgF,EACA,OAAOgB,MAAM,kBAAmB,CAC5BC,OAAQ,MACRd,QAAS,CACL,eAAgB,mBAChBe,OAAQ,mBACR,cAAgB,UAAhB,OAA2BlB,MAG9BK,MAAK,SAAAiB,GAAI,OAAIA,EAAKC,UAClBlB,MAAK,SAAAlB,GACF,GAAIA,EAAKrB,QACL8E,QAAQC,IAAI1D,EAAKrB,SACjB7B,aAAa4F,WAAW,SACxBzC,EAASpE,GAAe,QACrB,CACCmE,EAAKnD,WACLA,EAAWmD,EAAKnD,UAEpB,IAAML,EAAO,CACTQ,KAAMgD,EAAKhD,KACXuB,MAAOyB,EAAKzB,MACZC,UAAWwB,EAAKxB,UAChB4B,OAAQJ,EAAKI,OACbS,MAAOA,EACPwB,KAAMrC,EAAKqC,KACXpF,YAAa+C,EAAK/C,YAClBC,MAAO8C,EAAK9C,MACZL,SAAUA,GAEdoD,EAASqC,EAAU9F,IACnBG,EAAOC,KAAK,aAAcJ,EAAK4D,QAC/BH,EAASW,EAAaC,QAIlCZ,EAASpE,GAAe,SanF7B,IAGC,cAAC,KAAD,UACKoV,KEfTG,GAAW,SAAkBC,GAC7B,IAAI7L,EAAQ6L,EAAK7L,MACb8L,EAAiBD,EAAKE,UACtBA,OAA+BC,IAAnBF,GAAsCA,EAClDG,EAAWJ,EAAKI,SACpB,OAAOC,IAAMC,cACT,MACA,CACI5O,MAAO,6BACPE,MAAO,KACPC,OAAQ,KACRF,QAAS,YACTG,KAAM,OACNyO,OAAQpM,EACRqM,YAAa,IACbC,cAAe,QACfC,eAAgB,QAChBxM,MAAO,CAAEyM,YAAaT,EAAY,OAAS,IAAKU,SAAU,KAE9DR,IAIJS,GAAW,WACX,OAAOR,IAAMC,cACTP,GACA,CAAE5L,MAAO,WACTkM,IAAMC,cAAc,SAAU,CAAEQ,GAAI,KAAMC,GAAI,KAAMC,EAAG,OACvDX,IAAMC,cAAc,OAAQ,CAAEW,GAAI,KAAMC,GAAI,KAAMC,GAAI,KAAMC,GAAI,OAChEf,IAAMC,cAAc,OAAQ,CAAEW,GAAI,KAAMC,GAAI,IAAKC,GAAI,KAAMC,GAAI,QAInEC,GAAc,WACd,OAAOhB,IAAMC,cACTP,GACA,CAAE5L,MAAO,WACTkM,IAAMC,cAAc,OAAQ,CAAEvO,EAAG,uCACjCsO,IAAMC,cAAc,WAAY,CAAEgB,OAAQ,4BAI9CC,GAAY,WACZ,OAAOlB,IAAMC,cACTP,GACA,CAAE5L,MAAO,WACTkM,IAAMC,cAAc,SAAU,CAAEQ,GAAI,KAAMC,GAAI,KAAMC,EAAG,OACvDX,IAAMC,cAAc,OAAQ,CAAEW,GAAI,KAAMC,GAAI,IAAKC,GAAI,KAAMC,GAAI,OAC/Df,IAAMC,cAAc,OAAQ,CAAEW,GAAI,KAAMC,GAAI,KAAMC,GAAI,KAAMC,GAAI,SAIpEI,GAAY,WACZ,OAAOnB,IAAMC,cACTP,GACA,CAAE5L,MAAO,UAAW+L,WAAW,GAC/BG,IAAMC,cAAc,OAAQ,CAAEW,GAAI,KAAMC,GAAI,IAAKC,GAAI,IAAKC,GAAI,OAC9Df,IAAMC,cAAc,OAAQ,CAAEW,GAAI,IAAKC,GAAI,IAAKC,GAAI,KAAMC,GAAI,SAIlEK,GAAWhM,OAAOiM,QAAU,SAAUxP,GACtC,IAAK,IAAIvE,EAAI,EAAGA,EAAIgU,UAAU/T,OAAQD,IAAK,CACvC,IAAIiU,EAASD,UAAUhU,GAEvB,IAAK,IAAIkG,KAAO+N,EACRnM,OAAOoM,UAAUC,eAAeC,KAAKH,EAAQ/N,KAC7C3B,EAAO2B,GAAO+N,EAAO/N,IAKjC,OAAO3B,GAGP8P,GAAa,CACbC,gBAAiB,UACjB9N,MAAO,QACP+N,QAAS,OACTC,cAAe,YACfC,aAAc,MACdlK,QAAS,OACTmK,eAAgB,gBAChBC,WAAY,SACZC,UAAW,sCACXC,WAAY,QACZ5Q,MAAO,QACP6Q,UAAW,cAGXC,GAAc,CACdC,WAAY,OACZC,OAAQ,OACRX,gBAAiB,cACjBY,OAAQ,UACR1O,MAAO,WA4BI2O,GAzBK,SAAuB9C,GACvC,IAAI1S,EAAU0S,EAAK1S,QACfyV,EAAU/C,EAAK+C,QACf7O,EAAQ8L,EAAK9L,MACb8O,EAAQhD,EAAKgD,MAEjB,OAAO3C,IAAMC,cACT,MACA,CAAEpM,MAAOuN,GAAS,GAAIO,GAAY9N,IACjB,SAAjB6O,EAAQrY,MAAmB2V,IAAMC,cAAcO,GAAU,MACxC,YAAjBkC,EAAQrY,MAAsB2V,IAAMC,cAAce,GAAa,MAC9C,UAAjB0B,EAAQrY,MAAoB2V,IAAMC,cAAciB,GAAW,MAC3DlB,IAAMC,cACF,OACA,CAAEpM,MAAO,CAAE+O,KAAM,IACjB3V,GAEJ+S,IAAMC,cACF,SACA,CAAEvM,QAASiP,EAAO9O,MAAOwO,IACzBrC,IAAMC,cAAckB,GAAW,SC/GrCuB,GAAU,CAEZG,SAAUC,KAAUC,WACpBC,QAAS,IACTC,OAAQ,OACRC,WAAY,UAEZC,WAAYC,KAAYC,OAG5BC,IAASC,OACP,cAAC,IAAMC,WAAP,UACI,cAAC,IAAD,CAAUzV,MAAOA,EAAjB,SACI,cAAC,KAAD,yBAAe0V,SAAUC,IAAmBhB,IAA5C,aACI,cAAC,GAAD,WAIZrP,SAASkF,eAAe,W","file":"static/js/main.b7b88013.chunk.js","sourcesContent":["import React from \"react\"\r\n\r\nconst BackGround = () => {\r\n\r\n    return (\r\n        <div className=\"header bg-overlay\"/>\r\n    )\r\n}\r\n\r\nexport default BackGround;","export const setUserLoading = bool => ({\r\n    type: 'LOADING_USER',\r\n    payload: bool\r\n})","import socket from \"../../socket\";\r\n\r\nconst initialState = {\r\n    userData: {},\r\n    loading: false,\r\n    infoAboutUser: {\r\n        bool: false,\r\n        id: null,\r\n        dialogId: null\r\n    },\r\n    dialogSearch: null\r\n}\r\n\r\nconst user = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'USER_LOGIN':\r\n            return {\r\n                ...state,\r\n                userData: action.payload\r\n            }\r\n        case 'USER_LOGOUT':\r\n            socket.emit('logout')\r\n            const language = state.userData.language\r\n            localStorage.setItem(\"language\", language)\r\n            return {\r\n                ...state,\r\n                userData: {\r\n                    language: language\r\n                }\r\n            }\r\n        case 'USER_UPDATE_NAME':\r\n            return {\r\n                ...state,\r\n                userData: {\r\n                    ...state.userData,\r\n                    name: action.payload\r\n                }\r\n            }\r\n        case 'USER_UPDATE_ABOUT':\r\n            return {\r\n                ...state,\r\n                userData: {\r\n                    ...state.userData,\r\n                    description: action.payload\r\n                }\r\n            }\r\n        case 'USER_UPDATE_PHOTO':\r\n            return {\r\n                ...state,\r\n                userData: {\r\n                    ...state.userData,\r\n                    photo: action.payload\r\n                }\r\n            }\r\n        case 'INFO_ABOUT_USER_SET':\r\n            return {\r\n                ...state,\r\n                infoAboutUser: action.payload\r\n            }\r\n        case 'LANGUAGE_CHANGE':\r\n            localStorage.setItem(\"language\", action.payload)\r\n            return {\r\n                ...state,\r\n                userData: {\r\n                    ...state.userData,\r\n                    language: action.payload\r\n                }\r\n            }\r\n        case 'DIALOG_SEARCH':\r\n            return {\r\n                ...state,\r\n                dialogSearch: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default user;","const initialState = {\r\n    userLoading: true\r\n}\r\n\r\nconst loading = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'LOADING_USER':\r\n            return {\r\n                ...state,\r\n                userLoading: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default loading;","const initialState = {\r\n    dialogs: {},\r\n    dialogsOrder: [],\r\n    activeDialog: ''\r\n}\r\n\r\nconst dialog = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'DIALOGS_SET':\r\n            return {\r\n                ...state,\r\n                dialogs: action.payload\r\n            }\r\n        case 'DIALOG_ACTIVE_SET':\r\n            return {\r\n                ...state,\r\n                activeDialog: action.payload\r\n            }\r\n        case 'DIALOG_ORDER_SET':\r\n            return {\r\n                ...state,\r\n                dialogsOrder: action.payload\r\n            }\r\n        case 'DIALOG_USER_ONLINE_SET':\r\n            return {\r\n                ...state,\r\n                dialogs: {\r\n                    ...state.dialogs,\r\n                    [action.dialogId]: {\r\n                        ...state.dialogs[action.dialogId],\r\n                        status: action.payload\r\n                    }\r\n                }\r\n            }\r\n        case 'DIALOG_LAST_MESSAGE_SET':\r\n            return {\r\n                ...state,\r\n                dialogs: {\r\n                    ...state.dialogs,\r\n                    [action.dialogId]: {\r\n                        ...state.dialogs[action.dialogId],\r\n                        dialog: {\r\n                            ...state.dialogs[action.dialogId].dialog,\r\n                            last_message: action.payload.text,\r\n                            last_message_time: action.payload.time,\r\n                            last_message_owner: action.payload.owner,\r\n                            last_message_status: action.payload.status\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        case 'DIALOG_ORDER_CHANGE':\r\n\r\n            let orderArr = state.dialogsOrder\r\n            const dialogId = action.payload\r\n            orderArr.splice(orderArr.indexOf(dialogId), 1)\r\n            orderArr.unshift(dialogId)\r\n\r\n            return {\r\n                ...state,\r\n                dialogsOrder: orderArr\r\n            }\r\n        case 'DIALOG_NEW_SET':\r\n\r\n            let orderActual = state.dialogsOrder\r\n            orderActual.unshift(action.dialogId)\r\n\r\n            return {\r\n                ...state,\r\n                dialogs: {\r\n                    ...state.dialogs,\r\n                    [action.dialogId]: action.payload\r\n                },\r\n                dialogsOrder: orderActual\r\n            }\r\n        case 'DIALOG_LAST_MESSAGE_STATUS_SET':\r\n            return {\r\n                ...state,\r\n                dialogs: {\r\n                    ...state.dialogs,\r\n                    [action.dialogId]: {\r\n                        ...state.dialogs[action.dialogId],\r\n                        dialog: {\r\n                            ...state.dialogs[action.dialogId].dialog,\r\n                            last_message_status: action.payload\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        case 'DIALOG_DELETE_ONE':\r\n\r\n            const obj = state.dialogs\r\n            delete obj[action.payload]\r\n\r\n            const arr = state.dialogsOrder\r\n\r\n            arr.splice(arr.indexOf(action.payload), 1)\r\n\r\n            return {\r\n                ...state,\r\n                dialogs: obj,\r\n                dialogsOrder: arr\r\n            }\r\n        case 'DIALOG_DELETE_INFO':\r\n            return {\r\n                ...state,\r\n                dialogs: {\r\n                    ...state.dialogs,\r\n                    [action.payload]: {\r\n                        ...state.dialogs[action.payload],\r\n                        name: action.name,\r\n                        photo: 'DR7pkQw8DqX4F8FmUIHw_a5YEzo0gP3nHOptm6apiyzg_xEs_VcyQq9pQEH6FdY0wOl95xh8_hkepcq',\r\n                        id: '',\r\n                        status: false,\r\n                        description: 'Recipient deleted this chat',\r\n                        email: 'DELETED',\r\n                        telephone: 'DELETED',\r\n                        deleted: true\r\n                    }\r\n                }\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default dialog;","const initialState = {\r\n    newMessages: [],\r\n    status: null\r\n}\r\n\r\nconst message = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'MESSAGES_NEW_SET':\r\n            let messages;\r\n            if (state.newMessages) {\r\n                messages = state.newMessages\r\n                messages.unshift(action.payload)\r\n            } else {\r\n                messages = [action.payload]\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                newMessages: messages\r\n            }\r\n        case 'MESSAGES_NEW_STATUS_SET':\r\n            let msg = state.newMessages\r\n\r\n            msg.map(obj => {\r\n                obj.status = true;\r\n            })\r\n\r\n            return {\r\n                ...state,\r\n                newMessages: msg\r\n            }\r\n        case 'MESSAGES_NEW_DELETE':\r\n            return {\r\n                ...state,\r\n                newMessages: []\r\n            }\r\n        case 'MESSAGES_STATUS_SET':\r\n            return {\r\n                ...state,\r\n                status: !state.status\r\n            }\r\n        case 'MESSAGES_NEW_ID_SET':\r\n\r\n            let ms = state.newMessages\r\n\r\n            for (let i = 0; i < ms.length; i++) {\r\n                if (ms[i]._id === 'none') {\r\n                    ms[i]._id = action.payload\r\n                    i = ms.length\r\n                }\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                newMessages: ms\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default message;","import { combineReducers } from \"redux\";\r\nimport user from \"./user\"\r\nimport loading from \"./loading\"\r\nimport dialog from \"./dialog\"\r\nimport message from \"./message\";\r\n\r\nconst rootReducer = combineReducers({\r\n    user,\r\n    loading,\r\n    dialog,\r\n    message\r\n});\r\n\r\nexport default rootReducer;","import { createStore, compose, applyMiddleware } from 'redux';\r\nimport rootReducer from \"./reducers\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(rootReducer, composeEnhancer(applyMiddleware(thunk)));\r\n\r\nexport default store;\r\n\r\n","export const messagesNewSet = (msg) => {\r\n    return {\r\n        type: 'MESSAGES_NEW_SET',\r\n        payload: msg\r\n    }\r\n}\r\n\r\nexport const messagesNewStatusSet = () => {\r\n    return {\r\n        type: 'MESSAGES_NEW_STATUS_SET'\r\n    }\r\n}\r\n\r\nexport const messageNewDelete = () => {\r\n    return {\r\n        type: 'MESSAGES_NEW_DELETE'\r\n    }\r\n}\r\n\r\nexport const messagesStatusSet = () => {\r\n    return {\r\n        type: 'MESSAGES_STATUS_SET'\r\n    }\r\n}\r\n\r\nexport const messagesNewIdSet = (id) => {\r\n    return {\r\n        type: 'MESSAGES_NEW_ID_SET',\r\n        payload: id\r\n    }\r\n}","import { io } from \"socket.io-client\"\r\nimport store from \"./redux/store\"\r\nimport {\r\n    dialogLastMessageSet,\r\n    dialogOrderChange,\r\n    dialogUserOnlineStatusSet,\r\n    dialogNewSet,\r\n    dialogLastMessageStatusSet,\r\n    deleteDialogInfo\r\n} from \"./redux/actions/dialog\"\r\nimport {messagesNewIdSet, messagesNewSet, messagesNewStatusSet, messagesStatusSet} from \"./redux/actions/message\";\r\n\r\nconst socket = io()\r\n\r\nsocket.on('userOnline', (data) => {\r\n    store.dispatch(dialogUserOnlineStatusSet(data.dialogId, data.status))\r\n})\r\n\r\nsocket.on('newMessage', (message) => {\r\n    if (store.getState().dialog.activeDialog === message.dialogId) {\r\n        store.dispatch(messagesNewSet(message))\r\n        socket.emit('messageAllStatus', {dialogId: message.dialogId, id: store.getState().user.userData.userId})\r\n    }\r\n\r\n    store.dispatch(dialogLastMessageSet(message.dialogId, message))\r\n\r\n    if (store.getState().dialog.activeDialog === message.dialogId) {\r\n        store.dispatch(dialogLastMessageStatusSet(message.dialogId))\r\n    }\r\n\r\n    if (store.getState().dialog.dialogsOrder[0] !== message.dialogId)\r\n        store.dispatch(dialogOrderChange(message.dialogId))\r\n})\r\n\r\nsocket.on('newDialog', (dialog) => {\r\n    store.dispatch(dialogNewSet(dialog.dialogId, dialog.newDialog))\r\n})\r\n\r\nsocket.on('messageAllStatus', (messages) => {\r\n    store.dispatch(dialogLastMessageStatusSet(messages.dialogId))\r\n    if (store.getState().dialog.activeDialog === messages.dialogId) {\r\n        store.dispatch(messagesStatusSet())\r\n        store.dispatch(messagesNewStatusSet())\r\n    }\r\n})\r\n\r\nsocket.on('newMessageId', (id) => {\r\n    store.dispatch(messagesNewIdSet(id))\r\n})\r\n\r\nsocket.on('dialogDelete', (dialogId, name) => {\r\n    store.dispatch(deleteDialogInfo(dialogId, name))\r\n})\r\n\r\nexport default socket;","import axios from \"axios\";\r\nimport {setUserLoading} from \"./loading\";\r\nimport socket from \"../../socket\";\r\n\r\nexport const dialogsFetch = (token) => {\r\n    return dispatch => {\r\n        return axios.get(\"/api/dialog/find\", { headers: { Authorization:`Bearer ${token}`}}).then(res => {\r\n            dispatch(dialogsSet(res.data.answer))\r\n            dispatch(dialogsOrderSet(res.data.order))\r\n            dispatch(setUserLoading(false))\r\n        })\r\n    }\r\n}\r\n\r\nexport const createDialog = (token, userId) => {\r\n    return dispatch => {\r\n        return axios.post(\"/api/dialog/new\", {userId},{ headers: { Authorization:`Bearer ${token}`}}).then(res => {\r\n            dispatch(dialogsFetch(token)).then(() => {dispatch(activeDialogSet(res.data))})\r\n            socket.emit('newDialog', res.data)\r\n        }, () => {\r\n            return -1\r\n        })\r\n    }\r\n}\r\n\r\nexport const dialogsOrderSet = (arr) => {\r\n    return {\r\n        type: 'DIALOG_ORDER_SET',\r\n        payload: arr\r\n    }\r\n}\r\n\r\nexport const activeDialogSet = (id) => {\r\n    return {\r\n        type: 'DIALOG_ACTIVE_SET',\r\n        payload: id\r\n    }\r\n}\r\n\r\nexport const dialogsSet = (obj) => {\r\n    return {\r\n        type: 'DIALOGS_SET',\r\n        payload: obj\r\n    }\r\n}\r\n\r\nexport const dialogUserOnlineStatusSet = (id, status) => {\r\n    return {\r\n        type: 'DIALOG_USER_ONLINE_SET',\r\n        payload: status,\r\n        dialogId: id\r\n    }\r\n}\r\n\r\nexport const dialogLastMessageSet = (id, message) => {\r\n    return {\r\n        type: 'DIALOG_LAST_MESSAGE_SET',\r\n        payload: message,\r\n        dialogId: id\r\n    }\r\n}\r\n\r\nexport const dialogOrderChange = (id) => {\r\n    return {\r\n        type: 'DIALOG_ORDER_CHANGE',\r\n        payload: id\r\n    }\r\n}\r\n\r\nexport const dialogNewSet = (dialogId, obj) => {\r\n    return {\r\n        type: 'DIALOG_NEW_SET',\r\n        payload: obj,\r\n        dialogId: dialogId\r\n    }\r\n}\r\n\r\nexport const dialogLastMessageStatusSet = (dialogId) => {\r\n    return {\r\n        type: 'DIALOG_LAST_MESSAGE_STATUS_SET',\r\n        payload: true,\r\n        dialogId: dialogId\r\n    }\r\n}\r\n\r\nexport const deleteDialog = (dialogId, token, id = '') => {\r\n    return dispatch => {\r\n        return axios.post(\"/api/dialog/delete\", {dialogId: dialogId, id: id},{ headers: { Authorization:`Bearer ${token}`}}).then(() => {\r\n            socket.emit('dialogDelete', dialogId, id)\r\n            dispatch(activeDialogSet(''))\r\n            dispatch(deleteDialogOne(dialogId))\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteDialogOne = (dialogId) => {\r\n    return {\r\n        type: 'DIALOG_DELETE_ONE',\r\n        payload: dialogId\r\n    }\r\n}\r\n\r\nexport const deleteDialogInfo = (dialogId, name) => {\r\n    return {\r\n        type: 'DIALOG_DELETE_INFO',\r\n        payload: dialogId,\r\n        name: name\r\n    }\r\n}","import {setUserLoading} from './loading';\r\nimport {dialogsFetch, activeDialogSet} from './dialog';\r\nimport socket from \"../../socket\";\r\n\r\nexport const userDataFetch = (obj, path) => {\r\n    return dispatch => {\r\n        let language = localStorage.language;\r\n        if (!language) {\r\n            dispatch(changeUserLanguage(\"EN\"))\r\n        } else {\r\n            dispatch(changeUserLanguage(language))\r\n        }\r\n        return fetch(`/api/auth/${path}`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Accept: 'application/json',\r\n            },\r\n            body: JSON.stringify(obj)\r\n        })\r\n            .then(resp => resp.json())\r\n            .then(data => {\r\n                if (data.message) {\r\n                    return data.message\r\n                } else {\r\n                    localStorage.setItem(\"token\", data.token)\r\n                    localStorage.setItem(\"language\", data.language)\r\n                    if (data.language) {\r\n                        language = data.language\r\n                    }\r\n                    const user = {\r\n                        name: data.name,\r\n                        email: data.email,\r\n                        telephone: data.telephone,\r\n                        userId: data.userId,\r\n                        token: data.token,\r\n                        role: data.role,\r\n                        description: data.description,\r\n                        photo: data.photo,\r\n                        language: language\r\n                    }\r\n                    dispatch(loginUser(user))\r\n                    dispatch(setUserLoading(true))\r\n                    socket.emit('userOnline', user.userId)\r\n                    dispatch(dialogsFetch(user.token))\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport const getProfileFetch = () => {\r\n    return dispatch => {\r\n        const token = localStorage.token;\r\n        let language = localStorage.language;\r\n        if (!language || language === \"undefined\") {\r\n            dispatch(changeUserLanguage(\"EN\"))\r\n        } else {\r\n            dispatch(changeUserLanguage(language))\r\n        }\r\n        dispatch(setUserLoading(true));\r\n        if (token) {\r\n            return fetch(\"/api/auth/check\", {\r\n                method: \"GET\",\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    Accept: 'application/json',\r\n                    'Authorization': `Bearer ${token}`\r\n                }\r\n            })\r\n                .then(resp => resp.json())\r\n                .then(data => {\r\n                    if (data.message) {\r\n                        console.log(data.message)\r\n                        localStorage.removeItem(\"token\")\r\n                        dispatch(setUserLoading(false))\r\n                    } else {\r\n                        if (data.language) {\r\n                            language = data.language\r\n                        }\r\n                        const user = {\r\n                            name: data.name,\r\n                            email: data.email,\r\n                            telephone: data.telephone,\r\n                            userId: data.userId,\r\n                            token: token,\r\n                            role: data.role,\r\n                            description: data.description,\r\n                            photo: data.photo,\r\n                            language: language\r\n                        }\r\n                        dispatch(loginUser(user))\r\n                        socket.emit('userOnline', user.userId)\r\n                        dispatch(dialogsFetch(token))\r\n                    }\r\n                })\r\n        } else {\r\n            dispatch(setUserLoading(false))\r\n        }\r\n    }\r\n}\r\n\r\nexport const logoutUser = () => {\r\n    return dispatch => {\r\n        dispatch(activeDialogSet(''))\r\n        dispatch(infoAboutUserSet({bool: false, id: null, dialogId: null}))\r\n        dispatch(logout())\r\n    }\r\n}\r\n\r\nexport const logout = () => {\r\n    localStorage.removeItem(\"token\")\r\n    return {\r\n        type: 'USER_LOGOUT'\r\n    }\r\n}\r\n\r\nconst loginUser = obj => ({\r\n    type: 'USER_LOGIN',\r\n    payload: obj\r\n})\r\n\r\nexport const updateName = name => ({\r\n    type: 'USER_UPDATE_NAME',\r\n    payload: name\r\n})\r\n\r\nexport const updateAbout = about => ({\r\n    type: 'USER_UPDATE_ABOUT',\r\n    payload: about\r\n})\r\n\r\nexport const updatePhoto = img => ({\r\n    type: 'USER_UPDATE_PHOTO',\r\n    payload: img\r\n})\r\n\r\nexport const infoAboutUserSet = obj => ({\r\n    type: 'INFO_ABOUT_USER_SET',\r\n    payload: obj\r\n})\r\n\r\nexport const changeUserLanguage = lan => ({\r\n    type: 'LANGUAGE_CHANGE',\r\n    payload: lan\r\n})\r\n\r\nexport const dialogsSearch = tel => ({\r\n    type: 'DIALOG_SEARCH',\r\n    payload: tel\r\n})","import React from 'react';\r\nimport {useSelector, useDispatch} from \"react-redux\";\r\nimport {dialogsSearch} from \"../redux/actions/user\";\r\n\r\nconst Search = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const {language} = useSelector(({user}) => user.userData)\r\n\r\n    const findDialog = (e) => {\r\n        // setActiveSearch()\r\n        if (e.target.value.length !== 1) {\r\n            console.log(e.target.value)\r\n            dispatch(dialogsSearch(e.target.value))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"search\">\r\n            <div className=\"box\">\r\n                <div className=\"input-box\">\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\"><path fill=\"currentColor\" d=\"M15.009 13.805h-.636l-.22-.219a5.184 5.184 0 0 0 1.256-3.386 5.207 5.207 0 1 0-5.207 5.208 5.183 5.183 0 0 0 3.385-1.255l.221.22v.635l4.004 3.999 1.194-1.195-3.997-4.007zm-4.808 0a3.605 3.605 0 1 1 0-7.21 3.605 3.605 0 0 1 0 7.21z\"/></svg>\r\n                    <input onChange={findDialog} type=\"text\" placeholder={translate[language].inputPlaceholder}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search;\r\n\r\nconst translate = {\r\n    LV: {\r\n        inputPlaceholder: \"Meklēt draugu pēs telefona\",\r\n        ok: \"OK\",\r\n        cancel: \"ATCELT\",\r\n        error: \"Kļūda\"\r\n    },\r\n    RU: {\r\n        inputPlaceholder: \"Поиск друга по телефону\",\r\n        ok: \"OK\",\r\n        cancel: \"ОТМЕНА\",\r\n        error: \"Ошибка\"\r\n    },\r\n    EN: {\r\n        inputPlaceholder: \"Search friend by phone\",\r\n        ok: \"OK\",\r\n        cancel: \"CANCEL\",\r\n        error: \"Error\"\r\n    }\r\n}","import React, {useEffect, useState} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {activeDialogSet} from \"../redux/actions/dialog\";\r\nimport {Image} from \"cloudinary-react\";\r\n\r\nconst Dialogs = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const {dialogs, activeDialog, dialogsOrder} = useSelector(({dialog}) => dialog)\r\n    const {userData} = useSelector(({user}) => user)\r\n\r\n    const [today, setToday] = useState('');\r\n    const [yesterday, setYesterday] = useState('');\r\n\r\n    useEffect(() => {\r\n        let yesterday = new Date()\r\n        yesterday.setDate(yesterday.getDate() - 1)\r\n        yesterday = getDate(yesterday)\r\n        setYesterday(yesterday)\r\n        setToday(getDate())\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const elems = document.querySelectorAll(\".yesterday-dialogs-change\");\r\n        for (let i = 0; i < elems.length; i++) {\r\n            elems[i].innerHTML = translate[userData.language].yesterday;\r\n        }\r\n    }, [userData.language])\r\n\r\n    const setActiveDialog = (id) => {\r\n        dispatch(activeDialogSet(id))\r\n    }\r\n\r\n    return (\r\n        <div className=\"dialogs\">\r\n            {dialogs !== {} &&\r\n                dialogsOrder.map(key => {\r\n\r\n                    const obj = dialogs[key]\r\n                    let i = 0;\r\n\r\n                    if (obj.dialog.last_message_time.split(' ')[0] === today) {\r\n                        i = 1\r\n                    } else if (obj.dialog.last_message_time.split(' ')[0] === yesterday) {\r\n                        obj.dialog.last_message_time = translate[userData.language].yesterday\r\n                    }\r\n\r\n                    return (\r\n                        <div onClick={() => {setActiveDialog(key)}} className={activeDialog === key ? \"dialog active\" : \"dialog\"} key={key}>\r\n                            <Image cloudName=\"artemijss\" publicId={obj.photo ? obj.photo : \"tkixqcinuntqmalr2dej\"}/>\r\n                            <div className=\"details\">\r\n                                <div className=\"dialog-info1\">\r\n                                    <div style={obj.deleted && {color: \"rgb(214,48,46)\"}} className={`dialog-name big-text ${obj.dialog.last_message_owner !== userData.userId && !obj.dialog.last_message_status ? \"bold\" : \"\"}`}>\r\n                                        {obj.name}\r\n                                    </div>\r\n                                    <div className={`mssg-time ${obj.dialog.last_message_owner !== userData.userId && !obj.dialog.last_message_status ? \"black bold\" : \"\"} ${obj.dialog.last_message_time === translate[\"LV\"].yesterday || obj.dialog.last_message_time === translate[\"RU\"].yesterday || obj.dialog.last_message_time === translate[\"EN\"].yesterday ? \"yesterday-dialogs-change\" : \"\" }`}>\r\n                                        {obj.dialog.last_message_time ? obj.dialog.last_message_time.split(' ')[i] : \"\"}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"last-message_notification\">\r\n                                    <div className={`last-message big-text ${obj.dialog.last_message_owner !== userData.userId ? \"noPadding\" : \"\"}`}>\r\n                                        {obj.dialog.last_message &&\r\n                                        <span className={obj.dialog.last_message_owner === userData.userId ? `${obj.dialog.last_message_status ? \"opened\" : \"\"}` : \"none\"}>\r\n                                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 18 18\" width=\"18\" height=\"18\"><path fill=\"currentColor\" d=\"M17.394 5.035l-.57-.444a.434.434 0 0 0-.609.076l-6.39 8.198a.38.38 0 0 1-.577.039l-.427-.388a.381.381 0 0 0-.578.038l-.451.576a.497.497 0 0 0 .043.645l1.575 1.51a.38.38 0 0 0 .577-.039l7.483-9.602a.436.436 0 0 0-.076-.609zm-4.892 0l-.57-.444a.434.434 0 0 0-.609.076l-6.39 8.198a.38.38 0 0 1-.577.039l-2.614-2.556a.435.435 0 0 0-.614.007l-.505.516a.435.435 0 0 0 .007.614l3.887 3.8a.38.38 0 0 0 .577-.039l7.483-9.602a.435.435 0 0 0-.075-.609z\"/></svg>\r\n                                        </span>\r\n                                        }\r\n                                        <span className={obj.dialog.last_message_owner !== userData.userId && !obj.dialog.last_message_status ? \"black\" : \"\"}>\r\n                                            {obj.dialog.last_message}\r\n                                        </span>\r\n                                    </div>\r\n                                    { obj.dialog.last_message_owner !== userData.userId && !obj.dialog.last_message_status &&\r\n                                        <div className=\"notification\">\r\n                                            <span>!</span>\r\n                                        </div>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n            {dialogsOrder.length === 0 &&\r\n                <div className=\"no_chat\">\r\n                    <p>{translate[userData.language].noChat1}</p>\r\n                    <p>{translate[userData.language].noChat2}</p>\r\n                </div>\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;\r\n\r\nconst getDate = (date_obj = new Date()) => {\r\n\r\n    let day = date_obj.getDate();\r\n    if (day < 10) day = '0' + day;\r\n\r\n    let month = date_obj.getMonth() + 1;\r\n    if (month < 10) month = '0' + month;\r\n\r\n    let year = date_obj.getFullYear();\r\n\r\n    return  `${day}/${month}/${year}`;\r\n}\r\n\r\nconst translate = {\r\n    LV: {\r\n        yesterday: \"vakar\",\r\n        noChat1: \"Jums vēl nav nevienas aktīvas tērzēšanas\",\r\n        noChat2: \"Izmantojiet meklēšanu, lai atrastu draugus!\",\r\n        ok: \"OK\",\r\n        cancel: \"ATCELT\",\r\n        error: \"Kļūda\"\r\n    },\r\n    RU: {\r\n        yesterday: \"вчера\",\r\n        noChat1: \"У вас еще нет активных чатов\",\r\n        noChat2: \"Используйте поиск, чтобы найти друзей!\",\r\n        ok: \"OK\",\r\n        cancel: \"ОТМЕНА\",\r\n        error: \"Ошибка\"\r\n    },\r\n    EN: {\r\n        yesterday: \"yesterday\",\r\n        noChat1: \"You don't have any active chats yet\",\r\n        noChat2: \"Use search to find friends!\",\r\n        ok: \"OK\",\r\n        cancel: \"CANCEL\",\r\n        error: \"Error\"\r\n    }\r\n}","import React, {useEffect, useState} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {activeDialogSet} from \"../redux/actions/dialog\";\r\nimport {Image} from \"cloudinary-react\";\r\nimport axios from \"axios\";\r\nimport {useAlert} from \"react-alert\";\r\nimport {logoutUser} from \"../redux/actions/user\";\r\n\r\nconst DialogsSearch = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const alert = useAlert()\r\n\r\n    const {activeDialog, dialogs, dialogsOrder} = useSelector(({dialog}) => dialog)\r\n    const {userData, dialogSearch} = useSelector(({user}) => user)\r\n\r\n    const [dialogsIds, setDialogsIds] = useState({});\r\n    const [loading, setLoading] = useState(false);\r\n    const [today, setToday] = useState('');\r\n    const [yesterday, setYesterday] = useState('');\r\n\r\n    useEffect(() => {\r\n        setLoading(true)\r\n        axios.post(\"/api/dialog/search\", { search: dialogSearch }, { headers: { Authorization: `Bearer ${userData.token}` }}).then(res => {\r\n            setDialogsIds(res.data.answer)\r\n            setLoading(false);\r\n        }, (err) => {\r\n            if (err.response.status === 401) {\r\n                alert.show(translate[userData.language].errorAuth)\r\n                setTimeout(() => {\r\n                    dispatch(logoutUser())\r\n                }, 1500)\r\n            } else {\r\n                alert.show(translate[userData.language].error)\r\n            }\r\n        })\r\n        let yesterday = new Date()\r\n        yesterday.setDate(yesterday.getDate() - 1)\r\n        yesterday = getDate(yesterday)\r\n        setYesterday(yesterday)\r\n        setToday(getDate())\r\n    }, [dialogSearch])\r\n\r\n    useEffect(() => {\r\n        const elems = document.querySelectorAll(\".yesterday-dialogs-change\");\r\n        for (let i = 0; i < elems.length; i++) {\r\n            elems[i].innerHTML = translate[userData.language].yesterday;\r\n        }\r\n    }, [userData.language])\r\n\r\n    const setActiveDialog = (id) => {\r\n        dispatch(activeDialogSet(id))\r\n    }\r\n\r\n    return (\r\n        <div className=\"dialogs\">\r\n            { loading &&\r\n            <div className=\"loadingChatBlock\">\r\n                <div className=\"spinner spinner-1\"/>\r\n            </div>\r\n            }\r\n            {dialogs !== {} && !loading &&\r\n\r\n                dialogsOrder.map(key => {\r\n                    if (Object.keys(dialogsIds).includes(key)) {\r\n                        const obj = dialogs[key]\r\n                        let i = 0;\r\n\r\n                        if (obj.dialog.last_message_time.split(' ')[0] === today) {\r\n                            i = 1\r\n                        } else if (obj.dialog.last_message_time.split(' ')[0] === yesterday) {\r\n                            obj.dialog.last_message_time = translate[userData.language].yesterday\r\n                        }\r\n\r\n                        return (\r\n                            <div onClick={() => {setActiveDialog(key)}} className={activeDialog === key ? \"dialog active\" : \"dialog\"} key={key}>\r\n                                <Image cloudName=\"artemijss\" publicId={obj.photo ? obj.photo : \"tkixqcinuntqmalr2dej\"}/>\r\n                                <div className=\"details\">\r\n                                    <div className=\"dialog-info1\">\r\n                                        <div style={obj.deleted && {color: \"rgb(214,48,46)\"}} className={`dialog-name big-text ${obj.dialog.last_message_owner !== userData.userId && !obj.dialog.last_message_status ? \"bold\" : \"\"}`}>\r\n                                            {obj.name}\r\n                                        </div>\r\n                                        <div className={`mssg-time ${obj.dialog.last_message_owner !== userData.userId && !obj.dialog.last_message_status ? \"black bold\" : \"\"} ${obj.dialog.last_message_time === translate[\"LV\"].yesterday || obj.dialog.last_message_time === translate[\"RU\"].yesterday || obj.dialog.last_message_time === translate[\"EN\"].yesterday ? \"yesterday-dialogs-change\" : \"\" }`}>\r\n                                            {obj.dialog.last_message_time ? obj.dialog.last_message_time.split(' ')[i] : \"\"}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"last-message_notification\">\r\n                                        <div className={`last-message big-text ${obj.dialog.last_message_owner !== userData.userId ? \"noPadding\" : \"\"}`}>\r\n                                            {obj.dialog.last_message &&\r\n                                            <span className={obj.dialog.last_message_owner === userData.userId ? `${obj.dialog.last_message_status ? \"opened\" : \"\"}` : \"none\"}>\r\n                                                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 18 18\" width=\"18\" height=\"18\"><path fill=\"currentColor\" d=\"M17.394 5.035l-.57-.444a.434.434 0 0 0-.609.076l-6.39 8.198a.38.38 0 0 1-.577.039l-.427-.388a.381.381 0 0 0-.578.038l-.451.576a.497.497 0 0 0 .043.645l1.575 1.51a.38.38 0 0 0 .577-.039l7.483-9.602a.436.436 0 0 0-.076-.609zm-4.892 0l-.57-.444a.434.434 0 0 0-.609.076l-6.39 8.198a.38.38 0 0 1-.577.039l-2.614-2.556a.435.435 0 0 0-.614.007l-.505.516a.435.435 0 0 0 .007.614l3.887 3.8a.38.38 0 0 0 .577-.039l7.483-9.602a.435.435 0 0 0-.075-.609z\"/></svg>\r\n                                            </span>\r\n                                            }\r\n                                            <span className={obj.dialog.last_message_owner !== userData.userId && !obj.dialog.last_message_status ? \"black\" : \"\"}>\r\n                                                {obj.dialog.last_message}\r\n                                            </span>\r\n                                        </div>\r\n                                        { obj.dialog.last_message_owner !== userData.userId && !obj.dialog.last_message_status &&\r\n                                        <div className=\"notification\">\r\n                                            <span>!</span>\r\n                                        </div>\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    }\r\n                })\r\n            }\r\n            { Object.keys(dialogs).length === 0 && !loading &&\r\n            <div className=\"no_chat\">\r\n                <p>{translate[userData.language].noChat1}</p>\r\n                <p>{translate[userData.language].noChat2}</p>\r\n            </div>\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogsSearch;\r\n\r\nconst getDate = (date_obj = new Date()) => {\r\n\r\n    let day = date_obj.getDate();\r\n    if (day < 10) day = '0' + day;\r\n\r\n    let month = date_obj.getMonth() + 1;\r\n    if (month < 10) month = '0' + month;\r\n\r\n    let year = date_obj.getFullYear();\r\n\r\n    return  `${day}/${month}/${year}`;\r\n}\r\n\r\nconst translate = {\r\n    LV: {\r\n        yesterday: \"vakar\",\r\n        noChat1: \"Diemžēl jums nav šādu draugu\",\r\n        noChat2: \"Izmantojiet meklēšanu, lai atrastu draugus!\",\r\n        ok: \"OK\",\r\n        cancel: \"ATCELT\",\r\n        error: \"Kļūda\",\r\n        errorAuth: \"Autorizācijas periods ir beidzies\"\r\n    },\r\n    RU: {\r\n        yesterday: \"вчера\",\r\n        noChat1: \"К сожалению таких друзей у вас нет\",\r\n        noChat2: \"Используйте поиск, чтобы найти друзей!\",\r\n        ok: \"OK\",\r\n        cancel: \"ОТМЕНА\",\r\n        error: \"Ошибка\",\r\n        errorAuth: \"Истек срок авторизации\"\r\n    },\r\n    EN: {\r\n        yesterday: \"yesterday\",\r\n        noChat1: \"Unfortunately you don't have such friends\",\r\n        noChat2: \"Use search to find friends!\",\r\n        ok: \"OK\",\r\n        cancel: \"CANCEL\",\r\n        error: \"Error\",\r\n        errorAuth: \"Authorization period expired\"\r\n    }\r\n}","import React, {useEffect, useState} from 'react';\r\nimport {useSelector, useDispatch} from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport {useAlert} from \"react-alert\";\r\nimport {logoutUser} from \"../redux/actions/user\";\r\n\r\nconst Chat = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const {activeDialog, dialogs} = useSelector(({dialog}) => dialog)\r\n    const {token, userId, language} = useSelector(({user}) => user.userData)\r\n    const {newMessages, status} = useSelector(({message}) => message)\r\n\r\n    const [messages, setMessages] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    const alert = useAlert()\r\n\r\n    useEffect(() => {\r\n        setLoading(true)\r\n        axios.get(`/api/message/find/${activeDialog}`, { headers: { Authorization: `Bearer ${token}` } }).then(res => {\r\n            setMessages(res.data)\r\n            setLoading(false)\r\n        }, err => {\r\n            if (err.response.status === 401) {\r\n                alert.show(translate[language].errorAuth)\r\n                setTimeout(() => {\r\n                    dispatch(logoutUser())\r\n                }, 1500)\r\n            }\r\n            setLoading(false)\r\n        })\r\n    }, [activeDialog, token])\r\n\r\n    useEffect(() => {\r\n        if (status !== null) {\r\n            const t = document.querySelectorAll('.time-status svg.notOpened');\r\n            for (let i = 0; i < t.length; i++) {\r\n                t[i].className.baseVal = \"opened\";\r\n            }\r\n        }\r\n    }, [status])\r\n\r\n    const [today, setToday] = useState('');\r\n    const [yesterday, setYesterday] = useState('');\r\n\r\n    useEffect(() => {\r\n        let yesterday = new Date()\r\n        yesterday.setDate(yesterday.getDate() - 1)\r\n        yesterday = getDate(yesterday)\r\n        setYesterday(yesterday)\r\n        setToday(getDate())\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"chat\">\r\n            { dialogs[activeDialog].deleted &&\r\n                <div className=\"date\"><span>{dialogs[activeDialog].name} {translate[language].deletedNotification}</span></div>\r\n            }\r\n            {\r\n                newMessages && newMessages.map((obj, i) => {\r\n                    return (\r\n                        <div className={`message-block ${userId === obj.owner ? \"message-out\" : \"message-in\"}`} key={i+obj._id}>\r\n                            <div className=\"message\">\r\n                                <div className=\"text-block\">\r\n                                    <div className=\"text\">{obj.text}</div>\r\n                                    <div className=\"time-status\">\r\n                                        {obj.time.split(' ')[1]}\r\n                                        <svg className= {\r\n                                            obj._id !== 'none'\r\n                                            ?\r\n                                                obj.status ? \"opened\" : \"\"\r\n                                            :\r\n                                                \"none\"\r\n                                        }\r\n                                             xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 15\" width=\"16\" height=\"15\"><path fill=\"currentColor\" d=\"M15.01 3.316l-.478-.372a.365.365 0 0 0-.51.063L8.666 9.879a.32.32 0 0 1-.484.033l-.358-.325a.319.319 0 0 0-.484.032l-.378.483a.418.418 0 0 0 .036.541l1.32 1.266c.143.14.361.125.484-.033l6.272-8.048a.366.366 0 0 0-.064-.512zm-4.1 0l-.478-.372a.365.365 0 0 0-.51.063L4.566 9.879a.32.32 0 0 1-.484.033L1.891 7.769a.366.366 0 0 0-.515.006l-.423.433a.364.364 0 0 0 .006.514l3.258 3.185c.143.14.361.125.484-.033l6.272-8.048a.365.365 0 0 0-.063-.51z\"/></svg>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <svg className=\"triangle\" id=\"82734756-3615-4ec8-a382-6c6e9d1975af\" data-name=\"Layer 1\"\r\n                                 xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 67.96699 58.57164\">\r\n                                <path className=\"0082bf7a-a2e0-46d1-be00-84645c2dcbc6\"\r\n                                      d=\"M280.49486,515.96866l-44.88734,15.11513a.69234.69234,0,0,1-.221.03621H214.69244A.69245.69245,0,0,1,214,530.42756V515.31243a.69244.69244,0,0,1,.69244-.69243h65.58144A.69243.69243,0,0,1,280.49486,515.96866Z\"\r\n                                      transform=\"translate(-213.5 -514.12)\"/>\r\n                            </svg>\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n            {\r\n                !loading && messages.map((obj) => {\r\n                    return obj.msg.map((msg, j) => {\r\n                        return (\r\n                            <div key={msg.id}>\r\n                                {\r\n                                    j === obj.msg.length-1 &&\r\n                                    <div className=\"date\"><span>{today === msg.time.split(' ')[0] ? translate[language].today : msg.time.split(' ')[0] === yesterday ? translate[language].yesterday : msg.time.split(' ')[0]}</span></div>\r\n                                }\r\n                                <div className={`message-block ${userId === msg.owner ? \"message-out\" : \"message-in\"}`} key={j+msg.id}>\r\n                                     <div className=\"message\">\r\n                                         <div className=\"text-block\">\r\n                                             <div className=\"text\">{msg.text}</div>\r\n                                             <div className=\"time-status\">\r\n                                                 {msg.time.split(' ')[1]}\r\n                                                 <svg className={msg.status ? \"opened\" : \"notOpened\"} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 15\" width=\"16\" height=\"15\"><path fill=\"currentColor\" d=\"M15.01 3.316l-.478-.372a.365.365 0 0 0-.51.063L8.666 9.879a.32.32 0 0 1-.484.033l-.358-.325a.319.319 0 0 0-.484.032l-.378.483a.418.418 0 0 0 .036.541l1.32 1.266c.143.14.361.125.484-.033l6.272-8.048a.366.366 0 0 0-.064-.512zm-4.1 0l-.478-.372a.365.365 0 0 0-.51.063L4.566 9.879a.32.32 0 0 1-.484.033L1.891 7.769a.366.366 0 0 0-.515.006l-.423.433a.364.364 0 0 0 .006.514l3.258 3.185c.143.14.361.125.484-.033l6.272-8.048a.365.365 0 0 0-.063-.51z\"/></svg>\r\n                                             </div>\r\n                                         </div>\r\n                                     </div>\r\n                                     <svg className=\"triangle\" id=\"82734756-3615-4ec8-a382-6c6e9d1975af\" data-name=\"Layer 1\"\r\n                                         xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 67.96699 58.57164\">\r\n                                        <path className=\"0082bf7a-a2e0-46d1-be00-84645c2dcbc6\"\r\n                                              d=\"M280.49486,515.96866l-44.88734,15.11513a.69234.69234,0,0,1-.221.03621H214.69244A.69245.69245,0,0,1,214,530.42756V515.31243a.69244.69244,0,0,1,.69244-.69243h65.58144A.69243.69243,0,0,1,280.49486,515.96866Z\"\r\n                                              transform=\"translate(-213.5 -514.12)\"/>\r\n                                    </svg>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    })\r\n                })\r\n            }\r\n            {\r\n                loading &&\r\n                    <div className=\"loadingChatBlock\">\r\n                        <div className=\"spinner spinner-1\"/>\r\n                    </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chat;\r\n\r\nconst getDate = (date_obj = new Date()) => {\r\n\r\n    let day = date_obj.getDate();\r\n    if (day < 10) day = '0' + day;\r\n\r\n    let month = date_obj.getMonth() + 1;\r\n    if (month < 10) month = '0' + month;\r\n\r\n    let year = date_obj.getFullYear();\r\n\r\n    return  `${day}/${month}/${year}`;\r\n}\r\n\r\nconst translate = {\r\n    LV: {\r\n        deletedNotification: \"IZDZĒSA ŠO TĒRZĒŠANU - JŪS NEVARAT SŪTIT ZIŅOJUMUS\",\r\n        today: \"ŠODIEN\",\r\n        yesterday: \"VAKAR\",\r\n        ok: \"OK\",\r\n        cancel: \"ATCELT\",\r\n        error: \"Kļūda\",\r\n        errorAuth: \"Autorizācijas periods ir beidzies\"\r\n    },\r\n    RU: {\r\n        deletedNotification: \"УДАЛИЛ ЭТОТ ЧАТ - ВЫ НЕ МОЖЕТЕ ОТПРАВЛЯТЬ СООБЩЕНИЯ\",\r\n        today: \"СЕГОДНЯ\",\r\n        yesterday: \"ВЧЕРА\",\r\n        ok: \"OK\",\r\n        cancel: \"ОТМЕНА\",\r\n        error: \"Ошибка\",\r\n        errorAuth: \"Истек срок авторизации\"\r\n    },\r\n    EN: {\r\n        deletedNotification: \"DELETED THIS CHAT - YOU CAN'T SEND MESSAGES\",\r\n        today: \"TODAY\",\r\n        yesterday: \"YESTERDAY\",\r\n        ok: \"OK\",\r\n        cancel: \"CANCEL\",\r\n        error: \"Error\",\r\n        errorAuth: \"Authorization period expired\"\r\n    }\r\n}","import React, {useState} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport axios from \"axios\";\r\nimport {Image} from \"cloudinary-react\";\r\nimport {infoAboutUserSet, logoutUser} from \"../redux/actions/user\";\r\nimport {useAlert} from \"react-alert\";\r\n\r\n\r\nconst FindNewDialog = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const alert = useAlert()\r\n\r\n    const {token, language} = useSelector(({user}) => user.userData)\r\n    const {infoAboutUser} = useSelector(({user}) => user)\r\n\r\n    const [dialogs, setDialogs] = useState([]);\r\n\r\n    const newDialogs = (search) => {\r\n        if (search.length > 1)\r\n            axios.post(\"/api/user/find\", {telephone: search},{ headers: { Authorization: `Bearer ${token}` }}).then(res => {\r\n                setDialogs(res.data)\r\n            }, (err) => {\r\n                if (err.response.status === 401) {\r\n                    alert.show(translate[language].errorAuth)\r\n                    setTimeout(() => {\r\n                        dispatch(logoutUser())\r\n                    }, 1500)\r\n                } else {\r\n                    alert.show(translate[language].error)\r\n                }\r\n            })\r\n    }\r\n\r\n    const openUserProfile = (userId) => {\r\n        if (userId !== infoAboutUser.id)\r\n            dispatch(infoAboutUserSet({bool: true, id: userId}))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"search\">\r\n                <div className=\"box\">\r\n                    <div className=\"input-box\">\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\"><path fill=\"currentColor\" d=\"M15.009 13.805h-.636l-.22-.219a5.184 5.184 0 0 0 1.256-3.386 5.207 5.207 0 1 0-5.207 5.208 5.183 5.183 0 0 0 3.385-1.255l.221.22v.635l4.004 3.999 1.194-1.195-3.997-4.007zm-4.808 0a3.605 3.605 0 1 1 0-7.21 3.605 3.605 0 0 1 0 7.21z\"/></svg>\r\n                        <input onChange={(e) => {newDialogs(e.target.value)}} type=\"text\" placeholder={translate[language].inputPlaceholder}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"dialogs\">\r\n                {\r\n                    dialogs.map((user, i) => {\r\n                        return (\r\n                            <div onClick={() => openUserProfile(user._id)} className=\"dialog\" key={user._id+i}>\r\n                                <Image cloudName=\"artemijss\" publicId={user.photo ? user.photo : \"tkixqcinuntqmalr2dej\"} crop=\"scale\"/>\r\n                                <div className=\"details\">\r\n                                    <div className=\"dialog-info1\">\r\n                                        <div className=\"dialog-name big-text\">\r\n                                            {user.name} {user.telephone}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default FindNewDialog;\r\n\r\nconst translate = {\r\n    LV: {\r\n        inputPlaceholder: \"Sākt jaunu dialogu - ievadiet tālruni\",\r\n        ok: \"OK\",\r\n        cancel: \"ATCELT\",\r\n        error: \"Kļūda\",\r\n        errorAuth: \"Autorizācijas periods ir beidzies\"\r\n    },\r\n    RU: {\r\n        inputPlaceholder: \"Начать новый диалог - введите телефон\",\r\n        ok: \"OK\",\r\n        cancel: \"ОТМЕНА\",\r\n        error: \"Ошибка\",\r\n        errorAuth: \"Истек срок авторизации\"\r\n    },\r\n    EN: {\r\n        inputPlaceholder: \"Start new dialog - enter telephone\",\r\n        ok: \"OK\",\r\n        cancel: \"CANCEL\",\r\n        error: \"Error\",\r\n        errorAuth: \"Authorization period expired\"\r\n    }\r\n}","import React, {useRef, useState} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {logoutUser, updateAbout, updateName, updatePhoto} from \"../redux/actions/user\";\r\nimport axios from \"axios\";\r\nimport {useAlert} from \"react-alert\";\r\nimport {Image} from \"cloudinary-react\";\r\n\r\n\r\nconst Profile = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const {name, description, token, photo, telephone, language} = useSelector(({user}) => user.userData)\r\n\r\n    const [inputName, setInputName] = useState(true)\r\n    const [inputAbout, setInputAbout] = useState(true)\r\n\r\n    const [nameInput, setNameInput] = useState(name)\r\n    const [aboutInput, setAboutInput] = useState(description)\r\n    const [loadingPhoto, setLoadingPhoto] = useState(false)\r\n\r\n    const alert = useAlert()\r\n\r\n    const imageInput = useRef()\r\n\r\n    const changeName = () => {\r\n        setInputName(true)\r\n        if (nameInput !== name) {\r\n            axios.post('/api/user/updateName', {name: nameInput}, { headers: { Authorization: `Bearer ${token}` }}).then((res) => {\r\n                dispatch(updateName(res.data.name))\r\n                alert.success(translate[language].nameWasChanged)\r\n            }, (err) => {\r\n                if (err.response.status === 401) {\r\n                    alert.show(translate[language].errorAuth)\r\n                    setTimeout(() => {\r\n                        dispatch(logoutUser())\r\n                    }, 1500)\r\n                } else {\r\n                    alert.show(translate[language].namCanNotBeEmpty)\r\n                    const inName = document.getElementById('nameInput')\r\n                    inName.value = name\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    const changeAbout = () => {\r\n        setInputAbout(true)\r\n        if (aboutInput !== description) {\r\n            axios.post('/api/user/updateAbout', {about: aboutInput}, { headers: { Authorization: `Bearer ${token}` }}).then((res) => {\r\n                dispatch(updateAbout(res.data.about))\r\n                alert.success(translate[language].aboutWasChanged)\r\n            }, (err) => {\r\n                if (err.response.status === 401) {\r\n                    alert.show(translate[language].errorAuth)\r\n                    setTimeout(() => {\r\n                        dispatch(logoutUser())\r\n                    }, 1500)\r\n                } else {\r\n                    alert.show(translate[language].error)\r\n                    const inAbout = document.getElementById('aboutInput')\r\n                    inAbout.value = description\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    const changeImage = (e) => {\r\n        const file = e.target.files[0]\r\n        if (!file)\r\n            return false\r\n        setLoadingPhoto(true)\r\n        const reader = new FileReader()\r\n        reader.readAsDataURL(file)\r\n        reader.onloadend = () => {\r\n            uploadImage(reader.result)\r\n        };\r\n\r\n    }\r\n\r\n    const uploadImage = async (base64EncodedImage) => {\r\n        axios.post('/api/user/updateImage', {img: base64EncodedImage}, { headers: { Authorization: `Bearer ${token}` }}).then((res) => {\r\n            dispatch(updatePhoto(res.data.photo))\r\n            alert.success(translate[language].photoWasChanged)\r\n            setLoadingPhoto(false)\r\n        }, (err) => {\r\n            if (err.response.status === 401) {\r\n                alert.show(translate[language].errorAuth)\r\n                setTimeout(() => {\r\n                    dispatch(logoutUser())\r\n                }, 1500)\r\n            } else {\r\n                alert.show(translate[language].error)\r\n                setLoadingPhoto(false)\r\n            }\r\n        })\r\n    };\r\n\r\n    return (\r\n        <div className=\"profile\">\r\n            <div className=\"image\">\r\n                <input ref={imageInput} onChange={changeImage} style={{display: \"none\"}} type=\"file\" accept=\"image/*\"/>\r\n                <div onClick={() => imageInput.current.click()} className=\"changePhoto\">\r\n                    <span>{translate[language].changePhoto}</span>\r\n                </div>\r\n\r\n                <Image cloudName=\"artemijss\" publicId={photo ? photo : \"tkixqcinuntqmalr2dej\"}/>\r\n                { loadingPhoto &&\r\n                    <div className=\"loadingChatBlock\">\r\n                        <div className=\"spinner spinner-1\"/>\r\n                    </div>\r\n                }\r\n            </div>\r\n            <div className=\"name\">\r\n                <span>{translate[language].name}</span>\r\n                <div className={inputName ? \"update\" : \" update borderBottom\"}>\r\n                    <input id=\"nameInput\" onChange={(e) => {setNameInput(e.target.value)}} type=\"text\" defaultValue={name} readOnly={inputName}/>\r\n                    { inputName\r\n                        ?\r\n                            <div onClick={() => {setInputName(false)}}>\r\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\"><path fill=\"currentColor\" d=\"M3.95 16.7v3.4h3.4l9.8-9.9-3.4-3.4-9.8 9.9zm15.8-9.1c.4-.4.4-.9 0-1.3l-2.1-2.1c-.4-.4-.9-.4-1.3 0l-1.6 1.6 3.4 3.4 1.6-1.6z\"/></svg>\r\n                            </div>\r\n                        :\r\n                            <div onClick={changeName}>\r\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\"><path fill=\"currentColor\" d=\"M9 17.2l-4-4-1.4 1.3L9 19.9 20.4 8.5 19 7.1 9 17.2z\"/></svg>\r\n                            </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n            <div className=\"info\"/>\r\n            <div className=\"about\">\r\n                <span>{translate[language].about}</span>\r\n                <div className={inputAbout ? \"update\" : \" update borderBottom\"}>\r\n                    <input id=\"aboutInput\" onChange={(e) => {setAboutInput(e.target.value)}} type=\"text\" defaultValue={description} placeholder={translate[language].aboutPlaceholder} readOnly={inputAbout}/>\r\n                    { inputAbout\r\n                        ?\r\n                        <div onClick={() => {setInputAbout(false)}}>\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\"><path fill=\"currentColor\" d=\"M3.95 16.7v3.4h3.4l9.8-9.9-3.4-3.4-9.8 9.9zm15.8-9.1c.4-.4.4-.9 0-1.3l-2.1-2.1c-.4-.4-.9-.4-1.3 0l-1.6 1.6 3.4 3.4 1.6-1.6z\"/></svg>\r\n                        </div>\r\n                        :\r\n                        <div onClick={changeAbout}>\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\"><path fill=\"currentColor\" d=\"M9 17.2l-4-4-1.4 1.3L9 19.9 20.4 8.5 19 7.1 9 17.2z\"/></svg>\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n            <div className=\"info\"/>\r\n            <div className=\"about\">\r\n                <span>{translate[language].telephone}</span>\r\n                <div className=\"update\">\r\n                    <div id=\"tel\" style={{fontSize:\"18px\"}}>{telephone}</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;\r\n\r\nconst translate = {\r\n    LV: {\r\n        aboutWasChanged: \"Apraksts tika mainīts\",\r\n        nameWasChanged: \"Vārds/Uzvārds tika mainīts\",\r\n        namCanNotBeEmpty: \"Vārds nevar būt tukšs\",\r\n        photoWasChanged: \"Foto tika mainīts\",\r\n        changePhoto: \"Mainīt bildi\",\r\n        name: \"Vārds Uzvārds\",\r\n        about: \"Apraksts\",\r\n        aboutPlaceholder: \"ievadiet par sevi\",\r\n        telephone: \"Tālrunis\",\r\n        ok: \"OK\",\r\n        cancel: \"ATCELT\",\r\n        error: \"Kļūda\",\r\n        errorAuth: \"Autorizācijas periods ir beidzies\"\r\n    },\r\n    RU: {\r\n        aboutWasChanged: \"Описание было изменено\",\r\n        nameWasChanged: \"Имя/Фамилия была изменена\",\r\n        namCanNotBeEmpty: \"Имя не может быть пустым\",\r\n        photoWasChanged: \"Фотография была изменена\",\r\n        changePhoto: \"Изменить фотографию\",\r\n        name: \"Имя Фамилия\",\r\n        about: \"Описание\",\r\n        aboutPlaceholder: \"введите о себе\",\r\n        telephone: \"Телефон\",\r\n        ok: \"OK\",\r\n        cancel: \"ОТМЕНА\",\r\n        error: \"Ошибка\",\r\n        errorAuth: \"Истек срок авторизации\"\r\n    },\r\n    EN: {\r\n        aboutWasChanged: \"Description was changed\",\r\n        nameWasChanged: \"Name/Surname was changed\",\r\n        namCanNotBeEmpty: \"Name cannot be empty\",\r\n        photoWasChanged: \"Photo was changed\",\r\n        changePhoto: \"Change photo\",\r\n        name: \"Name surname\",\r\n        about: \"About\",\r\n        aboutPlaceholder: \"enter about yourself\",\r\n        telephone: \"Telephone\",\r\n        ok: \"OK\",\r\n        cancel: \"CANCEL\",\r\n        error: \"Error\",\r\n        errorAuth: \"Authorization period expired\"\r\n    }\r\n}","import React, {useEffect, useState} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {Image} from \"cloudinary-react\";\r\nimport {infoAboutUserSet, logoutUser} from \"../redux/actions/user\";\r\nimport axios from \"axios\";\r\nimport {useAlert} from \"react-alert\";\r\nimport {createDialog, deleteDialog} from \"../redux/actions/dialog\";\r\n\r\nconst UserInfo = () => {\r\n\r\n    const alert = useAlert()\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const {dialogs, activeDialog} = useSelector(({dialog}) => dialog)\r\n    const {infoAboutUser, userData} = useSelector(({user}) => user)\r\n    const {token, language} = useSelector(({user}) => userData)\r\n\r\n    const [name, setName] = useState('')\r\n    const [photo, setPhoto] = useState('')\r\n    const [status, setStatus] = useState('')\r\n    const [telephone, setTelephone] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [about, setAbout] = useState('')\r\n\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    useEffect(() => {\r\n        if (infoAboutUser.id) {\r\n            setLoading(true)\r\n            axios.get(`/api/user/find/${infoAboutUser.id}`, { headers: { Authorization: `Bearer ${token}` }}).then((res) => {\r\n                setName(res.data.name)\r\n                setStatus(res.data.status)\r\n                setPhoto(res.data.photo)\r\n                setTelephone(res.data.telephone)\r\n                setEmail(res.data.email)\r\n                setAbout(res.data.description)\r\n                setLoading(false)\r\n            }, (err) => {\r\n                if (err.response.status === 401) {\r\n                    alert.show(translate[language].errorAuth)\r\n                    setTimeout(() => {\r\n                        dispatch(logoutUser())\r\n                    }, 1500)\r\n                } else {\r\n                    setLoading(false)\r\n                    alert.show(translate[language].error)\r\n                }\r\n            })\r\n        } else {\r\n            if (activeDialog) {\r\n                setName(dialogs[activeDialog].name)\r\n                setStatus(dialogs[activeDialog].status)\r\n                setPhoto(dialogs[activeDialog].photo)\r\n                setTelephone(dialogs[activeDialog].telephone)\r\n                setEmail(dialogs[activeDialog].email)\r\n                setAbout(dialogs[activeDialog].description)\r\n            }\r\n            setLoading(false)\r\n        }\r\n    }, [infoAboutUser])\r\n\r\n    const createNewDialog = () => {\r\n        setLoading(true)\r\n        dispatch(createDialog(token, infoAboutUser.id)).then((res) => {\r\n            setLoading(false)\r\n            if (res === -1)\r\n                alert.show(translate[language].error)\r\n            dispatch(infoAboutUserSet({bool: false, id: null}))\r\n        })\r\n    }\r\n\r\n    const deleteDialogFn = () => {\r\n        const res = window.confirm(translate[language].sure)\r\n        if (!res)\r\n            return false\r\n        setLoading(true)\r\n        dispatch(deleteDialog(infoAboutUser.dialogId, token, infoAboutUser.id)).then(() => {\r\n            setLoading(false)\r\n            dispatch(infoAboutUserSet({bool: false, id: null}))\r\n        })\r\n    }\r\n\r\n    return (\r\n            <div className=\"userInfo\">\r\n                <div className=\"box-header\">\r\n                    <svg onClick={() => dispatch(infoAboutUserSet({bool: false, id: null}))} xmlns=\"http://www.w3.org/2000/svg\"\r\n                         viewBox=\"0 0 24 24\" width=\"24\" height=\"24\">\r\n                        <path fill=\"currentColor\"\r\n                              d=\"M19.1 17.2l-5.3-5.3 5.3-5.3-1.8-1.8-5.3 5.4-5.3-5.3-1.8 1.7 5.3 5.3-5.3 5.3L6.7 19l5.3-5.3 5.3 5.3 1.8-1.8z\"/>\r\n                    </svg>\r\n                    <div className=\"title\">{translate[language].profileInfo}</div>\r\n                </div>\r\n                { !loading &&\r\n                    <>\r\n                        <div className=\"user\">\r\n                            <div className=\"info\">\r\n                                <div style={{width: '200px'}}>\r\n                                    <Image cloudName=\"artemijss\"\r\n                                           publicId={photo ? photo : \"tkixqcinuntqmalr2dej\"}/>\r\n                                </div>\r\n                                <div className=\"name\" style={activeDialog ? dialogs[activeDialog].deleted && {color: \"rgb(214,48,46)\"} : {}}>{name}</div>\r\n                                <div className=\"status\" style={activeDialog ? dialogs[activeDialog].deleted && {color: \"rgb(214,48,46)\"} : {}}>\r\n                                    { activeDialog && dialogs[activeDialog].deleted\r\n                                        ?\r\n                                        translate[language].deleted\r\n                                        :\r\n                                        status ? translate[language].online : translate[language].offline\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                            { !dialogs[infoAboutUser.dialogId] &&\r\n                                <div onClick={() => {createNewDialog()}} className=\"button\" style={{marginBottom: \"28px\"}}>\r\n                                    <svg className=\"salat\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\"><path fill=\"currentColor\" d=\"M9 17.2l-4-4-1.4 1.3L9 19.9 20.4 8.5 19 7.1 9 17.2z\"/></svg>\r\n                                    <div className=\"flex1 paddingLeft20 salat bold\">{translate[language].addToFriends}</div>\r\n                                </div>\r\n                            }\r\n                            <div style={activeDialog ? dialogs[activeDialog].deleted && {display: \"none\"} : {}} className=\"about\">\r\n                                <span>{translate[language].telephone}</span>\r\n                                <div>{telephone}</div>\r\n                            </div>\r\n                            <div style={activeDialog ? dialogs[activeDialog].deleted && {display: \"none\"} : {}} className=\"about\">\r\n                                <span>Email</span>\r\n                                <div>{email}</div>\r\n                            </div>\r\n                            <div style={activeDialog ? dialogs[activeDialog].deleted && {display: \"none\"} : {}} className=\"about\">\r\n                                <span>{translate[language].about}</span>\r\n                                <div>{about ? about : translate[language].none}</div>\r\n                            </div>\r\n                            { dialogs[infoAboutUser.dialogId] &&\r\n                                <div onClick={deleteDialogFn} className=\"button\">\r\n                                    <svg className=\"red\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"\r\n                                         width=\"24\" height=\"24\">\r\n                                        <path fill=\"currentColor\"\r\n                                              d=\"M6 18c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V6H6v12zM19 3h-3.5l-1-1h-5l-1 1H5v2h14V3z\"/>\r\n                                    </svg>\r\n                                    <div className=\"flex1 paddingLeft20 red bold\">{translate[language].deleteChat}</div>\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                    </>\r\n                }\r\n                { loading &&\r\n                    <div className=\"loadingChatBlock\">\r\n                        <div className=\"spinner spinner-1\"/>\r\n                    </div>\r\n                }\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default UserInfo;\r\n\r\nconst translate = {\r\n    LV: {\r\n        profileInfo: \"Profila informācija\",\r\n        addToFriends: \"Pievienot draugiem\",\r\n        deleteChat: \"Dzēst tērzēšanu\",\r\n        sure: \"Vai jūs to tiešam gribat?\",\r\n        name: \"Vārds Uzvārds\",\r\n        about: \"Apraksts\",\r\n        telephone: \"Tālrunis\",\r\n        deleted: \"DZĒSTS\",\r\n        online: \"online\",\r\n        offline: \"offline\",\r\n        ok: \"OK\",\r\n        cancel: \"ATCELT\",\r\n        error: \"Kļūda\",\r\n        none: \"nav\",\r\n        errorAuth: \"Autorizācijas periods ir beidzies\"\r\n    },\r\n    RU: {\r\n        profileInfo: \"Информация о профиле\",\r\n        addToFriends: \"Добавить в друзья\",\r\n        deleteChat: \"Удалить Чат\",\r\n        sure: \"Вы уверены?\",\r\n        name: \"Имя Фамилия\",\r\n        about: \"Описание\",\r\n        telephone: \"Телефон\",\r\n        deleted: \"УДАЛЕН\",\r\n        online: \"в сети\",\r\n        offline: \"не в сети\",\r\n        ok: \"OK\",\r\n        cancel: \"ОТМЕНА\",\r\n        error: \"Ошибка\",\r\n        none: \"пусто\",\r\n        errorAuth: \"Истек срок авторизации\"\r\n    },\r\n    EN: {\r\n        profileInfo: \"Profile Info\",\r\n        addToFriends: \"Add to friends\",\r\n        deleteChat: \"Delete Chat\",\r\n        sure: \"Are you sure?\",\r\n        name: \"Name Surname\",\r\n        about: \"About\",\r\n        telephone: \"Telephone\",\r\n        deleted: \"DELETED\",\r\n        online: \"online\",\r\n        offline: \"offline\",\r\n        ok: \"OK\",\r\n        cancel: \"CANCEL\",\r\n        error: \"Error\",\r\n        none: \"none\",\r\n        errorAuth: \"Authorization period expired\"\r\n    }\r\n}","import React, {useState, useEffect, useRef} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport { Helmet } from 'react-helmet';\r\nimport {BackGround, Chat, Dialogs, FindNewDialog, Profile, Search, UserInfo, DialogsSearch} from \"../Components\";\r\nimport axios from \"axios\";\r\nimport {useAlert} from \"react-alert\";\r\nimport socket from \"../socket\";\r\nimport {messageNewDelete, messagesNewSet} from \"../redux/actions/message\";\r\nimport {dialogLastMessageSet, dialogLastMessageStatusSet, dialogOrderChange} from \"../redux/actions/dialog\";\r\nimport {Link} from 'react-router-dom'\r\nimport {changeUserLanguage, infoAboutUserSet, logoutUser} from \"../redux/actions/user\";\r\nimport {Image} from \"cloudinary-react\";\r\n\r\n\r\nfunction MainPage () {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const {dialogs, activeDialog, dialogsOrder} = useSelector(({dialog}) => dialog)\r\n    const {token, userId, role, photo, language} = useSelector(({user}) => user.userData)\r\n    const {infoAboutUser, dialogSearch} = useSelector(({user}) => user)\r\n\r\n    const alert = useAlert()\r\n\r\n    const [activeFindNewDialog, setActiveFindNewDialog] = useState(false)\r\n    const [profile, setProfile] = useState(false)\r\n    const [languageChoose, setLanguageChoose] = useState(false)\r\n    const [userInfo, setUserInfo] = useState(infoAboutUser.bool)\r\n\r\n    const [languageTMP, setLanguageTMP] = useState(language)\r\n\r\n    const [messageText, setMessageText] = useState('')\r\n    const [settingsPopUp, setSettingsPopUp] = useState(false)\r\n\r\n    const popUpRef = useRef();\r\n    const settingMenuRef = useRef();\r\n\r\n    useEffect(() => {\r\n        setActiveFindNewDialog(false)\r\n        dispatch(messageNewDelete())\r\n        if (activeDialog) {\r\n            if (!dialogs[activeDialog].deleted && dialogs[activeDialog].dialog.last_message_owner !== userId)\r\n                socket.emit('messageAllStatus', {dialogId: activeDialog, id: userId})\r\n            if (dialogs[activeDialog].dialog.last_message_owner !== userId)\r\n                dispatch(dialogLastMessageStatusSet(activeDialog))\r\n        }\r\n    }, [activeDialog])\r\n\r\n    useEffect(() => {\r\n        if (!infoAboutUser.bool) {\r\n            setUserInfo(false)\r\n        } else {\r\n            setUserInfo(true)\r\n        }\r\n    }, [infoAboutUser])\r\n\r\n    const handleOutsideClick = (e) => {\r\n        if (!e.composedPath().includes(popUpRef.current) && !e.composedPath().includes(settingMenuRef.current)) {\r\n            setSettingsPopUp(false);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        document.body.addEventListener('click', handleOutsideClick)\r\n\r\n        return () => {\r\n            document.body.removeEventListener('click', handleOutsideClick);\r\n        };\r\n    }, [])\r\n\r\n    const sendMessage = (e) => {\r\n        e.preventDefault()\r\n        const input = document.querySelector('#sendMessageInput')\r\n        input.value = \"\"\r\n\r\n        if (dialogs[activeDialog].deleted) {\r\n            alert.show(translate[language].errorMsgDel)\r\n            return false\r\n        }\r\n\r\n        const message = {\r\n            recipient: dialogs[activeDialog].id,\r\n            text: messageText,\r\n            dialogId: activeDialog\r\n        }\r\n\r\n        if (!messageText) {\r\n            alert.show(translate[language].errorMsgEnter)\r\n            return false\r\n        }\r\n\r\n        axios.post(\"/api/message/new\", message, { headers: { Authorization: `Bearer ${token}` }}).then(message => {\r\n            socket.emit('newMessage', message.data)\r\n        }, (err) => {\r\n            if (err.response.status === 401) {\r\n                alert.show(translate[language].errorAuth)\r\n                setTimeout(() => {\r\n                    dispatch(logoutUser())\r\n                }, 1500)\r\n            } else {\r\n                alert.show(translate[language].errorMsg)\r\n            }\r\n        })\r\n\r\n        const date = getDate();\r\n\r\n        const msg = {\r\n            _id: \"none\",\r\n            text: messageText,\r\n            owner: userId,\r\n            recipient: dialogs[activeDialog].id,\r\n            time: date,\r\n            status: false,\r\n            dialogId: activeDialog\r\n        }\r\n\r\n        dispatch(messagesNewSet(msg))\r\n        dispatch(dialogLastMessageSet(activeDialog, msg))\r\n\r\n        if (dialogsOrder[0] !== activeDialog)\r\n            dispatch(dialogOrderChange(activeDialog))\r\n\r\n        setMessageText('')\r\n    }\r\n\r\n    const userInfoShow = () => {\r\n        // if (infoAboutUser.id) {\r\n        //     dispatch(infoAboutUserSet({bool: true, id: null}))\r\n        // } else if (activeDialog) {\r\n            dispatch(infoAboutUserSet({bool: true, id: dialogs[activeDialog].id, dialogId: activeDialog}))\r\n        // }\r\n        setUserInfo(true)\r\n    }\r\n\r\n    const changeLanguage = () => {\r\n        if (language === languageTMP)\r\n            return\r\n        axios.post(\"/api/user/updateLanguage\", { language: languageTMP}, { headers: { Authorization: `Bearer ${token}` }}).then((res) => {\r\n            dispatch(changeUserLanguage(res.data.language))\r\n            alert.success(translate[languageTMP].languageBox.notification)\r\n            setLanguageChoose(false)\r\n        }, (err) => {\r\n            if (err.response.status === 401) {\r\n                alert.show(translate[language].errorAuth)\r\n                setTimeout(() => {\r\n                    dispatch(logoutUser())\r\n                }, 1500)\r\n            } else {\r\n                alert.show(translate[language].error)\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Helmet>\r\n                <title>Live Chat</title>\r\n            </Helmet>\r\n            <BackGround/>\r\n            { languageChoose &&\r\n                <div className=\"language\">\r\n                    <div className=\"rel-block\">\r\n                        <div className=\"box-choose\">\r\n                            <div className=\"heading\">{translate[language].languageBox.heading}</div>\r\n                            <div className=\"choose\">\r\n                                <label>\r\n                                    <input name=\"lan\" value=\"LV\" onChange={(e) => {setLanguageTMP(e.target.value)}} type=\"radio\" defaultChecked={language === \"LV\"}/>\r\n                                    LV\r\n                                </label>\r\n                                <label>\r\n                                    <input name=\"lan\" value=\"RU\" onChange={(e) => {setLanguageTMP(e.target.value)}} type=\"radio\" defaultChecked={language === \"RU\"}/>\r\n                                    RU\r\n                                </label>\r\n                                <label>\r\n                                    <input name=\"lan\" value=\"EN\" onChange={(e) => {setLanguageTMP(e.target.value)}} type=\"radio\" defaultChecked={language === \"EN\"}/>\r\n                                    EN\r\n                                </label>\r\n                            </div>\r\n                            <div className=\"bottom\">\r\n                                <div className=\"ok\" onClick={changeLanguage}>\r\n                                    {translate[language].ok}\r\n                                </div>\r\n                                <div className=\"cancel\" onClick={() => {setLanguageChoose(false)}}>\r\n                                    {translate[language].cancel}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            }\r\n            <div className=\"all-screen\">\r\n                <div className=\"main-box\">\r\n                    <div className=\"whats-app\">\r\n                        <div className=\"side-bar\">\r\n                            { activeFindNewDialog &&\r\n                                <>\r\n                                    <div className=\"find-header\">\r\n                                        <div className=\"box\">\r\n                                            <div className=\"back\">\r\n                                                <svg onClick={() => {setActiveFindNewDialog(false)}} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\"><path fill=\"currentColor\" d=\"M12 4l1.4 1.4L7.8 11H20v2H7.8l5.6 5.6L12 20l-8-8 8-8z\"/></svg>\r\n                                            </div>\r\n                                            <div className=\"big-text\">\r\n                                                {translate[language].newChat}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <FindNewDialog/>\r\n                                </>\r\n                            }\r\n                            {\r\n                                profile &&\r\n                                <>\r\n                                    <div className=\"find-header\">\r\n                                        <div className=\"box\">\r\n                                            <div className=\"back\">\r\n                                                <svg onClick={() => {setProfile(false)}} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\"><path fill=\"currentColor\" d=\"M12 4l1.4 1.4L7.8 11H20v2H7.8l5.6 5.6L12 20l-8-8 8-8z\"/></svg>\r\n                                            </div>\r\n                                            <div className=\"big-text\">\r\n                                                {translate[language].profile}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <Profile/>\r\n                                </>\r\n                            }\r\n                            { !activeFindNewDialog && !profile &&\r\n                                <div>\r\n                                    <div className=\"box-header\">\r\n                                        <Image onClick={() => setProfile(true)} cloudName=\"artemijss\" publicId={photo ? photo : \"tkixqcinuntqmalr2dej\"}/>\r\n                                        <div className=\"settings\">\r\n                                            <svg id=\"ee51d023-7db6-4950-baf7-c34874b80976\"\r\n                                                 xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\"\r\n                                                 height=\"24\">\r\n                                                <path fill=\"currentColor\"\r\n                                                      d=\"M12 20.664a9.163 9.163 0 0 1-6.521-2.702.977.977 0 0 1 1.381-1.381 7.269 7.269 0 0 0 10.024.244.977.977 0 0 1 1.313 1.445A9.192 9.192 0 0 1 12 20.664zm7.965-6.112a.977.977 0 0 1-.944-1.229 7.26 7.26 0 0 0-4.8-8.804.977.977 0 0 1 .594-1.86 9.212 9.212 0 0 1 6.092 11.169.976.976 0 0 1-.942.724zm-16.025-.39a.977.977 0 0 1-.953-.769 9.21 9.21 0 0 1 6.626-10.86.975.975 0 1 1 .52 1.882l-.015.004a7.259 7.259 0 0 0-5.223 8.558.978.978 0 0 1-.955 1.185z\"/>\r\n                                            </svg>\r\n                                            { dialogsOrder.length === 0 &&\r\n                                                <div className=\"noDialogsNotification\"/>\r\n                                            }\r\n                                            <svg onClick={() => {setActiveFindNewDialog(true)}} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\"\r\n                                                 height=\"24\">\r\n                                                <path fill=\"currentColor\"\r\n                                                      d=\"M19.005 3.175H4.674C3.642 3.175 3 3.789 3 4.821V21.02l3.544-3.514h12.461c1.033 0 2.064-1.06 2.064-2.093V4.821c-.001-1.032-1.032-1.646-2.064-1.646zm-4.989 9.869H7.041V11.1h6.975v1.944zm3-4H7.041V7.1h9.975v1.944z\"/>\r\n                                            </svg>\r\n                                            <svg ref={settingMenuRef} className={settingsPopUp ? \"active\" : \"\"} onClick={() => {setSettingsPopUp(!settingsPopUp)}} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\"\r\n                                                 height=\"24\">\r\n                                                <path fill=\"currentColor\"\r\n                                                      d=\"M12 7a2 2 0 1 0-.001-4.001A2 2 0 0 0 12 7zm0 2a2 2 0 1 0-.001 3.999A2 2 0 0 0 12 9zm0 6a2 2 0 1 0-.001 3.999A2 2 0 0 0 12 15z\"/>\r\n                                            </svg>\r\n                                            {\r\n                                                settingsPopUp &&\r\n                                                <div className=\"settingsPopUp\" ref={popUpRef}>\r\n                                                    <div className=\"settingsLink\" onClick={() => {setProfile(true); setSettingsPopUp(false)}}><div>{translate[language].profile}</div></div>\r\n                                                    <div className=\"settingsLink\" onClick={() => {}}><div>DEV</div></div>\r\n                                                    <div className=\"settingsLink\" onClick={() => {setLanguageChoose(true); setSettingsPopUp(false)}}><div>{translate[language].language}</div></div>\r\n                                                    <div className=\"settingsLink\" onClick={() => {dispatch(logoutUser())}}><div>{translate[language].logout}</div></div>\r\n                                                </div>\r\n                                            }\r\n                                        </div>\r\n                                        {\r\n                                            role === \"admin\" &&\r\n                                            <Link to=\"/admin\">AdminPanel</Link>\r\n                                        }\r\n                                    </div>\r\n                                    <Search/>\r\n                                    { dialogSearch\r\n                                        ?\r\n                                        <DialogsSearch/>\r\n                                        :\r\n                                        <Dialogs/>\r\n                                    }\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                        { activeDialog &&\r\n                            <div className=\"chat-bar\">\r\n                                <div className=\"box-header\">\r\n                                    <div className=\"padding\">\r\n                                        <Image onClick={() => userInfoShow()} cloudName=\"artemijss\" publicId={dialogs[activeDialog].photo ? dialogs[activeDialog].photo : \"tkixqcinuntqmalr2dej\"} crop=\"scale\"/>\r\n                                    </div>\r\n                                    <div onClick={() => userInfoShow()} className=\"dialog-info\">\r\n                                        <div className={dialogs[activeDialog].deleted ? \"dialog-name red\" : \"dialog-name\"}>\r\n                                            {dialogs[activeDialog].name}\r\n                                        </div>\r\n                                        <div className=\"last-time-seen\" style={dialogs[activeDialog].deleted && {color: \"rgb(214,48,46)\"}}>\r\n                                            { dialogs[activeDialog].deleted\r\n                                                ?\r\n                                                    translate[language].deleted\r\n                                                :\r\n                                                dialogs[activeDialog].status ? translate[language].online : translate[language].offline\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"settings\">\r\n                                        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\"><path fill=\"currentColor\" d=\"M15.9 14.3H15l-.3-.3c1-1.1 1.6-2.7 1.6-4.3 0-3.7-3-6.7-6.7-6.7S3 6 3 9.7s3 6.7 6.7 6.7c1.6 0 3.2-.6 4.3-1.6l.3.3v.8l5.1 5.1 1.5-1.5-5-5.2zm-6.2 0c-2.6 0-4.6-2.1-4.6-4.6s2.1-4.6 4.6-4.6 4.6 2.1 4.6 4.6-2 4.6-4.6 4.6z\"/></svg>\r\n                                        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\"><path fill=\"currentColor\" d=\"M12 7a2 2 0 1 0-.001-4.001A2 2 0 0 0 12 7zm0 2a2 2 0 1 0-.001 3.999A2 2 0 0 0 12 9zm0 6a2 2 0 1 0-.001 3.999A2 2 0 0 0 12 15z\"/></svg>\r\n                                    </div>\r\n                                </div>\r\n                                <Chat/>\r\n                                <div className=\"footer\">\r\n                                    <div className=\"box\">\r\n                                        <form onSubmit={sendMessage} className=\"input-box\">\r\n                                            <input onChange={e => setMessageText(e.target.value)} id=\"sendMessageInput\" type=\"text\" placeholder={translate[language].enterMessage} disabled={dialogs[activeDialog].deleted} autoComplete=\"off\"/>\r\n                                            <svg role=\"button\" onClick={sendMessage} type=\"submit\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\"><path fill=\"currentColor\" d=\"M1.101 21.757L23.8 12.028 1.101 2.3l.011 7.912 13.623 1.816-13.623 1.817-.011 7.912z\"/></svg>\r\n                                        </form>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                        { !activeDialog && !userInfo &&\r\n                            <div className=\"chat-bar\"/>\r\n                        }\r\n                        { userInfo &&\r\n                            <UserInfo/>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MainPage;\r\n\r\nconst getDate = () => {\r\n    const date_obj = new Date();\r\n\r\n    let day = date_obj.getDate();\r\n    if (day < 10) day = '0' + day;\r\n\r\n    let month = date_obj.getMonth() + 1;\r\n    if (month < 10) month = '0' + month;\r\n\r\n    let year = date_obj.getFullYear();\r\n\r\n    let hours = date_obj.getHours();\r\n    if (hours < 10) hours = '0' + hours;\r\n\r\n    let minutes = date_obj.getMinutes();\r\n    if (minutes < 10) minutes = '0' + minutes;\r\n\r\n    let seconds = date_obj.getSeconds();\r\n    if (seconds < 10) seconds = '0' + seconds;\r\n\r\n    return  `${day}/${month}/${year} ${hours}:${minutes} ${seconds}`;\r\n}\r\n\r\nconst translate = {\r\n    LV: {\r\n        languageBox: {\r\n            notification: \"Valoda it nomainīta\",\r\n            heading: \"Izvēlieties valodu\"\r\n        },\r\n        newChat: \"Jauna tērzēšana\",\r\n        profile: \"Profils\",\r\n        language: \"Valoda\",\r\n        logout: \"Iziet\",\r\n        deleted: \"DZĒSTS\",\r\n        online: \"online\",\r\n        offline: \"offline\",\r\n        enterMessage: \"Ievadiet ziņojumu\",\r\n        ok: \"OK\",\r\n        cancel: \"ATCELT\",\r\n        error: \"Kļūda\",\r\n        errorMsg: \"Sūtot ziņojumu, radās kļūda\",\r\n        errorMsgEnter: \"Ievadiet ziņojuma tekstu\",\r\n        errorMsgDel: \"Šī tērzēšana ir izdzēsta, un jūs nevarat nosūtīt ziņojumus\",\r\n        errorAuth: \"Autorizācijas periods ir beidzies\"\r\n    },\r\n    RU: {\r\n        languageBox: {\r\n            notification: \"Язык успешно поменян\",\r\n            heading: \"Выберите язык\"\r\n        },\r\n        newChat: \"Новый чат\",\r\n        profile: \"Профиль\",\r\n        language: \"Язык\",\r\n        logout: \"Выйти\",\r\n        deleted: \"УДАЛЕН\",\r\n        online: \"в сети\",\r\n        offline: \"не в сети\",\r\n        enterMessage: \"Введите сообщение\",\r\n        ok: \"OK\",\r\n        cancel: \"ОТМЕНА\",\r\n        error: \"Ошибка\",\r\n        errorMsg: \"Ошибка при отправке сообщения\",\r\n        errorMsgEnter: \"Введите текст сообщения\",\r\n        errorMsgDel: \"ЭТОТ ЧАТ УДАЛЕН ВЫ НЕ МОЖЕТЕ ОТПРАВЛЯТЬ СООБЩЕНИЯ\",\r\n        errorAuth: \"Истек срок авторизации\"\r\n    },\r\n    EN: {\r\n        languageBox: {\r\n            notification: \"Language changed\",\r\n            heading: \"Select a language\"\r\n        },\r\n        newChat: \"New Chat\",\r\n        profile: \"Profile\",\r\n        language: \"Language\",\r\n        logout: \"Logout\",\r\n        deleted: \"DELETED\",\r\n        online: \"online\",\r\n        offline: \"offline\",\r\n        enterMessage: \"Enter a message\",\r\n        ok: \"OK\",\r\n        cancel: \"CANCEL\",\r\n        error: \"Error\",\r\n        errorMsg: \"Error with sending message\",\r\n        errorMsgEnter: \"Enter the message text\",\r\n        errorMsgDel: \"THIS CHAT IS DELETED YOU CANT SEND MESSAGES\",\r\n        errorAuth: \"Authorization period expired\"\r\n    }\r\n}","import React, {useState} from 'react';\r\nimport { Helmet } from 'react-helmet';\r\nimport {Link} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {useAlert} from \"react-alert\";\r\nimport {userDataFetch} from \"../redux/actions/user\";\r\n\r\n\r\nfunction AuthPage () {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const { language } = useSelector(({user}) => user.userData)\r\n\r\n    const alert = useAlert()\r\n\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const [form, setForm] = useState({\r\n        email: '', password: '', language: language\r\n    })\r\n\r\n    const changeHandler = event => {\r\n        setForm({ ...form, [event.target.name]: event.target.value })\r\n    }\r\n\r\n    const submit = event => {\r\n        event.preventDefault()\r\n        setLoading(true)\r\n        dispatch(userDataFetch(form,'login')).then(res => {\r\n            if (res) {\r\n                setLoading(false)\r\n                alert.show(res);\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Helmet>\r\n                <title>{translate[language].title}</title>\r\n            </Helmet>\r\n            <div className=\"header bg-overlay\"/>\r\n            <div className=\"all-screen\">\r\n                <div className=\"main-box\">\r\n                    <form className=\"formLogin\" onSubmit={submit}>\r\n                        {loading\r\n                            ?\r\n                                <h1>{translate[language].loading}</h1>\r\n                            :\r\n                                <h1>{translate[language].title}</h1>\r\n                        }\r\n                        <div className=\"text_field\">\r\n                            <input type=\"email\" id=\"email\" name=\"email\" required onChange={changeHandler}/>\r\n                            <span/>\r\n                            <label htmlFor=\"email\">E-mail</label>\r\n                        </div>\r\n                        <div className=\"text_field\">\r\n                            <input type=\"password\" id=\"pass\" name=\"password\" minLength=\"6\" required onChange={changeHandler}/>\r\n                            <span/>\r\n                            <label htmlFor=\"pass\">{translate[language].password}</label>\r\n                        </div>\r\n                        <button type=\"submit\">{translate[language].login}</button>\r\n                        <Link to=\"/registration\">{translate[language].signUp}</Link>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AuthPage;\r\n\r\nconst translate = {\r\n    LV: {\r\n        title: \"Pieslēgties\",\r\n        loading: \"Ielādēšana\",\r\n        password: \"Parole\",\r\n        login: \"PIESLĒGTIES\",\r\n        signUp: \"Nav biedrs? Pierakstīties!\",\r\n        ok: \"OK\",\r\n        cancel: \"ATCELT\",\r\n        error: \"Kļūda\"\r\n    },\r\n    RU: {\r\n        title: \"Вход\",\r\n        loading: \"Загрузка\",\r\n        password: \"Пароль\",\r\n        login: \"ВОЙТИ\",\r\n        signUp: \"Нет аккаунта? Зарегистрироваться!\",\r\n        ok: \"OK\",\r\n        cancel: \"ОТМЕНА\",\r\n        error: \"Ошибка\"\r\n    },\r\n    EN: {\r\n        title: \"Login\",\r\n        loading: \"Loading\",\r\n        password: \"Password\",\r\n        login: \"LOGIN\",\r\n        signUp: \"Not a member? Sign up!\",\r\n        ok: \"OK\",\r\n        cancel: \"CANCEL\",\r\n        error: \"Error\"\r\n    }\r\n}","import React, {useState} from 'react';\r\nimport { Helmet } from 'react-helmet';\r\nimport {Link} from 'react-router-dom';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {userDataFetch} from \"../redux/actions/user\";\r\nimport { useAlert } from 'react-alert'\r\n\r\n\r\nfunction RegisterPage () {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const { language } = useSelector(({user}) => user.userData)\r\n\r\n    const alert = useAlert()\r\n\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const [form, setForm] = useState({\r\n        telephone: '', name: '', email: '', password: '', language: language\r\n    })\r\n\r\n    const [confirmPass, setConfirmPass] = useState('');\r\n\r\n    const changeHandler = event => {\r\n        setForm({ ...form, [event.target.name]: event.target.value })\r\n    }\r\n\r\n    const submit = event => {\r\n        event.preventDefault()\r\n        setLoading(true)\r\n        console.log(confirmPass)\r\n        if (confirmPass !== form.password) {\r\n            alert.show('Passwords not matched')\r\n            setLoading(false)\r\n        }\r\n        dispatch(userDataFetch(form,'register')).then(res => {\r\n            if (res) {\r\n                setLoading(false)\r\n                alert.show(res);\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Helmet>\r\n                <title>{translate[language].title}</title>\r\n            </Helmet>\r\n            <div className=\"header bg-overlay\"/>\r\n            <div className=\"all-screen\">\r\n                <div className=\"main-box\">\r\n                    <form className=\"formLogin\" onSubmit={submit}>\r\n                        {loading\r\n                            ?\r\n                                <h1>{translate[language].loading}</h1>\r\n                            :\r\n                                <h1>{translate[language].title}</h1>\r\n                        }\r\n                        <div className=\"text_field\" >\r\n                            <input type=\"tel\" id=\"telephone\" name=\"telephone\" required onChange={changeHandler}/>\r\n                            <span/>\r\n                            <label htmlFor=\"telephone\">{translate[language].telephone}</label>\r\n                        </div>\r\n                        <div className=\"text_field\">\r\n                            <input type=\"tel\" id=\"name\" name=\"name\" required onChange={changeHandler}/>\r\n                            <span/>\r\n                            <label htmlFor=\"name\">{translate[language].nameSurname}</label>\r\n                        </div>\r\n                        <div className=\"text_field\">\r\n                            <input type=\"email\" id=\"email\" name=\"email\" required onChange={changeHandler}/>\r\n                            <span/>\r\n                            <label htmlFor=\"email\">E-mail</label>\r\n                        </div>\r\n                        <div className=\"text_field\">\r\n                            <input type=\"password\" id=\"password\" name=\"password\" minLength=\"6\" required onChange={changeHandler}/>\r\n                            <span/>\r\n                            <label htmlFor=\"pass\">{translate[language].password}</label>\r\n                        </div>\r\n                        <div className=\"text_field\">\r\n                            <input type=\"password\" id=\"confirm_password\" name=\"password\" minLength=\"6\" required onChange={(e) => {setConfirmPass(e.target.value)}}/>\r\n                            <span/>\r\n                            <label htmlFor=\"pass\">{translate[language].confirmPassword}</label>\r\n                        </div>\r\n                        <button type=\"submit\">{translate[language].signUp}</button>\r\n                        <Link to=\"/login\">{translate[language].login}</Link>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RegisterPage;\r\n\r\nconst translate = {\r\n    LV: {\r\n        title: \"Reģistrācija\",\r\n        loading: \"Ielādēšana\",\r\n        password: \"Parole\",\r\n        login: \"Jau ir reģistrēts? Pieslēgties!\",\r\n        signUp: \"REĢISTRĒTIES\",\r\n        telephone: \"Telefons\",\r\n        nameSurname: \"Vārds Uzvārds\",\r\n        confirmPassword: \"Apstipriniet paroli\",\r\n        ok: \"OK\",\r\n        cancel: \"ATCELT\",\r\n        error: \"Kļūda\"\r\n    },\r\n    RU: {\r\n        title: \"Регистрация\",\r\n        loading: \"Загрузка\",\r\n        password: \"Пароль\",\r\n        login: \"Уже зарегистрирован? Войти!\",\r\n        signUp: \"ЗАРЕГИСТРИРОВАТЬСЯ\",\r\n        telephone: \"Телефон\",\r\n        nameSurname: \"Имя Фамилия\",\r\n        confirmPassword: \"Подтвердите пароль\",\r\n        ok: \"OK\",\r\n        cancel: \"ОТМЕНА\",\r\n        error: \"Ошибка\"\r\n    },\r\n    EN: {\r\n        title: \"Registration\",\r\n        loading: \"Loading\",\r\n        password: \"Password\",\r\n        login: \"Already registered? Log in!\",\r\n        signUp: \"REGISTER\",\r\n        telephone: \"Telephone\",\r\n        nameSurname: \"Name Surname\",\r\n        confirmPassword: \"Confirm password\",\r\n        ok: \"OK\",\r\n        cancel: \"CANCEL\",\r\n        error: \"Error\"\r\n    }\r\n}","import React from \"react\"\r\n\r\nconst LoadingPage = () => {\r\n\r\n    return (\r\n        <div className=\"sk-circle\">\r\n            <div className=\"sk-circle1 sk-child\"/>\r\n            <div className=\"sk-circle2 sk-child\"/>\r\n            <div className=\"sk-circle3 sk-child\"/>\r\n            <div className=\"sk-circle4 sk-child\"/>\r\n            <div className=\"sk-circle5 sk-child\"/>\r\n            <div className=\"sk-circle6 sk-child\"/>\r\n            <div className=\"sk-circle7 sk-child\"/>\r\n            <div className=\"sk-circle8 sk-child\"/>\r\n            <div className=\"sk-circle9 sk-child\"/>\r\n            <div className=\"sk-circle10 sk-child\"/>\r\n            <div className=\"sk-circle11 sk-child\"/>\r\n            <div className=\"sk-circle12 sk-child\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoadingPage;","import React, {useState, useEffect, useRef} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport { Helmet } from 'react-helmet';\r\nimport {BackGround, Profile} from \"../Components\";\r\nimport axios from \"axios\";\r\nimport {useAlert} from \"react-alert\";\r\nimport {Link} from 'react-router-dom'\r\nimport {changeUserLanguage, logoutUser} from \"../redux/actions/user\";\r\nimport {Image} from \"cloudinary-react\";\r\n\r\n\r\nfunction AdminPage () {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const {token, photo, language} = useSelector(({user}) => user.userData)\r\n\r\n    const alert = useAlert()\r\n\r\n    const imageInput = useRef()\r\n\r\n    const [languageChoose, setLanguageChoose] = useState(false)\r\n    const [telephone, setTelephone] = useState('')\r\n    const [activeDialog, setActiveDialog] = useState('')\r\n    const [users, setUsers] = useState([])\r\n    const [user, setUser] = useState({})\r\n\r\n\r\n    const [loadingUser, setLoadingUsers] = useState(false)\r\n    const [loadingInfo, setLoadingInfo] = useState(false)\r\n    const [loadingPhoto, setLoadingPhoto] = useState(false)\r\n\r\n    const [languageTMP, setLanguageTMP] = useState(language)\r\n\r\n    const [settingsPopUp, setSettingsPopUp] = useState(false)\r\n\r\n    const [inputName, setInputName] = useState(true)\r\n    const [inputTelephone, setInputTelephone] = useState(true)\r\n    const [inputAbout, setInputAbout] = useState(true)\r\n    const [inputEmail, setInputEmail] = useState(true)\r\n\r\n    const [nameInput, setNameInput] = useState('')\r\n    const [telephoneInput, setTelephoneInput] = useState('')\r\n    const [emailInput, setEmailInput] = useState('')\r\n    const [aboutInput, setAboutInput] = useState('')\r\n\r\n    const popUpRef = useRef();\r\n    const settingMenuRef = useRef();\r\n\r\n    const handleOutsideClick = (e) => {\r\n        if (!e.composedPath().includes(popUpRef.current) && !e.composedPath().includes(settingMenuRef.current)) {\r\n            setSettingsPopUp(false);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        document.body.addEventListener('click', handleOutsideClick)\r\n\r\n        return () => {\r\n            document.body.removeEventListener('click', handleOutsideClick);\r\n        };\r\n    }, [])\r\n\r\n\r\n    useEffect(() => {\r\n        if (telephone.length > 1) {\r\n            setLoadingUsers(true)\r\n            axios.post(\"/api/user/admin/find\", {telephone: telephone}, { headers: { Authorization: `Bearer ${token}` }}).then(res => {\r\n                setLoadingUsers(false)\r\n                setUsers(res.data)\r\n            }, () => {\r\n                alert.show(translate[language].error)\r\n            })\r\n        } else if (telephone.length === 0) {\r\n            setUsers([]);\r\n        }\r\n    }, [telephone])\r\n\r\n    useEffect(() => {\r\n        if (activeDialog) {\r\n            setLoadingInfo(true)\r\n            axios.get(`/api/user/find/${activeDialog}`, { headers: { Authorization: `Bearer ${token}` }}).then(res => {\r\n                console.log(res.data)\r\n                setUser(res.data)\r\n                setNameInput(res.data.name)\r\n                setTelephoneInput(res.data.telephone)\r\n                setAboutInput(res.data.description)\r\n                setEmailInput(res.data.email)\r\n                setLoadingInfo(false)\r\n            }, () => {\r\n                alert.show(translate[language].error)\r\n            })\r\n        }\r\n        setInputName(true)\r\n        setInputTelephone(true)\r\n        setInputEmail(true)\r\n        setInputAbout(true)\r\n    }, [activeDialog])\r\n\r\n    const changeLanguage = () => {\r\n        if (language === languageTMP)\r\n            return\r\n        axios.post(\"/api/user/updateLanguage\", { language: languageTMP}, { headers: { Authorization: `Bearer ${token}` }}).then((res) => {\r\n            dispatch(changeUserLanguage(res.data.language))\r\n            alert.success(translate[languageTMP].languageBox.notification)\r\n            setLanguageChoose(false)\r\n        }, (err) => {\r\n            if (err.response.status === 401) {\r\n                alert.show(translate[language].errorAuth)\r\n                setTimeout(() => {\r\n                    dispatch(logoutUser())\r\n                }, 1500)\r\n            } else {\r\n                alert.show(translate[language].error)\r\n            }\r\n        })\r\n    }\r\n\r\n    const changeImage = (e) => {\r\n        const file = e.target.files[0]\r\n        if (!file)\r\n            return false\r\n        setLoadingPhoto(true)\r\n        const reader = new FileReader()\r\n        reader.readAsDataURL(file)\r\n        reader.onloadend = () => {\r\n            uploadImage(reader.result)\r\n        };\r\n\r\n    }\r\n\r\n    const uploadImage = async (base64EncodedImage) => {\r\n        axios.post('/api/user/admin/updateImage', {img: base64EncodedImage, id: user._id}, { headers: { Authorization: `Bearer ${token}` }}).then((res) => {\r\n            setUser({...user, photo: res.data.photo})\r\n            alert.success(translate[language].photoWasChanged)\r\n            setLoadingPhoto(false)\r\n        }, (err) => {\r\n            if (err.response.status === 401) {\r\n                alert.show(translate[language].errorAuth)\r\n                setTimeout(() => {\r\n                    dispatch(logoutUser())\r\n                }, 1500)\r\n            } else {\r\n                alert.show(translate[language].error)\r\n                setLoadingPhoto(false)\r\n            }\r\n        })\r\n    };\r\n\r\n    const changeName = (id) => {\r\n        setInputName(true)\r\n        if (nameInput !== user.name) {\r\n            axios.post('/api/user/admin/updateName', {name: nameInput, id: id}, { headers: { Authorization: `Bearer ${token}` }}).then(() => {\r\n                alert.success(translate[language].nameWasChanged)\r\n                setUser({...user, name: nameInput})\r\n            }, (err) => {\r\n                if (err.response.status === 401) {\r\n                    alert.show(translate[language].errorAuth)\r\n                    setTimeout(() => {\r\n                        dispatch(logoutUser())\r\n                    }, 1500)\r\n                } else {\r\n                    alert.show(translate[language].namCanNotBeEmpty)\r\n                    const inName = document.getElementById('nameInput')\r\n                    inName.value = user.name\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    const changeTelephone = (id) => {\r\n        setInputTelephone(true)\r\n        if (telephoneInput !== user.telephone) {\r\n            axios.post('/api/user/admin/updateTelephone', {telephone: telephoneInput, id: id, language: language}, { headers: { Authorization: `Bearer ${token}` }}).then(() => {\r\n                alert.success(translate[language].telephoneWasChanged)\r\n                setUser({...user, telephone: telephoneInput})\r\n            }, (err) => {\r\n                if (err.response.status === 401) {\r\n                    alert.show(translate[language].errorAuth)\r\n                    setTimeout(() => {\r\n                        dispatch(logoutUser())\r\n                    }, 1500)\r\n                } else if (err.response.status === 400) {\r\n                    alert.show(err.response.data.message)\r\n                } else if (err.response.status === 500) {\r\n                    alert.show(translate[language].errorUniqueTel)\r\n                } else {\r\n                    alert.show(translate[language].error)\r\n                }\r\n                const inName = document.getElementById('telephoneInput')\r\n                inName.value = user.telephone\r\n            })\r\n        }\r\n    }\r\n\r\n    const changeEmail = (id) => {\r\n        setInputEmail(true)\r\n        if (emailInput !== user.email) {\r\n            axios.post('/api/user/admin/updateEmail', {email: emailInput, id: id, language: language}, { headers: { Authorization: `Bearer ${token}` }}).then(() => {\r\n                alert.success(translate[language].emailWasChanged)\r\n                setUser({...user, email: emailInput})\r\n            }, (err) => {\r\n                if (err.response.status === 401) {\r\n                    alert.show(translate[language].errorAuth)\r\n                    setTimeout(() => {\r\n                        dispatch(logoutUser())\r\n                    }, 1500)\r\n                } else if (err.response.status === 400) {\r\n                    alert.show(err.response.data.message)\r\n                } else if (err.response.status === 500) {\r\n                    alert.show(translate[language].errorUniqueEm)\r\n                } else {\r\n                    alert.show(translate[language].error)\r\n                }\r\n                const inName = document.getElementById('emailInput')\r\n                inName.value = user.email\r\n            })\r\n        }\r\n    }\r\n\r\n    const changeAbout = (id) => {\r\n        setInputAbout(true)\r\n        if (aboutInput !== user.description) {\r\n            axios.post('/api/user/admin/updateAbout', {about: aboutInput, id: id}, { headers: { Authorization: `Bearer ${token}` }}).then(() => {\r\n                alert.success(translate[language].aboutWasChanged)\r\n                setUser({...user, description: aboutInput})\r\n            }, (err) => {\r\n                if (err.response.status === 401) {\r\n                    alert.show(translate[language].errorAuth)\r\n                    setTimeout(() => {\r\n                        dispatch(logoutUser())\r\n                    }, 1500)\r\n                } else {\r\n                    alert.show(translate[language].error)\r\n                    const inAbout = document.getElementById('aboutInput')\r\n                    inAbout.value = user.description\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Helmet>\r\n                <title>Live Chat | Admin</title>\r\n            </Helmet>\r\n            <BackGround/>\r\n            { languageChoose &&\r\n            <div className=\"language\">\r\n                <div className=\"rel-block\">\r\n                    <div className=\"box-choose\">\r\n                        <div className=\"heading\">{translate[language].languageBox.heading}</div>\r\n                        <div className=\"choose\">\r\n                            <label>\r\n                                <input name=\"lan\" value=\"LV\" onChange={(e) => {setLanguageTMP(e.target.value)}} type=\"radio\" defaultChecked={language === \"LV\"}/>\r\n                                LV\r\n                            </label>\r\n                            <label>\r\n                                <input name=\"lan\" value=\"RU\" onChange={(e) => {setLanguageTMP(e.target.value)}} type=\"radio\" defaultChecked={language === \"RU\"}/>\r\n                                RU\r\n                            </label>\r\n                            <label>\r\n                                <input name=\"lan\" value=\"EN\" onChange={(e) => {setLanguageTMP(e.target.value)}} type=\"radio\" defaultChecked={language === \"EN\"}/>\r\n                                EN\r\n                            </label>\r\n                        </div>\r\n                        <div className=\"bottom\">\r\n                            <div className=\"ok\" onClick={changeLanguage}>\r\n                                {translate[language].ok}\r\n                            </div>\r\n                            <div className=\"cancel\" onClick={() => {setLanguageChoose(false)}}>\r\n                                {translate[language].cancel}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            }\r\n            <div className=\"all-screen\">\r\n                <div className=\"main-box\">\r\n                    <div className=\"whats-app\">\r\n                        <div className=\"side-bar\">\r\n                            <div className=\"box-header admin\">\r\n                                <Image cloudName=\"artemijss\" publicId={photo ? photo : \"tkixqcinuntqmalr2dej\"}/>\r\n                                <div className=\"settings\">\r\n                                    <svg ref={settingMenuRef} className={settingsPopUp ? \"active\" : \"\"} onClick={() => {setSettingsPopUp(!settingsPopUp)}} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\"\r\n                                         height=\"24\">\r\n                                        <path fill=\"currentColor\"\r\n                                              d=\"M12 7a2 2 0 1 0-.001-4.001A2 2 0 0 0 12 7zm0 2a2 2 0 1 0-.001 3.999A2 2 0 0 0 12 9zm0 6a2 2 0 1 0-.001 3.999A2 2 0 0 0 12 15z\"/>\r\n                                    </svg>\r\n                                    {\r\n                                        settingsPopUp &&\r\n                                        <div className=\"settingsPopUp\" ref={popUpRef}>\r\n                                            <div className=\"settingsLink\" onClick={() => {setLanguageChoose(true); setSettingsPopUp(false)}}><div>{translate[language].language}</div></div>\r\n                                            <div className=\"settingsLink\" onClick={() => {dispatch(logoutUser())}}><div>{translate[language].logout}</div></div>\r\n                                        </div>\r\n                                    }\r\n                                </div>\r\n                                <Link to=\"/\">To Chat</Link>\r\n                            </div>\r\n                            <div className=\"search\">\r\n                                <div className=\"box\">\r\n                                    <div className=\"input-box\">\r\n                                        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\"><path fill=\"currentColor\" d=\"M15.009 13.805h-.636l-.22-.219a5.184 5.184 0 0 0 1.256-3.386 5.207 5.207 0 1 0-5.207 5.208 5.183 5.183 0 0 0 3.385-1.255l.221.22v.635l4.004 3.999 1.194-1.195-3.997-4.007zm-4.808 0a3.605 3.605 0 1 1 0-7.21 3.605 3.605 0 0 1 0 7.21z\"/></svg>\r\n                                        <input onChange={(e) => {setTelephone(e.target.value)}} type=\"text\" placeholder={translate[language].inputPlaceholderSearch}/>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            { loadingUser &&\r\n                                <div className=\"loadingChatBlock admin\">\r\n                                    <div className=\"spinner spinner-1\"/>\r\n                                </div>\r\n                            }\r\n                            { users.length > 0 && !loadingUser &&\r\n                                users.map(obj => {\r\n                                    return (\r\n                                        <div onClick={() => {setActiveDialog(obj._id)}} className={activeDialog === obj._id ? \"dialog active\" : \"dialog\"} key={obj._id}>\r\n                                            <Image cloudName=\"artemijss\" publicId={obj.photo ? obj.photo : \"tkixqcinuntqmalr2dej\"}/>\r\n                                            <div className=\"details\">\r\n                                                <div className=\"dialog-info1\">\r\n                                                    <div className={`dialog-name big-text`}>\r\n                                                        {obj.name} {obj.telephone}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    )\r\n                                })\r\n                            }\r\n                            { users.length === 0 && !loadingUser &&\r\n                                <div>NOPE</div>\r\n                            }\r\n                        </div>\r\n                        {activeDialog &&\r\n                            <div className=\"userInfo\">\r\n                                <div className=\"box-header\">\r\n                                    <svg onClick={() => setActiveDialog('')} xmlns=\"http://www.w3.org/2000/svg\"\r\n                                         viewBox=\"0 0 24 24\" width=\"24\" height=\"24\">\r\n                                        <path fill=\"currentColor\"\r\n                                              d=\"M19.1 17.2l-5.3-5.3 5.3-5.3-1.8-1.8-5.3 5.4-5.3-5.3-1.8 1.7 5.3 5.3-5.3 5.3L6.7 19l5.3-5.3 5.3 5.3 1.8-1.8z\"/>\r\n                                    </svg>\r\n                                    <div className=\"title\">{translate[language].profileInfo}</div>\r\n                                </div>\r\n                                {!loadingInfo &&\r\n                                <>\r\n                                    <div className=\"user\">\r\n                                        <div className=\"profile\">\r\n                                            <div className=\"image admin\">\r\n                                                <input ref={imageInput} onChange={changeImage} style={{display: \"none\"}} type=\"file\" accept=\"image/*\"/>\r\n                                                <div onClick={() => imageInput.current.click()} className=\"changePhoto\">\r\n                                                    <span>{translate[language].changePhoto}</span>\r\n                                                </div>\r\n\r\n                                                <Image cloudName=\"artemijss\" publicId={user.photo ? user.photo : \"tkixqcinuntqmalr2dej\"}/>\r\n                                                { loadingPhoto &&\r\n                                                <div className=\"loadingChatBlock\">\r\n                                                    <div className=\"spinner spinner-1\"/>\r\n                                                </div>\r\n                                                }\r\n                                            </div>\r\n                                            <div className=\"infoA\">\r\n                                                {\r\n                                                    user.status ? translate[language].online : translate[language].offline\r\n                                                }\r\n                                            </div>\r\n                                            <div className=\"name\">\r\n                                                <span>{translate[language].name}</span>\r\n                                                <div className={inputName ? \"update\" : \" update borderBottom\"}>\r\n                                                    <input id=\"nameInput\" onChange={(e) => {setNameInput(e.target.value)}} type=\"text\" defaultValue={user.name} readOnly={inputName}/>\r\n                                                    { inputName\r\n                                                        ?\r\n                                                        <div onClick={() => {setInputName(false)}}>\r\n                                                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\"><path fill=\"currentColor\" d=\"M3.95 16.7v3.4h3.4l9.8-9.9-3.4-3.4-9.8 9.9zm15.8-9.1c.4-.4.4-.9 0-1.3l-2.1-2.1c-.4-.4-.9-.4-1.3 0l-1.6 1.6 3.4 3.4 1.6-1.6z\"/></svg>\r\n                                                        </div>\r\n                                                        :\r\n                                                        <div onClick={() => changeName(user._id)}>\r\n                                                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\"><path fill=\"currentColor\" d=\"M9 17.2l-4-4-1.4 1.3L9 19.9 20.4 8.5 19 7.1 9 17.2z\"/></svg>\r\n                                                        </div>\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"about\">\r\n                                                <span>{translate[language].telephone}</span>\r\n                                                <div className={inputTelephone ? \"update\" : \" update borderBottom\"}>\r\n                                                    <input id=\"telephoneInput\" onChange={(e) => {setTelephoneInput(e.target.value)}} type=\"text\" defaultValue={user.telephone} placeholder={translate[language].telephone} readOnly={inputTelephone}/>\r\n                                                    { inputTelephone\r\n                                                        ?\r\n                                                        <div onClick={() => {setInputTelephone(false)}}>\r\n                                                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\"><path fill=\"currentColor\" d=\"M3.95 16.7v3.4h3.4l9.8-9.9-3.4-3.4-9.8 9.9zm15.8-9.1c.4-.4.4-.9 0-1.3l-2.1-2.1c-.4-.4-.9-.4-1.3 0l-1.6 1.6 3.4 3.4 1.6-1.6z\"/></svg>\r\n                                                        </div>\r\n                                                        :\r\n                                                        <div onClick={() => {changeTelephone(user._id)}}>\r\n                                                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\"><path fill=\"currentColor\" d=\"M9 17.2l-4-4-1.4 1.3L9 19.9 20.4 8.5 19 7.1 9 17.2z\"/></svg>\r\n                                                        </div>\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"about\">\r\n                                                <span>{translate[language].email}</span>\r\n                                                <div className={inputEmail ? \"update\" : \" update borderBottom\"}>\r\n                                                    <input id=\"emailInput\" onChange={(e) => {setEmailInput(e.target.value)}} type=\"text\" defaultValue={user.email} placeholder={translate[language].email} readOnly={inputEmail}/>\r\n                                                    { inputEmail\r\n                                                        ?\r\n                                                        <div onClick={() => {setInputEmail(false)}}>\r\n                                                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\"><path fill=\"currentColor\" d=\"M3.95 16.7v3.4h3.4l9.8-9.9-3.4-3.4-9.8 9.9zm15.8-9.1c.4-.4.4-.9 0-1.3l-2.1-2.1c-.4-.4-.9-.4-1.3 0l-1.6 1.6 3.4 3.4 1.6-1.6z\"/></svg>\r\n                                                        </div>\r\n                                                        :\r\n                                                        <div onClick={() => {changeEmail(user._id)}}>\r\n                                                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\"><path fill=\"currentColor\" d=\"M9 17.2l-4-4-1.4 1.3L9 19.9 20.4 8.5 19 7.1 9 17.2z\"/></svg>\r\n                                                        </div>\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"about\">\r\n                                                <span>{translate[language].about}</span>\r\n                                                <div className={inputAbout ? \"update\" : \" update borderBottom\"}>\r\n                                                    <input id=\"aboutInput\" onChange={(e) => {setAboutInput(e.target.value)}} type=\"text\" defaultValue={user.description} placeholder={translate[language].aboutPlaceholder} readOnly={inputAbout}/>\r\n                                                    { inputAbout\r\n                                                        ?\r\n                                                        <div onClick={() => {setInputAbout(false)}}>\r\n                                                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\"><path fill=\"currentColor\" d=\"M3.95 16.7v3.4h3.4l9.8-9.9-3.4-3.4-9.8 9.9zm15.8-9.1c.4-.4.4-.9 0-1.3l-2.1-2.1c-.4-.4-.9-.4-1.3 0l-1.6 1.6 3.4 3.4 1.6-1.6z\"/></svg>\r\n                                                        </div>\r\n                                                        :\r\n                                                        <div onClick={() => {changeAbout(user._id)}}>\r\n                                                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\"><path fill=\"currentColor\" d=\"M9 17.2l-4-4-1.4 1.3L9 19.9 20.4 8.5 19 7.1 9 17.2z\"/></svg>\r\n                                                        </div>\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </>\r\n                                }\r\n                                {loadingInfo &&\r\n                                <div className=\"loadingChatBlock\">\r\n                                    <div className=\"spinner spinner-1\"/>\r\n                                </div>\r\n                                }\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AdminPage;\r\n\r\nconst translate = {\r\n    LV: {\r\n        languageBox: {\r\n            notification: \"Valoda it nomainīta\",\r\n            heading: \"Izvēlieties valodu\"\r\n        },\r\n        inputPlaceholderSearch: \"Meklēt cilvēku pēs telefona\",\r\n        newChat: \"Jauna tērzēšana\",\r\n        profile: \"Profils\",\r\n        language: \"Valoda\",\r\n        logout: \"Iziet\",\r\n        profileInfo: \"Profila informācija\",\r\n        addToFriends: \"Pievienot draugiem\",\r\n        deleteChat: \"Dzēst tērzēšanu\",\r\n        sure: \"Vai jūs to tiešam gribat?\",\r\n        aboutWasChanged: \"Apraksts tika mainīts\",\r\n        nameWasChanged: \"Vārds/Uzvārds tika mainīts\",\r\n        emailWasChanged: \"Email tika mainīts\",\r\n        telephoneWasChanged: \"Telefons tika mainīts\",\r\n        namCanNotBeEmpty: \"Vārds nevar būt tukšs\",\r\n        photoWasChanged: \"Foto tika mainīts\",\r\n        changePhoto: \"Mainīt bildi\",\r\n        name: \"Vārds Uzvārds\",\r\n        about: \"Apraksts\",\r\n        telephone: \"Tālrunis\",\r\n        email: \"Email\",\r\n        deleted: \"DZĒSTS\",\r\n        online: \"online\",\r\n        offline: \"offline\",\r\n        enterMessage: \"Ievadiet ziņojumu\",\r\n        ok: \"OK\",\r\n        cancel: \"ATCELT\",\r\n        error: \"Kļūda\",\r\n        errorMsg: \"Sūtot ziņojumu, radās kļūda\",\r\n        errorMsgEnter: \"Ievadiet ziņojuma tekstu\",\r\n        errorMsgDel: \"Šī tērzēšana ir izdzēsta, un jūs nevarat nosūtīt ziņojumus\",\r\n        errorAuth: \"Autorizācijas periods ir beidzies\",\r\n        errorUniqueTel: \"Lietotājs ar šo telefonu jau ir reģistrēts\",\r\n        errorUniqueEm: \"Lietotājs ar šo e-pastu jau ir reģistrēts\"\r\n    },\r\n    RU: {\r\n        languageBox: {\r\n            notification: \"Язык успешно поменян\",\r\n            heading: \"Выберите язык\"\r\n        },\r\n        inputPlaceholderSearch: \"Поиск человека по телефону\",\r\n        newChat: \"Новый чат\",\r\n        profile: \"Профиль\",\r\n        language: \"Язык\",\r\n        logout: \"Выйти\",\r\n        profileInfo: \"Информация о профиле\",\r\n        addToFriends: \"Добавить в друзья\",\r\n        deleteChat: \"Удалить Чат\",\r\n        sure: \"Вы уверены?\",\r\n        aboutWasChanged: \"Описание было изменено\",\r\n        nameWasChanged: \"Имя/Фамилия была изменена\",\r\n        telephoneWasChanged: \"Телефон был изменен\",\r\n        emailWasChanged: \"Email был изменен\",\r\n        namCanNotBeEmpty: \"Имя не может быть пустым\",\r\n        photoWasChanged: \"Фотография была изменена\",\r\n        changePhoto: \"Изменить фотографию\",\r\n        name: \"Имя Фамилия\",\r\n        about: \"Описание\",\r\n        telephone: \"Телефон\",\r\n        email: \"Email\",\r\n        deleted: \"УДАЛЕН\",\r\n        online: \"в сети\",\r\n        offline: \"не в сети\",\r\n        enterMessage: \"Введите сообщение\",\r\n        ok: \"OK\",\r\n        cancel: \"ОТМЕНА\",\r\n        error: \"Ошибка\",\r\n        errorMsg: \"Ошибка при отправке сообщения\",\r\n        errorMsgEnter: \"Введите текст сообщения\",\r\n        errorMsgDel: \"ЭТОТ ЧАТ УДАЛЕН ВЫ НЕ МОЖЕТЕ ОТПРАВЛЯТЬ СООБЩЕНИЯ\",\r\n        errorAuth: \"Истек срок авторизации\",\r\n        errorUniqueTel: \"Пользователь с этим телефоном уже зарегистрирован\",\r\n        errorUniqueEm: \"Пользователь с этой почтой уже зарегистрирован\"\r\n    },\r\n    EN: {\r\n        languageBox: {\r\n            notification: \"Language changed\",\r\n            heading: \"Select a language\"\r\n        },\r\n        inputPlaceholderSearch: \"Search person by phone\",\r\n        newChat: \"New Chat\",\r\n        profile: \"Profile\",\r\n        language: \"Language\",\r\n        logout: \"Logout\",\r\n        profileInfo: \"Profile Info\",\r\n        addToFriends: \"Add to friends\",\r\n        deleteChat: \"Delete Chat\",\r\n        sure: \"Are you sure?\",\r\n        aboutWasChanged: \"Description was changed\",\r\n        nameWasChanged: \"Name/Surname was changed\",\r\n        telephoneWasChanged: \"Telephone was changed\",\r\n        emailWasChanged: \"Email was changed\",\r\n        namCanNotBeEmpty: \"Name cannot be empty\",\r\n        photoWasChanged: \"Photo was changed\",\r\n        changePhoto: \"Change photo\",\r\n        name: \"Name Surname\",\r\n        about: \"About\",\r\n        telephone: \"Telephone\",\r\n        email: \"Email\",\r\n        deleted: \"DELETED\",\r\n        online: \"online\",\r\n        offline: \"offline\",\r\n        enterMessage: \"Enter a message\",\r\n        ok: \"OK\",\r\n        cancel: \"CANCEL\",\r\n        error: \"Error\",\r\n        errorMsg: \"Error with sending message\",\r\n        errorMsgEnter: \"Enter the message text\",\r\n        errorMsgDel: \"THIS CHAT IS DELETED YOU CANT SEND MESSAGES\",\r\n        errorAuth: \"Authorization period expired\",\r\n        errorUniqueTel: \"User with this telephone is already registered\",\r\n        errorUniqueEm: \"User with this email is already registered\"\r\n    }\r\n}","import './App.css';\nimport {useRoutes} from \"./routes\";\nimport {BrowserRouter as Router} from \"react-router-dom\";\nimport {useEffect} from \"react\";\nimport {getProfileFetch} from \"./redux/actions/user\";\nimport {useDispatch} from \"react-redux\";\n\nfunction App() {\n    const routes = useRoutes()\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        dispatch(getProfileFetch())\n    }, [])\n\n    return (\n        <Router>\n            {routes}\n        </Router>\n    );\n}\n\nexport default App;\n","import React from 'react';\r\nimport {Switch, Route, Redirect} from 'react-router-dom'\r\n\r\nimport {MainPage, AuthPage, RegisterPage, LoadingPage, AdminPage} from \"./Pages\";\r\n\r\nimport {useSelector} from \"react-redux\";\r\n\r\n\r\nexport const useRoutes = () => {\r\n\r\n    const {userData} = useSelector(({ user }) => user);\r\n    const {userLoading} = useSelector(({ loading }) => loading);\r\n\r\n    if (userLoading) {\r\n        return (\r\n            <Switch>\r\n                <Route path=\"/\" exact>\r\n                    <LoadingPage/>\r\n                </Route>\r\n                <Redirect to=\"/\"/>\r\n            </Switch>\r\n        )\r\n    } else {\r\n        if (userData.userId) {\r\n            return (\r\n                <Switch>\r\n                    <Route path=\"/\" exact>\r\n                        <MainPage/>\r\n                    </Route>\r\n                    {\r\n                        userData.role === \"admin\" &&\r\n                        <Route path=\"/admin\" exact>\r\n                            <AdminPage/>\r\n                        </Route>\r\n                    }\r\n                    <Redirect to=\"/\"/>\r\n                </Switch>\r\n            )\r\n        } else {\r\n            return (\r\n                <Switch>\r\n                    <Route path=\"/login\" exact>\r\n                        <AuthPage/>\r\n                    </Route>\r\n                    <Route path=\"/registration\" exact>\r\n                        <RegisterPage/>\r\n                    </Route>\r\n                    <Redirect to=\"/login\"/>\r\n                </Switch>\r\n            )\r\n        }\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nvar BaseIcon = function BaseIcon(_ref) {\r\n    var color = _ref.color,\r\n        _ref$pushRight = _ref.pushRight,\r\n        pushRight = _ref$pushRight === undefined ? true : _ref$pushRight,\r\n        children = _ref.children;\r\n    return React.createElement(\r\n        'svg',\r\n        {\r\n            xmlns: 'http://www.w3.org/2000/svg',\r\n            width: '24',\r\n            height: '24',\r\n            viewBox: '0 0 24 24',\r\n            fill: 'none',\r\n            stroke: color,\r\n            strokeWidth: '2',\r\n            strokeLinecap: 'round',\r\n            strokeLinejoin: 'round',\r\n            style: { marginRight: pushRight ? '20px' : '0', minWidth: 24 }\r\n        },\r\n        children\r\n    );\r\n};\r\n\r\nvar InfoIcon = function InfoIcon() {\r\n    return React.createElement(\r\n        BaseIcon,\r\n        { color: '#e93333' },\r\n        React.createElement('circle', { cx: '12', cy: '12', r: '10' }),\r\n        React.createElement('line', { x1: '12', y1: '16', x2: '12', y2: '12' }),\r\n        React.createElement('line', { x1: '12', y1: '8', x2: '12', y2: '8' })\r\n    );\r\n};\r\n\r\nvar SuccessIcon = function SuccessIcon() {\r\n    return React.createElement(\r\n        BaseIcon,\r\n        { color: '#31B404' },\r\n        React.createElement('path', { d: 'M22 11.08V12a10 10 0 1 1-5.93-9.14' }),\r\n        React.createElement('polyline', { points: '22 4 12 14.01 9 11.01' })\r\n    );\r\n};\r\n\r\nvar ErrorIcon = function ErrorIcon() {\r\n    return React.createElement(\r\n        BaseIcon,\r\n        { color: '#FF0040' },\r\n        React.createElement('circle', { cx: '12', cy: '12', r: '10' }),\r\n        React.createElement('line', { x1: '12', y1: '8', x2: '12', y2: '12' }),\r\n        React.createElement('line', { x1: '12', y1: '16', x2: '12', y2: '16' })\r\n    );\r\n};\r\n\r\nvar CloseIcon = function CloseIcon() {\r\n    return React.createElement(\r\n        BaseIcon,\r\n        { color: '#FFFFFF', pushRight: false },\r\n        React.createElement('line', { x1: '18', y1: '6', x2: '6', y2: '18' }),\r\n        React.createElement('line', { x1: '6', y1: '6', x2: '18', y2: '18' })\r\n    );\r\n};\r\n\r\nvar _extends = Object.assign || function (target) {\r\n    for (var i = 1; i < arguments.length; i++) {\r\n        var source = arguments[i];\r\n\r\n        for (var key in source) {\r\n            if (Object.prototype.hasOwnProperty.call(source, key)) {\r\n                target[key] = source[key];\r\n            }\r\n        }\r\n    }\r\n\r\n    return target;\r\n};\r\n\r\nvar alertStyle = {\r\n    backgroundColor: '#2f9688',\r\n    color: 'white',\r\n    padding: '10px',\r\n    textTransform: 'uppercase',\r\n    borderRadius: '3px',\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    boxShadow: '0px 2px 2px 2px rgba(0, 0, 0, 0.03)',\r\n    fontFamily: 'Arial',\r\n    width: '300px',\r\n    boxSizing: 'border-box'\r\n};\r\n\r\nvar buttonStyle = {\r\n    marginLeft: '20px',\r\n    border: 'none',\r\n    backgroundColor: 'transparent',\r\n    cursor: 'pointer',\r\n    color: '#FFFFFF'\r\n};\r\n\r\nvar alertTemplate = function alertTemplate(_ref) {\r\n    var message = _ref.message,\r\n        options = _ref.options,\r\n        style = _ref.style,\r\n        close = _ref.close;\r\n\r\n    return React.createElement(\r\n        'div',\r\n        { style: _extends({}, alertStyle, style) },\r\n        options.type === 'info' && React.createElement(InfoIcon, null),\r\n        options.type === 'success' && React.createElement(SuccessIcon, null),\r\n        options.type === 'error' && React.createElement(ErrorIcon, null),\r\n        React.createElement(\r\n            'span',\r\n            { style: { flex: 2 } },\r\n            message\r\n        ),\r\n        React.createElement(\r\n            'button',\r\n            { onClick: close, style: buttonStyle },\r\n            React.createElement(CloseIcon, null)\r\n        )\r\n    );\r\n};\r\n\r\nexport default alertTemplate;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {Provider} from 'react-redux'\nimport store from \"./redux/store\";\nimport { transitions, positions, Provider as AlertProvider } from 'react-alert';\nimport AlertTemplate from './Components/alertTemlate';\n\n// optional configuration\nconst options = {\n    // you can also just use 'bottom center'\n    position: positions.TOP_CENTER,\n    timeout: 5000,\n    offset: '30px',\n    background: '#2f9688',\n    // you can also just use 'scale'\n    transition: transitions.SCALE\n}\n\nReactDOM.render(\n  <React.StrictMode>\n      <Provider store={store}>\n          <AlertProvider template={AlertTemplate} {...options}>\n              <App />\n          </AlertProvider>\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}